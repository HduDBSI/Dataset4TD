comment,xgboost,mat,ggsatd,voting_label,annotator1_label,annotator2_label,annotator3_label,label
"/* TODO: If we are doing predicates, there is no point in pursuing		 closure operations if we reach a DFA state that uniquely predicts		 alternative. We will not be caching that DFA state and it is a		 waste to pursue the closure. Might have to advance when we do		 ambig detection thought :(		  */",1,1,1,1,-1,-1,-1,-1
"/** * Collects (create) rules, terminals, strings, actions, scopes etc... from AST *  side-effects: sets resolver field of asts for actions and *  defines predicates via definePredicateInAlt(), collects actions and stores *  in alts. *  TODO: remove side-effects! */",1,1,1,1,-1,-1,-1,-1
"/** * Compiler Warning 180. * * <p>chars ""a-f"" used multiple times in set [a-fc-m]</p> * * <pre> * A:    [aa-z];   // warning * B:    [a-fc-m]; // warning * </pre> * * TODO: Does not work with fragment rules. */",1,1,1,1,-1,-1,-1,-1
"/** * Convert the int list to a char array where values > 0x7FFFF take 2 bytes. TODO????? *  If all values are less *  than the 0x7FFF 16-bit code point limit (1 bit taken to indicatethen this is just a char array *  of 16-bit char as usual. For values in the supplementary range, encode * them as two UTF-16 code units. */",1,1,1,1,-1,-1,-1,-1
"/** * Find and replace *      ID*[','] with ID (',' ID)* *      ID+[','] with ID (',' ID)+ *      (x {action} y)+[','] with x {action} y (',' x {action} y)+ * *  Parameter must be a token. *  todo: do we want? */",1,1,1,1,-1,-1,-1,-1
"/** * For reference to rule r, build * *  o-e-&gt;(r)  o * *  where (r) is the start of rule r and the trailing o is not linked *  to from rule ref state directly (it's done thru the transition(0) *  RuleClosureTransition. * *  If the rule r is just a list of tokens, it's block will be just *  a set on an edge o-&gt;o-&gt;o-set-&gt;o-&gt;o-&gt;o, could inline it rather than doing *  the rule reference, but i'm not doing this yet as I'm not sure *  it would help much in the ATN-&gt;DFA construction. * *  TODO add to codegen: collapse alt blks that are sets into single matchSet * @param node */",1,1,0,1,-1,-1,-1,-1
"/** * From {@code A|B|..|Z} alternative block build * * <pre> *  o-&gt;o-A-&gt;o-&gt;o (last ATNState is BlockEndState pointed to by all alts) *  |          ^ *  |-&gt;o-B-&gt;o--| *  |          | *  ...        | *  |          | *  |-&gt;o-Z-&gt;o--| * </pre> * * So start node points at every alternative with epsilon transition and * every alt right side points at a block end ATNState. * <p> * Special case: only one alternative: don't make a block with alt * begin/end. * <p> * Special case: if just a list of tokens/chars/sets, then collapse to a * single edged o-set-&gt;o graph. * <p> * TODO: Set alt number (1..n) in the states? */",1,1,0,1,-1,-1,-1,-1
/** * No side-effects except for setting options into the appropriate node. *  TODO:  make the side effects into a separate pass this * * Invokes check rules for these: * * FILE_AND_GRAMMAR_NAME_DIFFER * LEXER_RULES_NOT_ALLOWED * PARSER_RULES_NOT_ALLOWED * CANNOT_ALIAS_TOKENS * ARGS_ON_TOKEN_REF * ILLEGAL_OPTION * REWRITE_OR_OP_WITH_NO_OUTPUT_OPTION * NO_RULES * REWRITE_FOR_MULTI_ELEMENT_ALT * HETERO_ILLEGAL_IN_REWRITE_ALT * AST_OP_WITH_NON_AST_OUTPUT_OPTION * AST_OP_IN_ALT_WITH_REWRITE * CONFLICTING_OPTION_IN_TREE_FILTER * WILDCARD_AS_ROOT * INVALID_IMPORT * TOKEN_VOCAB_IN_DELEGATE * IMPORT_NAME_CLASH * REPEATED_PREQUEL * TOKEN_NAMES_MUST_START_UPPER */,1,1,1,1,-1,-1,-1,-1
"/** * TODO: make all transitions sets? no, should remove set edges */",1,1,1,1,-1,-1,-1,-1
"/** * TODO: this is old comment: *  A tree of semantic predicates from the grammar AST if label==SEMPRED. *  In the ATN, labels will always be exactly one predicate, but the DFA *  may have to combine a bunch of them as it collects predicates from *  multiple ATN configurations into a single DFA state. */",1,1,1,1,-1,-1,-1,-1
/** * The interface for defining strategies to deal with syntax errors encountered * during a parse by ANTLR-generated parsers. We distinguish between three * different kinds of errors: * * <ul> * <li>The parser could not figure out which path to take in the ATN (none of * the available alternatives could possibly match)</li> * <li>The current input does not match what we were looking for</li> * <li>A predicate evaluated to false</li> * </ul> * * Implementations of this interface report syntax errors by calling * {@link Parser#notifyErrorListeners}. * * <p>TODO: what to do about lexers</p> */,1,1,0,1,-1,-1,-1,-1
"/** * We cannot execute predicates dependent upon local context unless * we know for sure we are in the correct context. Because there is * no way to do this efficiently, we simply cannot evaluate * dependent predicates unless we are in the rule that initially * invokes the ATN simulator. * * <p> * closure() tracks the depth of how far we dip into the outer context: * depth &gt; 0.  Note that it may not be totally accurate depth since I * don't ever decrement. TODO: make it a boolean then</p> * * <p> * For memory efficiency, the {@link #isPrecedenceFilterSuppressed} method * is also backed by this field. Since the field is publicly accessible, the * highest bit which would not cause the value to become negative is used to * store this field. This choice minimizes the risk that code which only * compares this value to 0 would be affected by the new purpose of the * flag. It also ensures the performance of the existing {@link ATNConfig} * constructors as well as certain operations like * {@link ATNConfigSet#add(ATNConfig, DoubleKeyMap)} method are * <em>completely</em> unaffected by the change.</p> */",1,1,0,1,-1,-1,-1,-1
// // Optimize away p||p and p&&p TODO: optimize() was a no-op,1,1,1,1,-1,-1,-1,-1
// HACK: multiplying with 1.1 should be replaced wit an accurate number,1,1,1,1,-1,-1,-1,-1
// TODO,1,1,0,1,-1,-1,-1,-1
// TODO (sam): should we really allow null here?,1,1,1,1,-1,-1,-1,-1
// TODO (sam): what to do when configs==null?,1,1,1,1,-1,-1,-1,-1
// TODO(wjkohnen): simplify to `while (stdout.Read() > 1) {}`,1,1,1,1,-1,-1,-1,-1
// TODO: CharBuffer.wrap(String) rightfully returns a read-only buffer,1,1,1,1,-1,-1,-1,-1
// TODO: Do we lose character or line position information?,1,1,1,1,-1,-1,-1,-1
// TODO: This test cannot pass unless we change either the grammar,1,1,1,1,-1,-1,-1,-1
// TODO: Token is missing (i.e. position in source is not displayed).,1,1,1,1,-1,-1,-1,-1
// TODO: add fatal for which phase? sync with ErrorManager,1,1,1,1,-1,-1,-1,-1
// TODO: allow doc comment in there,1,1,0,1,-1,-1,-1,-1
// TODO: can remove? only care when we add to set per middle of this method,1,1,1,1,-1,-1,-1,-1
// TODO: can we track conflicts as they are added to save scanning configs later?,1,1,1,1,-1,-1,-1,-1
"// TODO: check for invalid token/rule names, bad syntax",1,1,1,1,-1,-1,-1,-1
"// TODO: chk that all or no alts have ""# label""",1,1,0,1,-1,-1,-1,-1
// TODO: do we gen errors now?,1,1,1,1,-1,-1,-1,-1
// TODO: do we need?,1,1,1,1,-1,-1,-1,-1
// TODO: does not handle delayed errors per getSynValidOrSemInvalidAltThatFinishedDecisionEntryRule(),1,1,1,1,-1,-1,-1,-1
// TODO: don't include this node!!,1,1,1,1,-1,-1,-1,-1
// TODO: dup with tokenRef,1,1,1,1,-1,-1,-1,-1
// TODO: extra checks depending on rule kind?,1,1,1,1,-1,-1,-1,-1
// TODO: extra checks depending on terminal kind?,1,1,1,1,-1,-1,-1,-1
"// TODO: if the entry rule is invoked recursively, some",1,1,0,1,-1,-1,-1,-1
// TODO: maybe I need a Subrule object like Rule so these options mov to that?,1,1,1,1,-1,-1,-1,-1
// TODO: migrate to test framework,1,1,1,1,-1,-1,-1,-1
// TODO: move into ctx?,1,1,1,1,-1,-1,-1,-1
// TODO: move to basetree when i settle on how runtime works,1,1,1,1,-1,-1,-1,-1
// TODO: move to factory,1,1,1,1,-1,-1,-1,-1
// TODO: need something like: String goExecutable = locateGo();,1,1,1,1,-1,-1,-1,-1
// TODO: not yet implemented,1,1,1,1,-1,-1,-1,-1
// TODO: port to test framework (can we simplify the Psl grammar?),1,1,1,1,-1,-1,-1,-1
// TODO: port to test framework (missing templates),1,1,1,1,-1,-1,-1,-1
// TODO: port to test framework (not ported because test currently fails),1,1,1,1,-1,-1,-1,-1
// TODO: reuse other method,1,1,1,1,-1,-1,-1,-1
// TODO: should need just 1,1,1,1,1,-1,-1,-1,-1
// TODO: take out after stable if slow,1,1,1,1,-1,-1,-1,-1
"// TODO: these fields make me pretty uncomfortable but nice to pack up info together, saves recomputation",1,1,1,1,-1,-1,-1,-1
"// TODO: this strips the tree properly, but since text()",1,1,1,1,-1,-1,-1,-1
// TODO: track whether this is possible above during merge sort for speed,1,1,1,1,-1,-1,-1,-1
// TODO: try to remove,1,1,1,1,-1,-1,-1,-1
// TODO: useful in parser?,1,1,1,1,-1,-1,-1,-1
// TODO: we are separate now right?,1,1,1,1,-1,-1,-1,-1
// todo: isn't this Rule or something?,1,1,1,1,-1,-1,-1,-1
"// todo: update grammar, alter AST",1,1,0,1,-1,-1,-1,-1
"/**     * Compiler Warning 180.     *     * <p>chars ""a-f"" used multiple times in set [a-fc-m]</p>     *     * <pre>     * A:    [aa-z];   // warning     * B:    [a-fc-m]; // warning     * </pre>     *     * TODO: Does not work with fragment rules.     */",1,1,1,1,-1,-1,-1,-1
"/**     * Convert the int list to a char array where values > 0x7FFFF take 2 bytes. TODO?????     *  If all values are less     *  than the 0x7FFF 16-bit code point limit (1 bit taken to indicatethen this is just a char array     *  of 16-bit char as usual. For values in the supplementary range, encode     * them as two UTF-16 code units.     */",1,1,1,1,-1,-1,-1,-1
"/**     * Find and replace     *      ID*[','] with ID (',' ID)*     *      ID+[','] with ID (',' ID)+     *      (x {action} y)+[','] with x {action} y (',' x {action} y)+     *     *  Parameter must be a token.     *  todo: do we want?     */",1,1,1,1,-1,-1,-1,-1
"/**     * For reference to rule r, build     *     *  o-e-&gt;(r)  o     *     *  where (r) is the start of rule r and the trailing o is not linked     *  to from rule ref state directly (it's done thru the transition(0)     *  RuleClosureTransition.     *     *  If the rule r is just a list of tokens, it's block will be just     *  a set on an edge o-&gt;o-&gt;o-set-&gt;o-&gt;o-&gt;o, could inline it rather than doing     *  the rule reference, but i'm not doing this yet as I'm not sure     *  it would help much in the ATN-&gt;DFA construction.     *     *  TODO add to codegen: collapse alt blks that are sets into single matchSet     * @param node     */",1,1,0,1,-1,-1,-1,-1
"/**     * From {@code A|B|..|Z} alternative block build     *     * <pre>     *  o-&gt;o-A-&gt;o-&gt;o (last ATNState is BlockEndState pointed to by all alts)     *  |          ^     *  |-&gt;o-B-&gt;o--|     *  |          |     *  ...        |     *  |          |     *  |-&gt;o-Z-&gt;o--|     * </pre>     *     * So start node points at every alternative with epsilon transition and     * every alt right side points at a block end ATNState.     * <p>     * Special case: only one alternative: don't make a block with alt     * begin/end.     * <p>     * Special case: if just a list of tokens/chars/sets, then collapse to a     * single edged o-set-&gt;o graph.     * <p>     * TODO: Set alt number (1..n) in the states?     */",1,1,0,1,-1,-1,-1,-1
"/**     * We cannot execute predicates dependent upon local context unless     * we know for sure we are in the correct context. Because there is     * no way to do this efficiently, we simply cannot evaluate     * dependent predicates unless we are in the rule that initially     * invokes the ATN simulator.     *     * <p>     * closure() tracks the depth of how far we dip into the outer context:     * depth &gt; 0.  Note that it may not be totally accurate depth since I     * don't ever decrement. TODO: make it a boolean then</p>     *     * <p>     * For memory efficiency, the {@link #isPrecedenceFilterSuppressed} method     * is also backed by this field. Since the field is publicly accessible, the     * highest bit which would not cause the value to become negative is used to     * store this field. This choice minimizes the risk that code which only     * compares this value to 0 would be affected by the new purpose of the     * flag. It also ensures the performance of the existing {@link ATNConfig}     * constructors as well as certain operations like     * {@link ATNConfigSet#add(ATNConfig, DoubleKeyMap)} method are     * <em>completely</em> unaffected by the change.</p>     */",1,1,0,1,-1,-1,-1,-1
// // Optimize away p||p and p&&p TODO: optimize() was a no-op// for (int i = 0; i < altToPred.length; i++) {// altToPred[i] = altToPred[i].optimize();// }// nonambig alts are null in altToPred,1,1,1,1,-1,-1,-1,-1
"// System.out.println(""consuming char ""+(char)input.LA(1)+"" during recovery"");// re.printStackTrace();// TODO: Do we lose character or line position information?",1,1,1,1,-1,-1,-1,-1
"// TODO: CharBuffer.wrap(String) rightfully returns a read-only buffer// which doesn't expose its array, so we make a copy.",1,1,1,1,-1,-1,-1,-1
// TODO: This test cannot pass unless we change either the grammar// parser to decode surrogate pair literals to code points (which// would break existing clients) or to treat them as an// alternative://// '\\uD83C\\uDF0D' -> ('\\u{1F30E}' | '\\uD83C\\uDF0D')//// but I worry that might cause parse ambiguity if we're not careful.// @Test,1,1,1,1,-1,-1,-1,-1
// TODO: move to basetree when i settle on how runtime works// TODO: don't include this node!!// TODO: reuse other method,1,1,1,1,-1,-1,-1,-1
"// TODO: these fields make me pretty uncomfortable but nice to pack up info together, saves recomputation// TODO: can we track conflicts as they are added to save scanning configs later?",1,1,1,1,-1,-1,-1,-1
"// TODO: this strips the tree properly, but since text()// uses the start of stop token index and gets text from that// ineffectively ignores this routine.",1,1,1,1,-1,-1,-1,-1
"// execute actions anywhere in the start rule for a token.//// TODO: if the entry rule is invoked recursively, some// actions may be executed during the recursive call. The// problem can appear when hasEmptyPath() is true but// isEmpty() is false. In this case, the config needs to be// split into two contexts - one with just the empty path// and another with everything but the empty path.// Unfortunately, the current algorithm does not allow// getEpsilonTarget to return two configurations, so// additional modifications are needed before we can support// the split operation.",1,1,1,1,-1,-1,-1,-1
"// if combined grammar, gen Parser and Lexer will be done later// TODO: we are separate now right?",1,1,1,1,-1,-1,-1,-1
"// if we created same array as a or b, return that instead// TODO: track whether this is possible above during merge sort for speed",1,1,1,1,-1,-1,-1,-1
// no reach on current lookahead symbol. ERROR.// TODO: does not handle delayed errors per getSynValidOrSemInvalidAltThatFinishedDecisionEntryRule(),1,1,1,1,-1,-1,-1,-1
"/*                // TODO: it is a bug in Eclipse Photon.                try {                    treeViewer.expandToLevel(runnable.getResult(), 1, true);                } catch (Throwable e) {                    treeViewer.expandToLevel(runnable.getResult(), 1);                }*/",1,1,1,1,-1,-1,-1,-1
"/*             * FIXME:			 * 	Should copy the printer data to avoid threading issues,			 *	but this is currently not possible, see http://bugs.eclipse.org/297957			 */",1,1,0,1,-1,-1,-1,-1
/*         * FIXME: We have a pretty major problem with inheritance and managers         * FIXME: we search for constraint manager by class which is also a parent         * FIXME: for indexes and foreign keys this may lead to incorrect manager provided for key         * Temporary workaround - provide primary key before indexes and foreign keys in getChildTypes         */,1,1,1,1,-1,-1,-1,-1
/*    private String getHoverInfo()    {        String text = null;        IPreferenceStore store = DBWorkbench.getPlatform().getPreferenceStore();        for (Annotation annotation : annotations) {            if (annotation instanceof MarkerAnnotation) {                try {                    IMarker marker = ((MarkerAnnotation) annotation).getMarker();                    if (marker.getType().equals(SQLConstants.SYNTAX_MARKER_TYPE)                        || marker.getType().equals(SQLConstants.PORTABILITY_MARKER_TYPE)) {                        if (store.getBoolean(SQLPreferenceConstants.SHOW_SYNTAX_ERROR_DETAIL)) {                            text = (String) marker.getBinding(IMarker.MESSAGE);                        } else {                            text = (String) marker.getBinding(SQLConstants.SHORT_MESSAGE);                        }                        //TODO: consider combine multiple annotations                        break;                    }                }                catch (CoreException e) {                    log.error(e);                }            }        }        annotations.clear();        return text;    }*/,1,1,0,1,-1,-1,-1,-1
"/*    public static final String PROMPT = "">"";    public static final String COMMAND_ATTACH = ""A"";    public static final String COMMAND_CLOSE = ""X"";    public static final String COMMAND_STACK = ""S"";    public static final String COMMAND_FRAME = ""F"";    public static final String COMMAND_VARIABLES = ""V"";    public static final String COMMAND_VARIABLE_SET = ""="";    public static final String COMMAND_BREAKPOINT = ""B"";    public static final String COMMAND_BREAKPOINT_REMOVE = ""R"";    public static final String COMMAND_BREAKPOINT_LIST = ""L"";    public static final String COMMAND_CONTINUE = ""C"";    public static final String COMMAND_INTO = ""I"";    public static final String COMMAND_OVER = ""O"";    public static final String COMMAND_TERMINATE = ""E"";    public static final String COMMAND_SESSIONS = ""W"";    public static final String COMMAND_OBJ = ""D"";    public static final String COMMAND_NEW = ""N"";    public static final String COMMAND_DEBUG_LIST = ""Q"";    public static final String COMMAND_HELP = ""?"";    public static final String ANY_ARG = ""*"";    public static DBGVariable<?> chooseVariable(Scanner sc, DBGController controller, DBGSession session)            throws DBGException {        DBGVariable<?> v = null;        List<? extends DBGVariable<?>> vars = session.getVariables(null);        Scanner scArg;        if (vars.size() == 1) {            v = vars.get(0);        } else {            System.out.println(""Choose variable (0 for quit) :"");            int varNo = 1;            for (DBGVariable<?> cv : vars) {                System.out.println(String.format("" (%d) %s"", varNo++, cv.toString()));            }            int varId = -1;            while (varId < 0) {                String argc = sc.nextLine();                String strvarid = """";                scArg = new Scanner(argc);                if (scArg.hasNext()) {                    strvarid = scArg.next();                    if (strvarid.trim().length() > 0) {                        try {                            varId = Integer.valueOf(strvarid);                        } catch (Exception e) {                            System.out.println(String.format(""Incorrect var ID %s"", strvarid));                            varId = -1;                        }                        if (varId == 0) {                            break;                        }                        if (varId > vars.size()) {                            System.out.println(String.format(""Incorrect var ID %s"", strvarid));                            varId = -1;                        } else {                            v = vars.get(varId - 1);                            break;                        }                    }                }                scArg.close();            }        }        return v;    }    public static DBGBreakpointDescriptor chooseBreakpoint(Scanner sc, DBGController controller, DBGSession session)            throws DBGException {        DBGBreakpointDescriptor bp = null;        List<? extends DBGBreakpointDescriptor> bps = session.getBreakpoints();        Scanner scArg;        if (bps.size() == 1) {            bp = bps.get(0);        } else {            System.out.println(""Choose breakpoint (0 for quit) :"");            int bpNo = 1;            for (DBGBreakpointDescriptor b : bps) {                System.out.println(String.format("" (%d) %s"", bpNo++, b.toString()));            }            int bpId = -1;            while (bpId < 0) {                String argc = sc.nextLine();                String strBpid = """";                scArg = new Scanner(argc);                if (scArg.hasNext()) {                    strBpid = scArg.next();                    if (strBpid.trim().length() > 0) {                        try {                            bpId = Integer.valueOf(strBpid);                        } catch (Exception e) {                            System.out.println(String.format(""Incorrect session ID %s"", strBpid));                            bpId = -1;                        }                        if (bpId == 0) {                            break;                        }                        if (bpId > bps.size()) {                            System.out.println(String.format(""Incorrect breakpoint ID %s"", strBpid));                            bpId = -1;                        } else {                            bp = bps.get(bpId - 1);                            break;                        }                    }                }                scArg.close();            }        }        return bp;    }    public static DBGSession chooseSession(Scanner sc, DBGBaseController controller) throws DBGException {        DBGSession debugSession = null;        List<DBGSession> sessions = controller.getSessions();        Scanner scArg;        if (sessions.size() == 1) {            debugSession = sessions.get(0);        } else {            System.out.println(""Choose debug session (0 for quit) :"");            int sessNo = 1;            for (DBGSession s : sessions) {                System.out.println(String.format("" (%d) %s"", sessNo++, s.toString()));            }            int sessionId = -1;            while (sessionId < 0) {                String argc = sc.nextLine();                String strSessionid = """";                scArg = new Scanner(argc);                if (scArg.hasNext()) {                    strSessionid = scArg.next();                    if (strSessionid.trim().length() > 0) {                        try {                            sessionId = Integer.valueOf(strSessionid);                        } catch (Exception e) {                            System.out.println(String.format(""Incorrect session ID %s"", strSessionid));                            sessionId = -1;                        }                        if (sessionId == 0) {                            break;                        }                        if (sessionId > sessions.size()) {                            System.out.println(String.format(""Incorrect session ID %s"", strSessionid));                            sessionId = -1;                        } else {                            debugSession = sessions.get(sessionId - 1);                            break;                        }                    }                }                scArg.close();            }        }        return debugSession;    }    public static void main(String[] args) throws DBGException {        String url = ""jdbc:postgresql://192.168.229.133/postgres?user=postgres&password=postgres&ssl=false""; // ""jdbc:postgresql://localhost/postgres?user=postgres&password=postgres&ssl=false"";        DBPDataSourceContainer dataSource = null;        Connection conn;        DBGBaseController controller;        try {            conn = DriverManager.getConnection(url);        } catch (SQLException e) {            e.printStackTrace();            return;        }        // TODO: fix connection        controller = new PostgreDebugController(dataSource, new HashMap<>());        Scanner sc = new Scanner(System.in);        Scanner scArg;        String command;        while (true) {            System.out.print(PROMPT);            command = sc.next();            switch (command.toUpperCase()) {            case COMMAND_HELP:                System.out.println(""W Show sessions"");                System.out.println(""N New session"");                System.out.println(""D Show debug objects"");                System.out.println(""S Stack"");                System.out.println(""F Frame"");                System.out.println(""V Variables"");                System.out.println(""= Set Variables"");                System.out.println(""L List breakpoint(s)"");                System.out.println(""Q List debug session(s)"");                System.out.println(""B Set breakpoint"");                System.out.println(""R Remove breakpoint"");                System.out.println(""C Continue execution"");                System.out.println(""I Step into"");                System.out.println(""O Step over"");                System.out.println(""X Close session"");                System.out.println(""T Abort session"");                System.out.println(""E Exit debugger"");                System.out.println(""? This help"");                break;            case COMMAND_CLOSE:                if (controller.getSessions().size() == 0) {                    System.out.println(""Debug sessions not found"");                    break;                }                DBGSession debugSessionC = chooseSession(sc, controller);                if (debugSessionC == null) {                    break;                }                debugSessionC.closeSession(new VoidProgressMonitor());                System.out.println(""Session closed"");                break;            case COMMAND_STACK:                if (controller.getSessions().size() == 0) {                    System.out.println(""Debug sessions not found"");                    break;                }                DBGSession debugSessionSL = chooseSession(sc, controller);                if (debugSessionSL == null) {                    break;                }                List<? extends DBGStackFrame> stack = debugSessionSL.getStack();                if (stack.size() == 0) {                    System.out.println(""No stack defined"");                }                for (DBGStackFrame s : stack) {                    System.out.println(s.toString());                }                break;            case COMMAND_FRAME:                System.out.println(""FRAME!!!"");                break;            case COMMAND_VARIABLES:                if (controller.getSessions().size() == 0) {                    System.out.println(""Debug sessions not found"");                    break;                }                DBGSession debugSessionVL = chooseSession(sc, controller);                if (debugSessionVL == null) {                    break;                }                List<? extends DBGVariable<?>> vars = debugSessionVL.getVariables(null);                if (vars.size() == 0) {                    System.out.println(""No vars defined"");                }                for (DBGVariable<?> v : vars) {                    System.out.println(v.toString());                }                break;            case COMMAND_VARIABLE_SET:                String strVal = """";                String argcV = sc.nextLine();                if (argcV.length() > 0) {                    scArg = new Scanner(argcV);                    if (scArg.hasNext()) {                        strVal = scArg.next();                    }                    scArg.close();                }                if (controller.getSessions().size() == 0) {                    System.out.println(""Debug sessions not found"");                    break;                }                DBGSession debugSessionVS = chooseSession(sc, controller);                if (debugSessionVS == null) {                    break;                }                DBGVariable<?> var = chooseVariable(sc, controller, debugSessionVS);                if (var == null) {                    break;                }                debugSessionVS.setVariableVal(var, strVal);                System.out.println(String.format(""Variable Set %s"", strVal));                break;            case COMMAND_BREAKPOINT:                String strObjId = ANY_ARG;                String strLineNo = ANY_ARG;                String argc = sc.nextLine();                if (argc.length() > 0) {                    scArg = new Scanner(argc);                    if (scArg.hasNext()) {                        strObjId = scArg.next();                        if (scArg.hasNext()) {                            argc = scArg.nextLine();                            if (argc.length() > 0) {                                strLineNo = argc;                            }                        }                    }                    scArg.close();                }                Integer objId = -1;                try {                    objId = Integer.valueOf(strObjId.trim());                } catch (Exception e) {                    System.out.println(String.format(""Incorrect object ID '%s'"", strObjId));                    break;                }                int lineNo = -1;                if (strLineNo.trim().length() > 0) {                    try {                        lineNo = Integer.valueOf(strLineNo.trim());                    } catch (Exception e) {                        System.out.println(String.format(""Incorrect line number '%s'"", strLineNo));                        break;                    }                }                if (controller.getSessions().size() == 0) {                    System.out.println(""Debug sessions not found"");                    break;                }                DBGSession debugSession = chooseSession(sc, controller);                if (debugSession == null) {                    break;                }                PostgreDebugBreakpointDescriptor descriptor = lineNo > 0                        ? new PostgreDebugBreakpointDescriptor(1, lineNo, true)                        : new PostgreDebugBreakpointDescriptor(1, true);                debugSession.addBreakpoint(new VoidProgressMonitor(), descriptor);                System.out.println(""Breakpoint added"");                System.out.println(descriptor.toString());                break;            case COMMAND_BREAKPOINT_LIST:                if (controller.getSessions().size() == 0) {                    System.out.println(""Debug sessions not found"");                    break;                }                DBGSession debugSessionBL = chooseSession(sc, controller);                if (debugSessionBL == null) {                    break;                }                if (debugSessionBL.getBreakpoints().size() == 0) {                    System.out.println(""No breakpoints defined"");                }                for (DBGBreakpointDescriptor bpl : debugSessionBL.getBreakpoints()) {                    System.out.println(bpl.toString());                }                break;            case COMMAND_BREAKPOINT_REMOVE:                if (controller.getSessions().size() == 0) {                    System.out.println(""Debug sessions not found"");                    break;                }                DBGSession debugSessionBR = chooseSession(sc, controller);                if (debugSessionBR == null) {                    break;                }                if (debugSessionBR.getBreakpoints().size() == 0) {                    System.out.println(""No breakpoints defined"");                }                DBGBreakpointDescriptor bpr = chooseBreakpoint(sc, controller, debugSessionBR);                debugSessionBR.removeBreakpoint(new VoidProgressMonitor(), bpr);                System.out.println(""Breakpoint removed ..."");                break;            case COMMAND_CONTINUE:                if (controller.getSessions().size() == 0) {                    System.out.println(""Debug sessions not found"");                    break;                }                DBGSession debugSessionSC = chooseSession(sc, controller);                if (debugSessionSC == null) {                    break;                }                debugSessionSC.execContinue();                System.out.println(""Continue ..."");                break;            case COMMAND_INTO:                if (controller.getSessions().size() == 0) {                    System.out.println(""Debug sessions not found"");                    break;                }                DBGSession debugSessionSI = chooseSession(sc, controller);                if (debugSessionSI == null) {                    break;                }                debugSessionSI.execStepInto();                System.out.println(""Step Into ..."");                break;            case COMMAND_OVER:                if (controller.getSessions().size() == 0) {                    System.out.println(""Debug sessions not found"");                    break;                }                DBGSession debugSessionSO = chooseSession(sc, controller);                if (debugSessionSO == null) {                    break;                }                debugSessionSO.execStepOver();                System.out.println(""Step over ..."");                break;            case COMMAND_SESSIONS:                break;            case COMMAND_DEBUG_LIST:                if (controller.getSessions().size() == 0) {                    System.out.println(""no debug sessions"");                    break;                }                for (DBGSession s : controller.getSessions()) {                    System.out.println(s);                }                break;            case COMMAND_NEW:                try {                    Connection debugConn = DriverManager.getConnection(url);                    // TODO: fix connection                    DBCExecutionContext executionContext = null;                    DBGSession s = controller.createSession(new VoidProgressMonitor(), new HashMap<>());                    System.out.println(""created"");                    System.out.println(s);                } catch (SQLException e) {                    e.printStackTrace();                    break;                }                break;            case COMMAND_OBJ:                String proc = ANY_ARG;                String owner = ANY_ARG;                String arg = sc.nextLine();                if (arg.length() > 0) {                    scArg = new Scanner(arg);                    if (scArg.hasNext()) {                        proc = scArg.next();                        if (scArg.hasNext()) {                            arg = scArg.nextLine();                            if (arg.length() > 0) {                                owner = arg;                            }                        }                    }                    scArg.close();                }                break;            case COMMAND_ATTACH:                if (controller.getSessions().size() == 0) {                    System.out.println(""Debug sessions not found"");                    break;                }                DBGSession debugSessionA = chooseSession(sc, controller);                if (debugSessionA == null) {                    break;                }                System.out.println(""Waiting for target session ..."");                // FIXME:AF: Andrew, please migrate to                // attach(JDBCExecutionContext connection,int OID,int targetPID)                // API                // debugSessionA.attach(false);                break;            case COMMAND_TERMINATE:                System.out.println(""EXIT....."");                return;            default:                System.out.println(String.format(""Unnown command '%s' for command list type ?"", command));                break;            }        }    }*/",1,1,0,1,-1,-1,-1,-1
/* HACK: antialiasing occupies one extra pixel */,1,1,1,1,-1,-1,-1,-1
"/* TODO: should throw this immediately, but need artifact        else        {            throw new OverConstrainedVersionException( ""Restricting incompatible version ranges"" );        }*/",1,1,1,1,-1,-1,-1,-1
/** * Copy-pasted from PostgreSQL implementation. * TODO: Vertica is originally based on PG. Maybe we should refactor this stuff somehow. */,1,1,1,1,-1,-1,-1,-1
/** * DBTTaskConfigPanel. * TODO: move it to UI module and use real classes instead of Object */,1,1,1,1,-1,-1,-1,-1
/** * Eclipse hack. Disables/enabled all key bindings in specified site's part. Works only if host editor is extender of * AbstractTextEditor Uses reflection because setActionActivation is private method * TODO: find better way to disable key bindings or prioritize event handling to widgets * * @param partSite workbench part site * @param enable enable or disable */,1,1,1,1,-1,-1,-1,-1
/** * FIXME: this is a hack. We need to call platform (workbench) to refresh part's contexts (enabled commands). * There is no such thing as part in abstract UI. Need some better solution. */,1,1,1,1,-1,-1,-1,-1
"/** * It is a hack function. Generally all command associated widgets should be updated automatically by framework. * Freaking E4 do not do it. I've spent a couple of days fighting it. Guys, you owe me. */",1,1,1,1,-1,-1,-1,-1
/** * ResultSetViewer * * TODO: not-editable cells (struct owners in record mode) * TODO: PROBLEM. Multiple occurrences of the same struct type in a single table. * Need to make wrapper over DBSAttributeBase or something. Or maybe it is not a problem * because we search for binding by attribute only in constraints and for unique key columns which are unique? * But what PK has struct type? */,1,1,1,1,-1,-1,-1,-1
/** * Returns cell information. * TODO: add returnColors parameter for optimization */,1,1,1,1,-1,-1,-1,-1
/** * SQL editor input factory. * It is left for backward compatibility (for old DBeaver versions and SQL editors saved with this factory). * TODO: remove it at some moment */,1,1,1,1,-1,-1,-1,-1
"/** * SQLTokensParser * TODO: check comment characters from syntax manager, not constants */",1,1,1,1,-1,-1,-1,-1
"/** * Shortens a supplied string so that it fits within the area specified by * the width argument. Strings that have been shorted have an ""..."" attached * to the end of the string. The width is computed using the * {@link org.eclipse.swt.graphics.GC#stringExtent(String)}. * <p/> * Text shorten removed due to awful algorithm (it works really slow on long strings). * TODO: make something better * * @param fontMetrics    fontMetrics used to perform calculation. * @param t     text to modify. * @param width Pixels to display. * @return shortened string that fits in area specified. */",1,1,0,1,-1,-1,-1,-1
"/** * This class contains the hippie completion engine methods that actually * compute the possible completions. * <p> * This engine is used by the <code>org.eclipse.ui.texteditor.HippieCompleteAction</code>. * </p> * <p> * TODO: Sort by editor type * TODO: Provide history option * * @author Genady Beryozkin, me@genady.org * @since 3.1 */",1,1,1,1,-1,-1,-1,-1
/** * This is a hack. * Editors should listen txn commit/rollback and update their dirty flag (active transaction makes SQL editor dirty). * Making each editor QM listener is too expensive. */,1,1,1,1,-1,-1,-1,-1
/** * We disable provider bundle as classes source because is contains JNA dependency * which conflicts with Waffle (which contains JNA 4.5). * Technically it is a hack. * Solution: move all JNA-dependent functions to a separate bundle. */,1,1,1,1,-1,-1,-1,-1
/** * WorkbenchContextListener. * Listens workbench parts activations/deactivation and activates contexts for navigator and SQL editors. * * TODO: add multipage editor listener and folder listener. Maybe use focus listener on control */,1,1,1,1,-1,-1,-1,-1
// $TODO,1,1,0,1,-1,-1,-1,-1
"// $TODO instead of performing a final normal layout, what about setting",1,1,1,1,-1,-1,-1,-1
// // FIXME: This doesn't work as data type information is not available during RS metadata reading,1,1,0,1,-1,-1,-1,-1
"// Assert.assertEquals(intList, PostgreValueParser.parseArrayString(""ARRAY[1,22,333]"", "",""));// todo: add array format support",1,1,1,1,-1,-1,-1,-1
// Data managers (FIXME: model_jdbc_ is a legacy prefix),1,1,0,1,-1,-1,-1,-1
// Dirty hack,1,1,1,1,-1,-1,-1,-1
// FIXME,1,1,0,1,-1,-1,-1,-1
"// FIXME That should be removed as soon as Edge will be fixed, this is an awfull hack",1,1,1,1,-1,-1,-1,-1
// FIXME i18ze + tooltip,1,1,0,1,-1,-1,-1,-1
// FIXME:,1,1,0,1,-1,-1,-1,-1
// FIXME: ? adding self as parent change listener produces too many events. And this seems to be senseless.,1,1,1,1,-1,-1,-1,-1
// FIXME: ???,1,1,0,1,-1,-1,-1,-1
// FIXME: Cannot use constant due to circular dependency.,1,1,0,1,-1,-1,-1,-1
// FIXME: Do not call setCatalog/Schema on legacy ODBC driver,1,1,0,1,-1,-1,-1,-1
// FIXME: Do we need extra re-layout?,1,1,0,1,-1,-1,-1,-1
// FIXME: Doesn't work if the containing row has collection attributes whose values are NULL,1,1,0,1,-1,-1,-1,-1
// FIXME: Drop-downs are too high - lead to minor UI glitches during editor opening. Also they don't make much sense.,1,1,0,1,-1,-1,-1,-1
// FIXME: Hack for hiding non-expanded column elements. Will break once nested collection support is added.,1,1,1,1,-1,-1,-1,-1
// FIXME: In any case we have to remove listener at dispose to avoid leaks and dead links.,1,1,0,1,-1,-1,-1,-1
// FIXME: Is always caused by arrays of structures. They are not supported now,1,1,0,1,-1,-1,-1,-1
// FIXME: Not secure at all!!!,1,1,0,1,-1,-1,-1,-1
// FIXME: On Oracle it returns bigger values than maximum (#1767),1,1,0,1,-1,-1,-1,-1
// FIXME: Sources may be different and thus may have a different set of attributes,1,1,0,1,-1,-1,-1,-1
// FIXME: Test on sakila.film.description,1,1,0,1,-1,-1,-1,-1
// FIXME: This is a very dirty hack but I didn't find any better way to patch search action icons,1,1,1,1,-1,-1,-1,-1
// FIXME: This may happen in some crazy cases -,1,1,1,1,-1,-1,-1,-1
// FIXME: This produces double indent - #3679. But still needed in some cases?,1,1,0,1,-1,-1,-1,-1
// FIXME: This type has day precision inside type name. Like INTERVAL DAY(2) TO SECOND(6). So far we can't show it (But we do it in Column Manager),1,1,0,1,-1,-1,-1,-1
// FIXME: To update main toolbar and other controls we hade and show this editor,1,1,0,1,-1,-1,-1,-1
// FIXME: because we always read all indexes. Make index cache lookup cache,1,1,0,1,-1,-1,-1,-1
// FIXME: bug in Eclipse. To remove in future.,1,1,1,1,-1,-1,-1,-1
// FIXME: but i'm not 100% sure.,1,1,0,1,-1,-1,-1,-1
// FIXME: but it will require to provide dynamic document metadata.,1,1,0,1,-1,-1,-1,-1
// FIXME: but it works after short pause. Seems to be a bug in E4 command framework,1,1,1,1,-1,-1,-1,-1
// FIXME: coloring value before and after range. Maybe we need an option for this.,1,1,0,1,-1,-1,-1,-1
// FIXME: copied from editors.data constants. Need to move it in general colors configuration,1,1,0,1,-1,-1,-1,-1
// FIXME: dashboards must be queued in auto-commit mode?,1,1,0,1,-1,-1,-1,-1
// FIXME: do not add extra contributions as they will be there forever (never cleaned up),1,1,0,1,-1,-1,-1,-1
// FIXME: do not create rows twice! Probably need to delete comment after testing. #9095,1,1,0,1,-1,-1,-1,-1
// FIXME: do not escape! it may (will) escape identifiers twice,1,1,0,1,-1,-1,-1,-1
// FIXME: do not refresh documents for now. Can be solved by extracting document ID attributes,1,1,0,1,-1,-1,-1,-1
// FIXME: do not sync expensive operations,1,1,0,1,-1,-1,-1,-1
// FIXME: do not update all refreshed items in (it is too expensive),1,1,0,1,-1,-1,-1,-1
"// FIXME: error ""Comparison method violates its general contract!"" happens in case of long strings sorting",1,1,0,1,-1,-1,-1,-1
// FIXME: for now we support only predefined list of formatters,1,1,0,1,-1,-1,-1,-1
// FIXME: here we cache all tables to avoid spam in table lookup,1,1,0,1,-1,-1,-1,-1
// FIXME: https://stackoverflow.com/questions/23975205/why-does-converting-java-dates-before-1582-to-localdate-with-instant-give-a-diff,1,1,0,1,-1,-1,-1,-1
// FIXME: implemented deep nested collections support,1,1,0,1,-1,-1,-1,-1
// FIXME: in other DBs it equals to precision in most cases,1,1,0,1,-1,-1,-1,-1
// FIXME: it doesn't work!!,1,1,0,1,-1,-1,-1,-1
"// FIXME: it is a hack (to avoid asking ""Save script?"" because editor is marked as dirty while queries are running)",1,1,1,1,-1,-1,-1,-1
// FIXME: it looks like a good idea but in fact iti s not. We can't convert ZonedDateTime into,1,1,1,1,-1,-1,-1,-1
// FIXME: left for backward compatibility. Replaced by auth model. Remove in future.,1,1,0,1,-1,-1,-1,-1
// FIXME: make it better,1,1,0,1,-1,-1,-1,-1
// FIXME: max length is actually length in character.,1,1,0,1,-1,-1,-1,-1
// FIXME: maybe some better workaround?,1,1,1,1,-1,-1,-1,-1
"// FIXME: on dark theme, the borders aren't distinguishable from the background for whatever reason",1,1,0,1,-1,-1,-1,-1
// FIXME: process named parameters,1,1,0,1,-1,-1,-1,-1
// FIXME: proper SQL timestamp for pre-historic (pre-Gregorian) dates.,1,1,0,1,-1,-1,-1,-1
"// FIXME: reconciling is turned off here because it's a cause of deadlocks and severe UI glitches. The exact cause is unknown, find a more precise solution. [dbeaver/dbeaver#11452]",1,1,1,1,-1,-1,-1,-1
// FIXME: remove as a silly workaround,1,1,1,1,-1,-1,-1,-1
// FIXME: restrict private projects delete,1,1,0,1,-1,-1,-1,-1
// FIXME: silly workaround. Command state update doesn't happen in some cases,1,1,1,1,-1,-1,-1,-1
// FIXME: so we will shift LocalDateTime in getAttributeValue instead,1,1,0,1,-1,-1,-1,-1
// FIXME: special workaround for Oracle,1,1,1,1,-1,-1,-1,-1
// FIXME: starte/end block. Do we need them here?,1,1,1,1,-1,-1,-1,-1
// FIXME: string does not support escape sequences,1,1,0,1,-1,-1,-1,-1
// FIXME: this is a EGIT hack,1,1,1,1,-1,-1,-1,-1
// FIXME: this is a dirty hack because I'm too lazy to make proper registry/adapter for formatter UI configurators,1,1,1,1,-1,-1,-1,-1
// FIXME: this is a hack,1,1,1,1,-1,-1,-1,-1
// FIXME: this is a hack. We can't fire event on resource change so editor's state won't be updated in UI.,1,1,1,1,-1,-1,-1,-1
// FIXME: use composite cache or something smart,1,1,0,1,-1,-1,-1,-1
// FIXME: use getValueAsIs because getValue fails in multi-language environment,1,1,0,1,-1,-1,-1,-1
"// FIXME: use real parser (nested arrays, quotes escape, etc)",1,1,0,1,-1,-1,-1,-1
// FIXME: use some generic approach,1,1,0,1,-1,-1,-1,-1
// FIXME: we can't switch to auto-commit because connection may be used by another tasks (e.g. SQL editor),1,1,0,1,-1,-1,-1,-1
// FIXME: we can't throw error here because too many,1,1,0,1,-1,-1,-1,-1
// FIXME: we need to run with progress service bu we can't change active control focus,1,1,0,1,-1,-1,-1,-1
// FIXME: we should keep in variable or do not keep it at all (use separate interface),1,1,0,1,-1,-1,-1,-1
"// FIXME:AF: looks poor anyway, provide fluent-style API",1,1,1,1,-1,-1,-1,-1
"// FIXME:AF: migrate to org.jkiss.dbeaver.runtime.ui bundle, to extract widget creation from UIUtils",1,1,0,1,-1,-1,-1,-1
// FIXME:AF: register adapters,1,1,0,1,-1,-1,-1,-1
// HACK: Will force SWT to use IE instead. We can't use SWT.DEFAULT because it might resolve to SWT.EDGE,1,1,1,1,-1,-1,-1,-1
// Hack for Redshift SP support,1,1,1,1,-1,-1,-1,-1
// Hacking different MySQL drivers zeroDateTimeBehavior property (#4103),1,1,0,1,-1,-1,-1,-1
// Hacky flag too. Skip nodes (producer and consumer) update,1,1,1,1,-1,-1,-1,-1
// Hacky flag. Says that pipe selection is frozen.,1,1,1,1,-1,-1,-1,-1
"// Infinity, -Infinity, NaN //todo",1,1,0,1,-1,-1,-1,-1
// It is a bit hacky function because we need to bind custom attributes (usually this happens during data read),1,1,1,1,-1,-1,-1,-1
// It is a hack to allow auto-complete with TAB key (#2316),1,1,1,1,-1,-1,-1,-1
// It is a hack. As context menu create is called from base lcass constructor we can't use any constructor parameters in fillContextMenu.,1,1,1,1,-1,-1,-1,-1
// Kind of a hack (#7459). Don't know any better way to distinguish floats from integers,1,1,1,1,-1,-1,-1,-1
// TODO Auto-generated catch block,1,1,1,1,-1,-1,-1,-1
// TODO Auto-generated constructor stub,1,1,1,1,-1,-1,-1,-1
// TODO Auto-generated method stub,1,1,1,1,-1,-1,-1,-1
// TODO DF: @Properties does not handle SQLXML types.,1,1,1,1,-1,-1,-1,-1
// TODO DF: Bad should be BTYPE+BSCHEMA+BNAME,1,1,1,1,-1,-1,-1,-1
"// TODO DF: No idea what to do with this method, what it is used for...",1,1,1,1,-1,-1,-1,-1
// TODO DF: Tables in SYSTOOLS tables must exist first,1,1,1,1,-1,-1,-1,-1
// TODO DF: Work in progess,1,1,1,1,-1,-1,-1,-1
"// TODO DF: beurk: Consequences of ""Integrated cache"" that can not be created in class def= NPE with managers",1,1,1,1,-1,-1,-1,-1
// TODO DF: many things in this class could probably be factorized or generic-field,1,1,1,1,-1,-1,-1,-1
// TODO DF: to be factorised,1,1,1,1,-1,-1,-1,-1
// TODO change hardcoded eula version to something more flexible,1,1,1,1,-1,-1,-1,-1
// TODO handle this better,1,1,1,1,-1,-1,-1,-1
// TODO if it will be needed,1,1,1,1,-1,-1,-1,-1
// TODO validate stack consistency along the part,1,1,1,1,-1,-1,-1,-1
// TODO:,1,1,0,1,-1,-1,-1,-1
// TODO: 8/26/2022 Add support for editing nested cells,1,1,1,1,-1,-1,-1,-1
// TODO: Do we need to sanitize input data here?,1,1,1,1,-1,-1,-1,-1
// TODO: Is 'WHERE' even supposed to be here?,1,1,1,1,-1,-1,-1,-1
// TODO: May be we should make ObjectChangeCommand static,1,1,1,1,-1,-1,-1,-1
// TODO: REPLACE WITH ZEST!,1,1,1,1,-1,-1,-1,-1
// TODO: Show current driver info somehow. setMessage is super-slow (it re-layouts entire wizard dialog),1,1,1,1,-1,-1,-1,-1
"// TODO: This does not cover XYM dimension, need to find a better solution",1,1,1,1,-1,-1,-1,-1
"// TODO: Use of DRAG_MINIMUM is a kludge, required because SashForm only allows you to close each part so far",1,1,1,1,-1,-1,-1,-1
// TODO: [#2824] Perhaps we should just use type names declared in pg_catalog,1,1,1,1,-1,-1,-1,-1
// TODO: check if obsolete,1,1,1,1,-1,-1,-1,-1
// TODO: check type,1,1,1,1,-1,-1,-1,-1
// TODO: could be more efficient by sorting the list and then moving along the restrictions in order?,1,1,1,1,-1,-1,-1,-1
"// TODO: currently, we do not search for data types, although it's absolutely possible.",1,1,1,1,-1,-1,-1,-1
// TODO: direct custom foreign key creation. show columns list,1,1,1,1,-1,-1,-1,-1
// TODO: dummy object should be shown as plain text without non-working hyperlink,1,1,1,1,-1,-1,-1,-1
// TODO: event-based schedulers not supported yet,1,1,1,1,-1,-1,-1,-1
// TODO: find some solution.,1,1,1,1,-1,-1,-1,-1
// TODO: find view dependencies and generate them in right order,1,1,1,1,-1,-1,-1,-1
// TODO: implement,1,1,1,1,-1,-1,-1,-1
// TODO: implement deep cascade,1,1,1,1,-1,-1,-1,-1
// TODO: implement real properties checks. Now enable all profiles with !prop,1,1,1,1,-1,-1,-1,-1
// TODO: implement some other behavior,1,1,1,1,-1,-1,-1,-1
// TODO: invalidate ALL contexts,1,1,1,1,-1,-1,-1,-1
// TODO: investigate - cluster edges makes diagram ugly,1,1,1,1,-1,-1,-1,-1
// TODO: it looks like SWT error. Sometimes tree items are disposed and NPE is thrown from column.pack,1,1,1,1,-1,-1,-1,-1
// TODO: its an ugly hack. Need a better way,1,1,1,1,-1,-1,-1,-1
// TODO: kludge see SashForm.DRAG_MINIMUM,0,1,1,1,-1,-1,-1,-1
// TODO: load drivers config,1,1,1,1,-1,-1,-1,-1
// TODO: make icon update. Can't call setImage because this will break contract f VerticalButton,1,1,1,1,-1,-1,-1,-1
// TODO: make it a combo and fill it with appropriate roles,1,1,1,1,-1,-1,-1,-1
// TODO: maybe we should include optional or PROVIDED,1,1,1,1,-1,-1,-1,-1
// TODO: move this transformation into SQLDialect,1,1,1,1,-1,-1,-1,-1
// TODO: need to re-validate. Maybe cache will break some lazy loaded bundles?,1,1,1,1,-1,-1,-1,-1
// TODO: perhaps we should test ContentAssistant.isProposalPopupActive() here?,1,1,1,1,-1,-1,-1,-1
// TODO: read data from pg_range,1,1,1,1,-1,-1,-1,-1
// TODO: really?,1,1,1,1,-1,-1,-1,-1
"// TODO: remove ""object"" parameter",1,1,1,1,-1,-1,-1,-1
// TODO: remove bootstrap preferences later. PResent for config backward compatibility,1,1,1,1,-1,-1,-1,-1
// TODO: remove in some older version,1,1,1,1,-1,-1,-1,-1
// TODO: replace this hardcode with some model invocation,1,1,1,1,-1,-1,-1,-1
// TODO: replace with something smarter,1,1,1,1,-1,-1,-1,-1
// TODO: set tableAlias for all column references in expression,1,1,1,1,-1,-1,-1,-1
// TODO: should handle VisibilityWindowListener.show and .hide events,1,1,1,1,-1,-1,-1,-1
// TODO: some drivers (DB2) always mark all columns as read only. Dunno why. So let's ignore this property,1,1,1,1,-1,-1,-1,-1
// TODO: support active scheduler configuration,1,1,1,1,-1,-1,-1,-1
// TODO: support of 3.5.1 -> 3.5.2 maven dependencies migration,1,1,1,1,-1,-1,-1,-1
// TODO: we need to add value handlers for all PG data types.,1,1,1,1,-1,-1,-1,-1
// TODO: what the reason to do it???,1,1,1,1,-1,-1,-1,-1
// This is a hack. On MacOS buttons don't get focus so when user closes dialog,1,1,1,1,-1,-1,-1,-1
// This is a hack. We need to update main toolbar. By design toolbar should be updated along with command state,1,1,1,1,-1,-1,-1,-1
// ToDo: fix regex,1,1,1,1,-1,-1,-1,-1
// XXX: make this user definable,1,1,1,1,-1,-1,-1,-1
// fixme it's a copy from navigator utils,1,1,0,1,-1,-1,-1,-1
// fixme rewrite,1,1,0,1,-1,-1,-1,-1
// todo simplify,1,1,1,1,-1,-1,-1,-1
// todo use monitor,1,1,1,1,-1,-1,-1,-1
"// todo: add support alternatives to ""true/false""",1,1,1,1,-1,-1,-1,-1
"// todo: add support of alternatives to ""true/false""",1,1,1,1,-1,-1,-1,-1
// todo: unquote numbers,1,1,1,1,-1,-1,-1,-1
/**     * Copy-pasted from PostgreSQL implementation.     * TODO: Vertica is originally based on PG. Maybe we should refactor this stuff somehow.     */,1,1,1,1,-1,-1,-1,-1
/**     * Eclipse hack. Disables/enabled all key bindings in specified site's part. Works only if host editor is extender of     * AbstractTextEditor Uses reflection because setActionActivation is private method     * TODO: find better way to disable key bindings or prioritize event handling to widgets     *     * @param partSite workbench part site     * @param enable enable or disable     */,1,1,1,1,-1,-1,-1,-1
/**     * FIXME: this is a hack. We need to call platform (workbench) to refresh part's contexts (enabled commands).     * There is no such thing as part in abstract UI. Need some better solution.     */,1,1,1,1,-1,-1,-1,-1
"/**     * It is a hack function. Generally all command associated widgets should be updated automatically by framework.     * Freaking E4 do not do it. I've spent a couple of days fighting it. Guys, you owe me.     */",1,1,1,1,-1,-1,-1,-1
/**     * Returns cell information.     * TODO: add returnColors parameter for optimization     */,1,1,1,1,-1,-1,-1,-1
"/**     * Shortens a supplied string so that it fits within the area specified by     * the width argument. Strings that have been shorted have an ""..."" attached     * to the end of the string. The width is computed using the     * {@link org.eclipse.swt.graphics.GC#stringExtent(String)}.     * <p/>     * Text shorten removed due to awful algorithm (it works really slow on long strings).     * TODO: make something better     *     * @param fontMetrics    fontMetrics used to perform calculation.     * @param t     text to modify.     * @param width Pixels to display.     * @return shortened string that fits in area specified.     */",1,1,0,1,-1,-1,-1,-1
/**     * We disable provider bundle as classes source because is contains JNA dependency     * which conflicts with Waffle (which contains JNA 4.5).     * Technically it is a hack.     * Solution: move all JNA-dependent functions to a separate bundle.     */,1,1,1,1,-1,-1,-1,-1
"// #271, #501: in some databases (AWS?) pg_authid is not accessible// FIXME: maybe some better workaround?",1,1,1,1,-1,-1,-1,-1
"// $TODO instead of performing a final normal layout, what about setting// progress=1.0?",1,1,1,1,-1,-1,-1,-1
"// ------------------------// Generate DDL// ------------------------// DF: Use ""Undocumented"" SYSPROC.DB2LK_GENERATE_DDL stored proc// Ref to db2look :// http://pic.dhe.ibm.com/infocenter/db2luw/v10r5/topic/com.ibm.db2.luw.admin.cmd.doc/doc/r0002051.html//// Options of db2look that do not seem to work: -dp . ""-a"" seems to work on v10.1+, ""-l"" seems OK in all versions//// TODO DF: Tables in SYSTOOLS tables must exist first",1,1,1,1,-1,-1,-1,-1
// // FIXME: This doesn't work as data type information is not available during RS metadata reading// DBSDataType dataType = DBUtils.getDataType(typedObject);// if (dataType instanceof PostgreDataType && ((PostgreDataType) dataType).getTypeCategory() == PostgreTypeCategory.E) {// return PostgreEnumValueHandler.INSTANCE;// },1,1,0,1,-1,-1,-1,-1
// Add delimiter in the end of query. Do this only for semicolon delimiters.// For SQL server add it in the end of query. For Oracle only after END clause// Quite dirty workaround needed for Oracle and SQL Server.// TODO: move this transformation into SQLDialect,1,1,1,1,-1,-1,-1,-1
"// Assert.assertEquals(doublesList, PostgreValueParser.parseArrayString(""ARRAY[1.123,2.1421324124421]"", "",""));// Infinity, -Infinity, NaN //todo",1,1,0,1,-1,-1,-1,-1
// Check for disposed items// TODO: it looks like SWT error. Sometimes tree items are disposed and NPE is thrown from column.pack,1,1,1,1,-1,-1,-1,-1
// Control-based handler activation disabled for now (as it requires workbench site and thus doesn't work in dialogs)// However current handlers also don't work in dialogs as they are mapped on activePart.// TODO: find some solution.,1,1,1,1,-1,-1,-1,-1
// DF: Clear base index/trigger cache manually.// FIXME: use composite cache or something smart,1,1,0,1,-1,-1,-1,-1
// Dirty hack// Get contribution item from menu item and check it's ID,1,1,1,1,-1,-1,-1,-1
// Drivers// TODO: load drivers config// External configurations,1,1,1,1,-1,-1,-1,-1
"// Edge uses callbacks which have a lowest priority in UI// So if dispose is sent during that operation this will lead to initialization// on already disposed composite, we don't want this at all// We can prevent this error by delaying dispose in independent thread operation to allow Edge to finish its// initialization to be disposed properly// FIXME That should be removed as soon as Edge will be fixed, this is an awfull hack",1,1,0,1,-1,-1,-1,-1
"// Escape replace string if required// FIXME: do not escape! it may (will) escape identifiers twice// replaceString = DBUtils.getQuotedIdentifier(dataSource, replaceString);",1,1,0,1,-1,-1,-1,-1
// FIXME// TasksUiUtil.openTasksViewInActivePerspective().setFocus();,1,1,0,1,-1,-1,-1,-1
// FIXME: ? adding self as parent change listener produces too many events. And this seems to be senseless.// FIXME: but i'm not 100% sure.// FIXME: In any case we have to remove listener at dispose to avoid leaks and dead links.// parentStore.addPropertyChangeListener(this);,0,1,1,1,-1,-1,-1,-1
// FIXME: Do we need extra re-layout?// Need listener to force a layout,1,1,0,1,-1,-1,-1,-1
// FIXME: Not secure at all!!!// However some people need to use self-signed and untrusted server.// Crap.,1,1,1,1,-1,-1,-1,-1
"// FIXME: This may happen in some crazy cases -// FIXME: error ""Comparison method violates its general contract!"" happens in case of long strings sorting// FIXME: Test on sakila.film.description",1,1,0,1,-1,-1,-1,-1
// FIXME: This produces double indent - #3679. But still needed in some cases?// Initially was added for proper MySQL views formatting.// indent++;,1,1,0,1,-1,-1,-1,-1
// FIXME: dashboards must be queued in auto-commit mode?// FIXME: we can't switch to auto-commit because connection may be used by another tasks (e.g. SQL editor),1,1,0,1,-1,-1,-1,-1
// FIXME: do not add extra contributions as they will be there forever (never cleaned up)// if (activeFolderContributor instanceof EditorActionBarContributor) {// ((EditorActionBarContributor) activeFolderContributor).contributeToStatusLine(// actionBars.getStatusLineManager());// },1,1,0,1,-1,-1,-1,-1
// FIXME: do not refresh documents for now. Can be solved by extracting document ID attributes// FIXME: but it will require to provide dynamic document metadata.,1,1,0,1,-1,-1,-1,-1
// FIXME: do not sync expensive operations// synchronized (allContexts) {,1,1,0,1,-1,-1,-1,-1
"// FIXME: do not update all refreshed items in (it is too expensive)// getModel().fireNodeUpdate(source, oldChild, DBNEvent.NodeChange.REFRESH);",1,1,0,1,-1,-1,-1,-1
// FIXME: here we cache all tables to avoid spam in table lookup// FIXME: because we always read all indexes. Make index cache lookup cache,1,1,0,1,-1,-1,-1,-1
"// FIXME: it is a hack (to avoid asking ""Save script?"" because editor is marked as dirty while queries are running)// FIXME: make it better",1,1,1,1,-1,-1,-1,-1
// FIXME: restrict private projects delete// activeProject.isPrivateProject(),1,1,0,1,-1,-1,-1,-1
"// FIXME: starte/end block. Do we need them here?// this.session.getProgressMonitor().startBlock(statement, null);// QMUtils.getDefaultHandler().handleResultSetFetch(this);",1,1,1,1,-1,-1,-1,-1
// FIXME: this is a EGIT hack// Set new project default option (Create general project. As Create New Project is broken)// https://bugs.eclipse.org/bugs/show_bug.cgi?id=324145,1,1,1,1,-1,-1,-1,-1
// FIXME: this is a dirty hack because I'm too lazy to make proper registry/adapter for formatter UI configurators// FIXME: for now we support only predefined list of formatters,1,1,1,1,-1,-1,-1,-1
// FIXME: this is a hack. We can't fire event on resource change so editor's state won't be updated in UI.// FIXME: To update main toolbar and other controls we hade and show this editor,1,1,1,1,-1,-1,-1,-1
"// FIXME: we can't throw error here because too many// if (object == null) {// throw new IllegalStateException(""Null object in navigator node. Node was disposed?"");// }",1,1,0,1,-1,-1,-1,-1
// FIXME: we need to run with progress service bu we can't change active control focus// Otherwise it breaks soem functions (e.g. data editor value save as it handles focus events).// so we can use runInProgressServie function,1,1,0,1,-1,-1,-1,-1
"// FIXME:// Notification borders are currently black on dark theme (which is a bug).// If we proceed to fix the region, popup's corners are colored with border color// (and the rest of the border is not). This needs to be deleted when the borders are fixed.",1,1,1,1,-1,-1,-1,-1
"// FIXME:AF: migrate to org.jkiss.dbeaver.runtime.ui bundle, to extract widget creation from UIUtils// FIXME:AF: looks poor anyway, provide fluent-style API",1,1,0,1,-1,-1,-1,-1
"// Hacky flag too. Skip nodes (producer and consumer) update// if it's not required -- e.g., when we're editing an exiting task",1,1,1,1,-1,-1,-1,-1
// Hacky flag. Says that pipe selection is frozen.// Makes sense for special case like multi-file import,1,1,1,1,-1,-1,-1,-1
// It is a hack to allow auto-complete with TAB key (#2316)// TODO: perhaps we should test ContentAssistant.isProposalPopupActive() here?,1,1,1,1,-1,-1,-1,-1
// It is a hack. As context menu create is called from base lcass constructor we can't use any constructor parameters in fillContextMenu.// Lets give caller a chance to use them in overloaded member,1,1,1,1,-1,-1,-1,-1
// It is a trick// This method may be invoked from another Editor with different OBJECT_TYPE and CONTAINER_TYPE// TODO: May be we should make ObjectChangeCommand static,1,1,1,1,-1,-1,-1,-1
// Needed to update main toolbar// FIXME: silly workaround. Command state update doesn't happen in some cases// FIXME: but it works after short pause. Seems to be a bug in E4 command framework,1,1,1,1,-1,-1,-1,-1
// Patch search icons. Directly change icon reference in config registry// FIXME: This is a very dirty hack but I didn't find any better way to patch search action icons,1,1,1,1,-1,-1,-1,-1
// Refreshes model metadata (virtual objects + colors and other)// It is a bit hacky function because we need to bind custom attributes (usually this happens during data read),1,1,1,1,-1,-1,-1,-1
// Set zone to the format.// FIXME: it looks like a good idea but in fact iti s not. We can't convert ZonedDateTime into// FIXME: proper SQL timestamp for pre-historic (pre-Gregorian) dates.// FIXME: so we will shift LocalDateTime in getAttributeValue instead// FIXME: https://stackoverflow.com/questions/23975205/why-does-converting-java-dates-before-1582-to-localdate-with-instant-give-a-diff// this.dateTimeFormat = this.dateTimeFormat.withZone(dateTimeZoneId);,1,1,1,1,-1,-1,-1,-1
// Skip connections settings file// TODO: remove in some older version,1,1,1,1,-1,-1,-1,-1
"// String propValue = XMLUtils.getChildElementBody(propElement, ""value"");// TODO: implement real properties checks. Now enable all profiles with !prop",1,1,1,1,-1,-1,-1,-1
// TODO DF: @Properties does not handle SQLXML types.// Transform it into String,1,1,1,1,-1,-1,-1,-1
// TODO DF: many things in this class could probably be factorized or generic-field// DB2LOOK,1,1,1,1,-1,-1,-1,-1
"// TODO: Is 'WHERE' even supposed to be here?// Assert.assertEquals(""WHERE"", proposals.get(3).getReplacementString());",1,1,1,1,-1,-1,-1,-1
"// TODO: Use of DRAG_MINIMUM is a kludge, required because SashForm only allows you to close each part so far// TODO: kludge see SashForm.DRAG_MINIMUM",1,1,1,1,-1,-1,-1,-1
"// TODO: [#2824] Perhaps we should just use type names declared in pg_catalog// Replacing them with ""convenient"" types names migh cause some issues",1,1,1,1,-1,-1,-1,-1
"// TODO: check type// ArrayUtils.contains(event.dataTypes, LightGrid.GridColumnTransfer.INSTANCE);",1,1,1,1,-1,-1,-1,-1
"// TODO: read data from pg_range// if (!CommonUtils.isEmpty(su)) {// sql.append(""\n\tCOLLATION "").append(canonicalName);// }// $NON-NLS-1$",0,1,1,1,-1,-1,-1,-1
// TODO: some drivers (DB2) always mark all columns as read only. Dunno why. So let's ignore this property// read-only connections are detected separately.// resultSetMeta.isReadOnly(ordinalPosition + 1);,1,1,1,1,-1,-1,-1,-1
// TODO: we need to add value handlers for all PG data types.// For now we use workaround: represent objects as strings,1,1,1,1,-1,-1,-1,-1
"// TODO:// Following code uses properties from very first attribute// and ignores other attributes, if present. There's no clear// vision of what we should do here instead.// Check for save settings",1,1,1,1,-1,-1,-1,-1
// This interval type has fractional seconds precision. In bounds from 0 to 9. We can show this parameter.// FIXME: This type has day precision inside type name. Like INTERVAL DAY(2) TO SECOND(6). So far we can't show it (But we do it in Column Manager),1,1,0,1,-1,-1,-1,-1
// This is a hack. On MacOS buttons don't get focus so when user closes dialog// by clicking on Ok button CellEditor doesn't get FocusLost event and thus doesn't save its value.// This is workaround. Calling protected method focusLost in okPressed saves the value.// See:// https://github.com/dbeaver/dbeaver/issues/3553// https://github.com/dbeaver/dbeaver/issues/10366// https://github.com/dbeaver/dbeaver/issues/10361,1,1,1,1,-1,-1,-1,-1
// This is a hack. We need to update main toolbar. By design toolbar should be updated along with command state// but in fact it doesn't. I don't know better way than trigger update explicitly.// TODO: replace with something smarter,1,1,1,1,-1,-1,-1,-1
// Views: generate them after all tables.// TODO: find view dependencies and generate them in right order,1,1,1,1,-1,-1,-1,-1
// create edges to join any isolated clusters// TODO: investigate - cluster edges makes diagram ugly// TODO: what the reason to do it???// new ClusterEdgeCreator().visit(graph);,1,1,1,1,-1,-1,-1,-1
// do nothing// TODO: implement some other behavior,1,1,1,1,-1,-1,-1,-1
"// todo: add support alternatives to ""true/false""// Assert.assertArrayEquals(booleans, (Object[]) PostgreValueParser.convertStringToValue(session, arrayBooleanItemType, ""{'t','f'}"", true));// Assert.assertArrayEquals(booleans, (Object[]) PostgreValueParser.convertStringToValue(session, arrayBooleanItemType, ""{'true','false'}"", true));// Assert.assertArrayEquals(booleans, (Object[]) PostgreValueParser.convertStringToValue(session, arrayBooleanItemType,""{'1','0'}"", true));// Assert.assertArrayEquals(booleans, (Object[]) PostgreValueParser.convertStringToValue(session, arrayBooleanItemType,""{'y','n'}"", true));// Assert.assertArrayEquals(booleans, (Object[]) PostgreValueParser.convertStringToValue(session, arrayBooleanItemType,""{'yes,'no'}"", true));// Assert.assertArrayEquals(booleans, (Object[]) PostgreValueParser.convertStringToValue(session, arrayBooleanItemType,""{'on,'off'}"", true));",1,1,1,1,-1,-1,-1,-1
"/*                             * TODO we could be a bit smarter here, we don't need to fully sort necessarily                             * we could just find the place to insert linearly but the win might be minor                             * compared to the added complexity                             */",1,1,1,1,-1,-1,-1,-1
"/*                     * Docker violates the relationship between /proc/self/cgroup and the /sys/fs/cgroup hierarchy. It's possible that this                     * will be fixed in future versions of Docker with cgroup namespaces, but this requires modern kernels. Thus, we provide                     * an undocumented hack for overriding the control group path. Do not rely on this hack, it will be removed.                     */",1,1,1,1,-1,-1,-1,-1
/*                     * We do not update the in-sync allocation IDs as they will be removed upon the first index operation                     * which makes these copies stale.                     *                     * TODO: should we update the in-sync allocation IDs once the data is deleted by the node?                     */,1,1,1,1,-1,-1,-1,-1
"/*             * It may not be required to copy meta here to maintain immutability but the cost is pretty low here.             *             * Note: this copy can not be replaced by Map#copyOf because we rely on consistent serialization order since we do             * byte-level checks on the mapping between what we receive from the master and what we have locally. As Map#copyOf             * is not necessarily the same underlying map implementation, we could end up with a different iteration order.             * For reference, see MapperService#assertSerializtion and GitHub issues #10302 and #10318.             *             * Do not change this to Map#copyOf or any other method of copying meta that could change the iteration order.             *             * TODO:             *  - this should almost surely be a copy as a LinkedHashMap to have the ordering guarantees that we are relying on             *  - investigate the above note about whether or not we need to be copying here, the ideal outcome would be to not             */",1,1,0,1,-1,-1,-1,-1
"/*             * Rebucket before building the aggregation to build as small as result             * as possible.             *             * TODO it'd be faster if we could apply the merging on the fly as we             * replay the hits and build the buckets. How much faster is not clear,             * but it does have the advantage of only touching the buckets that we             * want to collect.             */",1,1,1,1,-1,-1,-1,-1
/*             * TODO: We could be smarter here and group the shards by index and then             * use the sorter to save some iterations.             */,1,1,1,1,-1,-1,-1,-1
"/*             * Temporarily suppress illegal reflective access in searchable snapshots shared cache preallocation; this is temporary while we             * explore alternatives. See org.elasticsearch.xpack.searchablesnapshots.preallocate.Preallocate.             *             * TODO: either modularlize Elasticsearch so that we can limit the opening of this module, or find an alternative             */",1,1,1,1,-1,-1,-1,-1
"/*             * Try to install system call filters; if they fail to install; a bootstrap check will fail startup in production mode.             *             * TODO: should we fail hard here if system call filters fail to install, or remain lenient in non-production environments?             */",1,1,1,1,-1,-1,-1,-1
/*             * keep headers from the original document             *             * TODO: Handle deprecated data_frame_transform roles             *             * The headers store user roles and in case the transform has been created in 7.2-7.4             * contain the old data_frame_transform_* roles             *             * For 9.x we need to take action as data_frame_transform_* will be removed             *             * Hint: {@link AuthenticationContextSerializer} for decoding the header             */,1,1,1,1,-1,-1,-1,-1
/*         * Subclass the properties configurator to hack the new pattern in         * place so users don't have to change log4j2.properties in         * a minor release. In 7.0 we'll remove this and force users to         * change log4j2.properties. If they don't customize log4j2.properties         * then they won't have to do anything anyway.         *         * Everything in this subclass that isn't marked as a hack is copied         * from log4j2's source.         */,1,1,1,1,-1,-1,-1,-1
"/*         * TODO: we execute this in parallel but it's a synced method. Yet, we might         * be able to serialize the execution via the cluster state in the future. for now we just         * keep it synced.         */",1,1,1,1,-1,-1,-1,-1
/*         * We need to exclude time zones not supported by joda (like SystemV* timezones)         * because they cannot be converted back to DateTimeZone which we currently         * still need to do internally e.g. in bwc serialization and in the extract() method         * //TODO remove once tests do not send time zone ids back to versions of ES using Joda         */,1,1,1,1,-1,-1,-1,-1
"/*        TODO: this does not yet work because the active comes before expiry check as a chance        String warningExpired = ""warning: license expired"";        licenseState.update(licenseLevel, false, warningExpired);        feature.check(licenseState);        assertWarnings(warningExpired);         */",1,1,1,1,-1,-1,-1,-1
"/*     * The version of the driver that the QA (bwc-)tests run against.     * Note: when adding a version-gated feature (i.e. new feature that would not be supported by old drivers) and adding code in these QA     * tests to check the feature, you'll want to compare the target release version of the feature against this variable, to selectively     * run the new tests only for drivers that will support the feature (i.e. of the target release version and newer).     * Until the feature + QA tests are actually ported to the target branch, the comparison will hold true only for the master     * branch. So you'll need to remove the equality, port the feature and subsequently add the equality; i.e. a two-step commit of a PR.     * <code>     *     public static boolean isUnsignedLongSupported() {     *         // TODO: add equality only once actually ported to 7.11     *         return V_7_11_0.compareTo(JDBC_DRIVER_VERSION) < 0;     *     }     * </code>     */",1,1,0,1,-1,-1,-1,-1
"/*  TODO:    - Currently there is a one-to-one mapping of indexed      term to term block, but we could decouple the two, ie,      put more terms into the index than there are blocks.      The index would take up more RAM but then it'd be able      to avoid seeking more often and could make PK/FuzzyQ      faster if the additional indexed terms could store      the offset into the terms block.    - The blocks are not written in true depth-first      order, meaning if you just next() the file pointer will      sometimes jump backwards.  For example, block foo* will      be written before block f* because it finished before.      This could possibly hurt performance if the terms dict is      not hot, since OSs anticipate sequential file access.  We      could fix the writer to re-order the blocks as a 2nd      pass.    - Each block encodes the term suffixes packed      sequentially using a separate vInt per term, which is      1) wasteful and 2) slow (must linear scan to find a      particular suffix).  We should instead 1) make      random-access array so we can directly access the Nth      suffix, and 2) bulk-encode this array using bulk int[]      codecs; then at search time we can binary search when      we seek a particular term.*/",1,1,1,1,-1,-1,-1,-1
"/* * Test mock auditor to verify audit expectations. * * Shamelessly cop...inspired by {@link org.elasticsearch.test.MockLogAppender} * * TODO: ideally this would be a generalized  MockAuditor, but the current inheritance doesn't let us */",1,1,1,1,-1,-1,-1,-1
"/* This is a special case where broken analysis like WDF is used for term-vector creation at index-time             * which can potentially mess up the offsets. To prevent a SAIIOBException we need to resort             * the fragments based on their offsets rather than using solely the positions as it is done in             * the FastVectorHighlighter. Yet, this is really a lucene problem and should be fixed in lucene rather             * than in this hack... aka. ""we are are working on in!"" */",1,1,0,1,-1,-1,-1,-1
"/** * <h2>Aggregations</h2> * <p>Builds analytic information over all hits in a search request.  Aggregations * are essentially a tool for sumarizing data, and that summary is often used * to generate a visualization.</p> * * <h2>Types of aggregations</h2> * There are three main types of aggregations, each in their own sub package: * <ul> *     <li>Bucket aggregations - which group documents (e.g. a histogram)</li> *     <li>Metric aggregations - which compute a summary value from several *     documents (e.g. a sum)</li> *     <li>Pipeline aggregations - which run as a seperate step and compute *     values across buckets</li> * </ul> * Additionally there is a support sub package, which contains the type checking * and resolution logic, primarily. * * <h2>How Aggregations Work</h2> * <p>TODO: Info about search phases goes here</p> * * <p>Aggregations operate in general as Map Reduce jobs.  The coordinating node for * the query dispatches the aggregation to each data node.  The data nodes all * instantiate an {@link org.elasticsearch.search.aggregations.AggregationBuilder} * of the appropriate type, which in turn builds the * {@link org.elasticsearch.search.aggregations.Aggregator} for that node.  This * collects the data from that shard, via * {@link org.elasticsearch.search.aggregations.Aggregator#getLeafCollector(AggregationExecutionContext)} * more or less.  These values are shipped back to the coordinating node, which * performs the reduction on them (partial reductions in place on the data nodes * are also possible).</p> * * <h3>Three modes of operation</h3> * <p>When it comes to actually collecting values, there are three ways aggregations * operate, in general.  Which one we choose depends on limitations in the query * and how the data was ingested (e.g. if it is searchable).</p> * * <p>The easiest to understand is the <strong>Compatible</strong> (i.e. usable in * all situations) mode, which can be thought of as iterating each query hit and * collecting a value from it.  This is the least performant way to evaluate * aggregations, requiring looking at every hit.</p> * * <p>The fastest way to run an aggregation is by <strong>looking at the index structures * directly.</strong>  For example, Lucene just stores the minimum and maximum values * of fields per segment, so a min aggregation matching all documents in a segment * can just look up its result.  Generally speaking, this mode can be engaged when * there are no queries or sub-aggregations, and is gated by * {@link org.elasticsearch.search.aggregations.support.ValuesSourceConfig#getPointReaderOrNull()}.</p> * * <p>Finally, we can <strong>rewrite</strong> an aggregation into faster aggregations, * or ideally into just a query.  Generally, the goal here is to get to * <strong>filter by filters</strong> (which is an optimization on the filters aggregation * which runs it as a set of filter queries).  Often this process will look like rewriting * a DateHistogram into a DateRange, and then rewriting the DateRange into Filters. * If you see {@link org.elasticsearch.search.aggregations.AdaptingAggregator}, that's * a good clue that the rewrite mode is being used.  In general, when we rewrite aggregations, * we are able to detect if the rewritten agg can run in a ""fast"" mode, and decline the * rewrite if it can't.</p> * * <p>In general, aggs will try to use one of the fast modes, and if that's not possible, * fall back to running in compatible mode.</p> */",1,1,0,1,-1,-1,-1,-1
"/** * <p>This package contains the logic for the recovery functionality.</p> * * <h2>Preliminaries</h2> * * Recoveries are started on data nodes as a result of data node discovering shard assignments to themselves in the cluster state. The * master node sets up these shard allocations in the cluster state (see {@link org.elasticsearch.cluster.routing.ShardRouting}). * If a data node finds shard allocations that require recovery on itself, it will execute the required recoveries by executing the * logic starting at {@link org.elasticsearch.indices.cluster.IndicesClusterStateService#createIndicesAndUpdateShards}. As the data nodes * execute the steps of the recovery state machine they report back success or failure to do so to the master node via the transport * actions in {@link org.elasticsearch.cluster.action.shard.ShardStateAction}, which will then update the shard routing in the cluster state * accordingly to reflect the status of the recovered shards or to handle failures in the recovery process. Recoveries can have various * kinds of sources that are modeled via the {@link org.elasticsearch.cluster.routing.RecoverySource} that is communicated to the recovery * target by {@link org.elasticsearch.cluster.routing.ShardRouting#recoverySource()} for each shard routing. These sources and their state * machines will be described below. The actual recovery process for all of them is started by invoking * {@link org.elasticsearch.index.shard.IndexShard#startRecovery}. * * <h3>Checkpoints</h3> * * Aspects of the recovery logic are based on the concepts of local and global checkpoints. Each operation on a shard is tracked by a * sequence number as well as the primary term during which it was applied to the index. The sequence number up to which operations have * been fully processed on a shard is that shard's local checkpoint. The sequence number up to which operations on all replicas for a shard * have been fully processed is referred to as the global checkpoint. Comparing the local checkpoints of shard copies enables determining * which operations would have to be replayed to a shard copy to bring it in-sync with the primary shard. By retaining operations in the * {@link org.elasticsearch.indices.recovery.RecoveryState.Translog} or in soft deletes, they are available for this kind of replay that * moves a shard lower local checkpoint up to a higher local checkpoint. The global checkpoint allows for determining which operations have * been safely processed on all shards and thus don't have to be retained on the primary node for replay to replicas. * * The primary node tracks the global checkpoint for a shard via the {@link org.elasticsearch.index.seqno.ReplicationTracker}. The primary * term is tracked by the master node and stored in the cluster state and incremented each time the primary node for a shard changes. * * <h3>Retention Leases</h3> * * The duration for which a shard retains individual operations for replay during recovery is governed by the * {@link org.elasticsearch.index.seqno.RetentionLease} functionality. More information about this functionality can be found in the * {@link org.elasticsearch.index.seqno} package and the ""History retention"" section in the docs. * * <h2>Recovery Types</h2> * * <h3>1. Peer Recovery</h3> * * Peer recovery is the process of bringing a shard copy on one node, referred to as the target node below, in-sync with the shard copy on * another node, referred to as the source node below. It is always the primary node of a shard that serves as the source of the recovery. * On a high level, recovery happens by a combination of comparing and subsequently synchronizing files and operations from the source to * the target. * Synchronizing the on-disk file structure on the target with those on the source node is referred to as file-based recovery. * Synchronizing operations based on comparing checkpoints is commonly referred to as ops-based recovery. As primaries and replicas are * independent Lucene indices that will execute their Lucene level merges independently the concrete on-disk file structure on a pair of * primary and replica nodes for a given shard will diverge over time even if both copies of the shard hold the exact same set of documents * and operations. Peer recovery will therefore try to avoid file-based recovery where possible to reduce the amount of data that has to be * transferred. It will prefer replaying just those operations missing on the target relative to the source instead as this * avoids copying files from source to target that could contain data that is for the most part already present on the target. * Replaying operations is possible as long as the primary node retains the missing operations as soft-deletes in its Lucene index. * * <h4>State Machine</h4> * * Peer recoveries are modeled via a {@link org.elasticsearch.cluster.routing.RecoverySource.PeerRecoverySource}. They start by moving the * shard's state to {@link org.elasticsearch.index.shard.IndexShardState#RECOVERING} and then triggering the peer recovery through a call * to {@link org.elasticsearch.indices.recovery.PeerRecoveryTargetService#startRecovery} which results in the following steps being * executed. * * <ol> *     <li> *         The target shard starts out with a {@link org.elasticsearch.indices.recovery.RecoveryState} at stage *         {@link org.elasticsearch.indices.recovery.RecoveryState.Stage#INIT}. At the start of the peer recovery process, the target node *         will try to recover from its local translog as far as if there are any operations to recover from it. It will first move to *         stage {@link org.elasticsearch.indices.recovery.RecoveryState.Stage#INDEX} and then try to recover as far as possible from *         existing files and the existing translog. During this process, it will move to *         {@link org.elasticsearch.indices.recovery.RecoveryState.Stage#VERIFY_INDEX}, verifying that the files on disk are not corrupted, *         then to {@link org.elasticsearch.indices.recovery.RecoveryState.Stage#TRANSLOG} during recovery from translog. *         A {@link  org.elasticsearch.indices.recovery.StartRecoveryRequest} is then sent to the primary node of the shard to recover by *         the target node for the recovery. This triggers *         {@link org.elasticsearch.indices.recovery.PeerRecoverySourceService#recover} on the primary node that receives the request. The *         {@code StartRecoveryRequest} contains information about the local state of the recovery target, based on which the recovery *         source will determine the recovery mechanism (file-based or ops-based) to use. *     </li> *     <li> *        When determining whether to use ops-based recovery the recovery source will check the following conditions *        that must all be true simultaneously for ops-based recovery to be executed: *        <ul> *            <li> *                Target shard and source shard must share the same *                {@link org.elasticsearch.index.engine.Engine#HISTORY_UUID_KEY} in their latest Lucene commit. *            </li> *            <li> *                The source must have retained all operations between the latest sequence number present on the target. *                See {@link org.elasticsearch.index.shard.IndexShard#hasCompleteHistoryOperations} for details. *            </li> *            <li> *                A peer recovery retention lease must exist for the target shard and it must retain a sequence number below or equal *                to the starting sequence number in {@link org.elasticsearch.indices.recovery.StartRecoveryRequest#startingSeqNo()}. *            </li> *        </ul> *     </li> *     <li> *         In case the preconditions for ops-based recovery aren't met, file-based recovery is executed first. *         To trigger file-based recovery, the source node will execute phase 1 of the recovery by invoking *         {@link org.elasticsearch.indices.recovery.RecoverySourceHandler#phase1}. Using the information about the files on the target node *         found in the {@code StartRecoveryRequest}, phase 1 will determine what segment files must be copied to the recovery target. *         The information about these files will then be sent to the recovery target via a *         {@link org.elasticsearch.indices.recovery.RecoveryFilesInfoRequest}. Once the recovery target has received the list of files *         that will be copied to it, {@link org.elasticsearch.indices.recovery.RecoverySourceHandler#sendFiles} is invoked which *         will send the segment files over to the recovery target via a series of *         {@link org.elasticsearch.indices.recovery.RecoveryFileChunkRequest}. *         Receiving a {@code RecoveryFilesInfoRequest} on the target indicates to it that the recovery will be file-based so it will *         invoke {@link org.elasticsearch.index.shard.IndexShard#resetRecoveryStage} to reset the recovery back to {@code INIT} stage and *         then prepare for receiving files and move to stage {@code INDEX} again. *     </li> *     <li> *         Once all the file chunks have been received by the recovery target, a retention lease for the latest global checkpoint is *         created by the source node to ensure all remaining operations from the latest global checkpoint are retained for replay in *         the next step of the recovery. Also, after creating the retention lease and before moving on to the next step of the peer *         recovery process, a {@link org.elasticsearch.indices.recovery.RecoveryCleanFilesRequest} is sent from the source to the target. *         The target will handle this request by doing the following: *         <ul> *             <li> *                 The file chunks from the previous step were saved to temporary file names. They are now renamed to their original *                 names. *             </li> *             <li> *                 Cleanup all files in the shard directory that are not part of the recovering shard copy. *             </li> *             <li> *                 Trigger creation of a new translog on the target. This moves the recovery stage on the target to *                 {@link org.elasticsearch.indices.recovery.RecoveryState.Stage#TRANSLOG}. *             </li> *         </ul> *     </li> *     <li> *         After the segment files synchronization from source to the target has finished or was skipped, the translog based recovery *         step is executed by invoking {@link org.elasticsearch.indices.recovery.RecoverySourceHandler#prepareTargetForTranslog} on the *         recovery source. This sends a {@link org.elasticsearch.indices.recovery.RecoveryPrepareForTranslogOperationsRequest} to the *         recovery target which contains the estimated number of translog operations that have to be copied to the target. *         On the target, this request is handled and triggers a call to *         {@link org.elasticsearch.index.shard.IndexShard#openEngineAndSkipTranslogRecovery()} which opens a new engine and translog *         and then responds back to the recovery source. *         Once the recovery source receives that response, it invokes *         {@link org.elasticsearch.indices.recovery.RecoverySourceHandler#phase2} to replay outstanding translog operations on the target. *         This is done by sending a series of {@link org.elasticsearch.indices.recovery.RecoveryTranslogOperationsRequest} to the target *         which will respond with {@link org.elasticsearch.indices.recovery.RecoveryTranslogOperationsResponse}s which contain the *         maximum persisted local checkpoint for the target. Tracking the maximum of the received local checkpoint values is necessary *         for the next step, finalizing the recovery. *     </li> *     <li> *         After replaying the translog operations on the target, the recovery is finalized by a call to *         {@link org.elasticsearch.indices.recovery.RecoverySourceHandler#finalizeRecovery} on the source. With the knowledge that the *         target has received all operations up to the maximum local checkpoint tracked in the previous step, the source *         (which is also the primary) can now update its in-sync checkpoint state by a call to *         {@link org.elasticsearch.index.seqno.ReplicationTracker#markAllocationIdAsInSync}. *         Once the in-sync sequence number information has been persisted successfully, the source sends a *         {@link org.elasticsearch.indices.recovery.RecoveryFinalizeRecoveryRequest} to the target which contains the global checkpoint *         as well as a sequence number above which the target can trim all operations from its translog since all operations above this *         number have just been replayed in the previous step and were either of the same or a newer version that those in the existing *         translog on the target. This step then also moves the target to the recovery stage *         {@link org.elasticsearch.indices.recovery.RecoveryState.Stage#FINALIZE}. *     </li> *     <li> *         After the finalization step, the recovery source will send a {@link org.elasticsearch.indices.recovery.RecoveryResponse} to the *         target which is implemented as a response to the initial {@code StartRecoveryRequest} that the target sent to initiate the *         recovery. This leads to a call to {@link org.elasticsearch.index.shard.IndexShard#postRecovery} which moves the recovery state *         to stage {@link org.elasticsearch.indices.recovery.RecoveryState.Stage#DONE}, triggers a refresh of the shard and moves the *         shard to state {@link org.elasticsearch.index.shard.IndexShardState#POST_RECOVERY}. Finally, the recovery target will then *         send a {@link org.elasticsearch.cluster.action.shard.ShardStateAction.StartedShardEntry} transport message to master to inform *         it about the successful start of the shard. *     </li> *     <li> *         After receiving the {@code StartedShardEntry}, master will then update the cluster state to reflect the state of the now fully *         recovered recovery target by executing the *         {@link org.elasticsearch.cluster.action.shard.ShardStateAction.ShardStartedClusterStateTaskExecutor}. The resulting cluster *         state update is then observed by {@link org.elasticsearch.index.shard.IndexShard#updateShardState} which updates the shard state *         on the target node to {@link org.elasticsearch.index.shard.IndexShardState#STARTED} thus completing the peer recovery. *     </li> * </ol> * * TODO: document other recovery types */",1,1,0,1,-1,-1,-1,-1
/** * @TODO REALM-SETTINGS[TIM] This can be redone a lot now the realm settings are keyed by type */,1,1,1,1,-1,-1,-1,-1
/** * A collector that groups documents based on field values and returns {@link TopFieldGroups} * output. The grouping is done in a single pass by selecting only the top sorted document per grouping key. * The value used for the key of each group can be found in {@link TopFieldGroups#groupValues}. * * This collector optionally supports searching after a previous result through the 'after' parameter. * * TODO: If the sort is based on score we should propagate the mininum competitive score when <code>orderedGroups</code> *       is full. This is safe for grouping since the group sort is the same as the query sort. */,1,1,0,1,-1,-1,-1,-1
"/** * A custom break iterator that is used to find break-delimited passages bounded by * a provided maximum length in the {@link UnifiedHighlighter} context. * This class uses a {@link BreakIterator} to find the last break after the provided offset * that would create a passage smaller than <code>maxLen</code>. * If the {@link BreakIterator} cannot find a passage smaller than the maximum length, * a secondary break iterator is used to re-split the passage at the first boundary after * maximum length. * * This is useful to split passages created by {@link BreakIterator}s like `sentence` that * can create big outliers on semi-structured text. * * WARNING: This break iterator is designed to work with the {@link UnifiedHighlighter}. * * TODO: We should be able to create passages incrementally, starting from the offset of the first match and expanding or not * depending on the offsets of subsequent matches. This is currently impossible because {@link FieldHighlighter} uses * only the first matching offset to derive the start and end of each passage. */",1,1,0,1,-1,-1,-1,-1
"/** * A field visitor that allows to load a selection of the stored fields by exact name or by pattern. * Supported pattern styles: ""xxx*"", ""*xxx"", ""*xxx*"" and ""xxx*yyy"". * The Uid field is always loaded. * The class is optimized for source loading as it is a common use case. */",0,1,1,1,-1,-1,-1,-1
/** * A legacy version of {@link ReplicaShardAllocatorIT#testPreferCopyCanPerformNoopRecovery()} verifying * that the {@link ReplicaShardAllocator} prefers copies with matching sync_id. * TODO: Remove this test in 9.0 */,1,1,1,1,-1,-1,-1,-1
/** * A lexer that is customized for painless. It: * <ul> * <li>Overrides the default error behavior to fail on the first error. * <li>Stores the last token in case we need to do lookbehind for semicolon insertion and regex vs division detection. * <li>Implements the regex vs division detection. * <li>Insert semicolons where they'd improve the language's readability. Rather than hack this into the parser and create a ton of * ambiguity we hack them here where we can use heuristics to do it quickly. * <li>Enhances the error message when a string contains invalid escape sequences to include a list of valid escape sequences. * </ul> */,1,1,0,1,-1,-1,-1,-1
/** * A utility for forwarding ingest requests to ingest nodes in a round-robin fashion. * * TODO: move this into IngestService and make index/bulk actions call that */,1,1,1,1,-1,-1,-1,-1
/** * A {@link FieldMapper} for indexing a sparse vector of floats. * * @deprecated The sparse_vector type was deprecated in 7.x and removed in 8.0. This mapper * definition only exists so that 7.x indices can be read without error. * * TODO: remove in 9.0. */,1,1,1,1,-1,-1,-1,-1
"/** * Aggregate on only the top-scoring docs on a shard. * * TODO currently the diversity feature of this agg offers only 'script' and * 'field' as a means of generating a de-dup value. In future it would be nice * if users could use any of the ""bucket"" aggs syntax (geo, date histogram...) * as the basis for generating de-dup values. Their syntax for creating bucket * values would be preferable to users having to recreate this logic in a * 'script' e.g. to turn a datetime in milliseconds into a month key value. */",1,1,1,1,-1,-1,-1,-1
/** * An IndexSearcher wrapper that executes the searches in time-series indices by traversing them by tsid and timestamp * TODO: Convert it to use index sort instead of hard-coded tsid and timestamp values */,1,1,1,1,-1,-1,-1,-1
/** * Assert that there are no unreferenced indices or unreferenced root-level metadata blobs in any repository. * TODO: Expand the logic here to also check for unreferenced segment blobs and shard level metadata * @param repository BlobStoreRepository to check */,1,1,1,1,-1,-1,-1,-1
/** * Basic Unit Test for GeoPointField data * todo include backcompat testing - see ISSUE #14562 */,1,1,1,1,-1,-1,-1,-1
"/** * Calculate the weighted edit distance between two sequences. Each * element of each sequence has an associated weight, such that some * elements can be considered more expensive to add/remove/replace than * others. * * Unfortunately, in the case of arbitrary weightings, the * Berghel-Roach algorithm cannot be applied. Ukkonen gives a * counter-example on page 114 of Information and Control, Vol 64, * Nos. 1-3, January/February/March 1985. The problem is that the * matrix diagonals are not necessarily monotonically increasing. * See http://www.cs.helsinki.fi/u/ukkonen/InfCont85.PDF. * * TODO: It may be possible to apply some of the lesser optimisations *       from section 2 of Ukkonen's paper to this algorithm. */",1,1,0,1,-1,-1,-1,-1
"/** * Calculates the optimal number of buckets for this filter.  The xor used in the bucketing * algorithm requires this to be a power of two, so the optimal number of buckets will * be rounded to the next largest power of two where applicable. * * TODO: there are schemes to avoid powers of two, might want to investigate those */",1,1,1,1,-1,-1,-1,-1
"/** * Checks the ack message going from the  {@code from} license type to {@code to} license type. * TODO: check the actual messages, not just the number of them! This was copied from previous license tests... */",1,1,1,1,-1,-1,-1,-1
"/** * Create a new {@link ShapeBuilder} from {@link XContent} * @param parser parser to read the GeoShape from * @param geometryMapper document field mapper reference required for spatial parameters relevant *                     to the shape construction process (e.g., orientation) *                     todo: refactor to place build specific parameters in the SpatialContext * @return {@link ShapeBuilder} read from the parser or null *          if the parsers current token has been <code>null</code> * @throws IOException if the input could not be read */",1,1,1,1,-1,-1,-1,-1
/** * Dynamic node setting for specifying the wait_for_timeout that the auto follow coordinator should be using. * TODO: Deprecate and remove this setting */,1,1,1,1,-1,-1,-1,-1
"/** * Elasticsearch-specific permission to check before entering * {@code AccessController.doPrivileged()} blocks. * <p> * We try to avoid these blocks in our code and keep security simple, * but we need them for a few special places to contain hacks for third * party code, or dangerous things used by scripting engines. * <p> * All normal code has this permission, but checking this before truncating the stack * prevents unprivileged code (e.g. scripts), which do not have it, from gaining elevated * privileges. * <p> * In other words, don't do this: * <br> * <pre><code> *   // throw away all information about caller and run with our own privs *   AccessController.doPrivileged( *    ... *   ); * </code></pre> * <br> * Instead do this; * <br> * <pre><code> *   // check caller first, to see if they should be allowed to do this *   SecurityManager sm = System.getSecurityManager(); *   if (sm != null) { *     sm.checkPermission(new SpecialPermission()); *   } *   // throw away all information about caller and run with our own privs *   AccessController.doPrivileged( *    ... *   ); * </code></pre> */",1,1,1,1,-1,-1,-1,-1
/** * Enable blocking a single read of {@link org.elasticsearch.snapshots.SnapshotInfo} in case the repo is already blocked on another * file. This allows testing very specific timing issues where a read of {@code SnapshotInfo} is much slower than another concurrent * repository operation. See {@link #blockExecution()} for the exact mechanics of why we need a secondary block defined here. * TODO: clean this up to not require a second block set */,1,1,0,1,-1,-1,-1,-1
"/** * Factory for frequent items aggregation * * Note about future readiness: * * - for improvements that do not require fundamental changes over the wire, use the usual BWC *   translation layers * - for bigger changes, implement a new map reducer and use it iff all nodes in a cluster *   got upgraded, however as long as a cluster has older nodes return the old the map-reducer, *   todo's: *   - add minimum node version to the AggregationContext which is created by {@link SearchService}. *     SearchService has access to cluster state. *   - wrap the new map-reducer in a new Aggregator and return the instance that all nodes in a *     cluster understand *   - add code to return the correct result reader in getResultReader below */",1,1,0,1,-1,-1,-1,-1
/** * Generates a XML response that describe the EC2 instances * TODO: org.elasticsearch.discovery.ec2.AmazonEC2Fixture uses pretty much the same code. We should dry up that test fixture. */,1,1,1,1,-1,-1,-1,-1
"/** * Get the first node of the tree and provide a point in that geometry (point, line or triangle) * as a suggested label position likely to be somewhere in the middle of the entire geometry. * * TODO: We could instead choose the point closer to the centroid which improves unbalanced trees */",0,1,1,1,-1,-1,-1,-1
/** * Hack to rethrow unknown Exceptions from compile: */,1,1,1,1,-1,-1,-1,-1
/** * Hack to rethrow unknown Exceptions from {@link MethodHandle#invokeExact}: */,1,1,1,1,-1,-1,-1,-1
"/** * Hack to set the initial ""depth"" for the {@link DefBootstrap.PIC} and {@link DefBootstrap.MIC}. Only used for testing: do not * overwrite. */",1,1,1,1,-1,-1,-1,-1
"/** * Implementation of ""transactions"", as they are called in * * Zaki, M. J. (2000). Scalable algorithms for association mining. Knowledge and Data Engineering, IEEE Transactions on, 12(3), 372-390. * * A transaction is defined as a set of items. For scaling transactions are de-duplicated and store a counter. * * NOTE: This class is not thread-safe! * * # Rough design * * ## Data: * * - transactions are split into items and items are stored together with their count *    - every item has an id and a count * - the transaction than gets rewritten into an array of items using the item ids, this dedups and compresses the storage *    - every transaction is a bytebuffer containing item ids and a count * - items and transactions are stored in a hashtable using ByteRefHash, which internally uses BigArrays *    - the item store is basically a map: ByteRef -> item_id, the ByteRef key consists of the fieldname and its value, *      the id is number (a count) *    - the transaction store is a map: ByteRef -> transaction_id, the ByteRef consists of item_id's using a variable length *      encoding (vlong) * - the counts are stored as array, the index is {item_, transaction_}the id, the cell stores the count * - the store can be serialized and send over the wire, serialization and deserialization uses variable length encodings to *   make messages smaller * * ## Merging * * - a transaction store contains the items and transactions of 1 shard, this must be merged * - transaction stores can be merged, this happens by rewriting and merging * * ## Pruning * * - prune removes all items that do not meet the support criteria and rewrites/drops transactions, this can significantly free memory * - TODO: pruning is only used after merging all stores from all shards, it could be beneficial to prune already on the shard level * * ## Top Items/Transactions * * - top_{items, transactions} creates lists of {item_, transaction_}ids reverse sorted by count */",1,1,0,1,-1,-1,-1,-1
"/** * Legacy enum class for index settings, kept for 7.x BWC compatibility. Do not use. * TODO: Remove in 9.0 */",1,1,1,1,-1,-1,-1,-1
"/** * Legacy index setting, kept for 7.x BWC compatibility. This setting has no effect in 8.x. Do not use. * TODO: Remove in 9.0 */",1,1,1,1,-1,-1,-1,-1
"/** * Match a String against the given pattern, supporting the following simple * pattern styles: ""xxx*"", ""*xxx"", ""*xxx*"" and ""xxx*yyy"" matches (with an * arbitrary number of pattern parts), as well as direct equality. * * @param pattern the pattern to match against * @param str     the String to match * @param caseInsensitive  true if ASCII case differences should be ignored * @return whether the String matches the given pattern */",0,1,1,1,-1,-1,-1,-1
"/** * Match a String against the given pattern, supporting the following simple * pattern styles: ""xxx*"", ""*xxx"", ""*xxx*"" and ""xxx*yyy"" matches (with an * arbitrary number of pattern parts), as well as direct equality. * * @param pattern the pattern to match against * @param str     the String to match * @return whether the String matches the given pattern */",0,1,1,1,-1,-1,-1,-1
"/** * Match a String against the given pattern, supporting the following simple * pattern styles: ""xxx*"", ""*xxx"", ""*xxx*"" and ""xxx*yyy"" matches (with an * arbitrary number of pattern parts), as well as direct equality. * Matching is case sensitive. * * @param pattern the pattern to match against * @param str     the String to match * @return whether the String matches the given pattern */",0,1,1,1,-1,-1,-1,-1
"/** * Match a String against the given patterns, supporting the following simple * pattern styles: ""xxx*"", ""*xxx"", ""*xxx*"" and ""xxx*yyy"" matches (with an * arbitrary number of pattern parts), as well as direct equality. * * @param patterns the patterns to match against * @param str      the String to match * @return whether the String matches any of the given patterns */",0,1,1,1,-1,-1,-1,-1
"/** * Move the last cluster to position <code>idx</code> * This is expensive because a merge map of size <code>numClusters</code> is created, so don't call this method too often * * TODO: Make this more efficient */",1,1,1,1,-1,-1,-1,-1
"/** * Packs a list of terms into ByteRef so we can use BytesKeyedBucketOrds * * TODO: this is a temporary solution, we should replace it with a more optimal mechanism instead of relying on BytesKeyedBucketOrds */",1,1,1,1,-1,-1,-1,-1
"/** * Parses a header value into it's parts. * follows https://tools.ietf.org/html/rfc7231#section-3.1.1.1 * but allows only single media type. Media ranges will be ignored (treated as not provided) * Note: parsing can return null, but it will throw exceptions once https://github.com/elastic/elasticsearch/issues/63080 is done * TODO Do not rely on nulls * * @return a {@link ParsedMediaType} if the header could be parsed. * @throws IllegalArgumentException if the header is malformed */",1,1,1,1,-1,-1,-1,-1
"/** * Place of all interactions with the internal transforms index. For configuration and mappings see @link{TransformInternalIndex} * * Versioned Index: * * We wrap several indexes under 1 pattern: "".transform-internal-001"", "".transform-internal-002"", "".transform-internal-n"" while * n is the _current_ version of the index. For BWC we also search in "".data-frame-internal-1"", "".data-frame-internal-2"" * * - all gets/reads and dbq as well are searches on all indexes, while last-one-wins, so the result with the highest version is uses * - all puts and updates go into the _current_ version of the index, in case of updates this can leave dups behind * * Duplicate handling / old version cleanup * * As we always write to the new index, updates of older documents leave a dup in the previous versioned index behind. However, * documents are tiny, so the impact is rather small. * * Nevertheless cleanup would be good, eventually we need to move old documents into new indexes after major upgrades. * * TODO: Provide a method that moves old docs into the current index and delete old indexes and templates */",1,1,0,1,-1,-1,-1,-1
"/** * Process the search response of the changes query and remember the changes. * * TODO: replace the boolean with a more descriptive enum. * * @param searchResponse the response after querying for changes * @return the position of the change collector, null in case the collector is exhausted */",1,1,1,1,-1,-1,-1,-1
"/** * Prune transactions and items according to the given min count * * Prune rewrites the internal data structures by getting rid of items which are * below the given minSupport. * * Performance: In addition it re-arranges transactions in order to execute a * contains operation as linear scan, see [ITEM-BOW]. * * Currently this is only used after merging all shard stores. * * TODO: * *  - explore whether we could prune per shard based on a heuristic *  - if minimum_set_size is 1, only keep `size` items * * @param minSupport the minimum support an item must have to be kept */",1,1,0,1,-1,-1,-1,-1
"/** * Removes all the internal entries from the map. The entry is considered internal when the key starts with underscore character ('_'). * The original document is *not* changed. The method returns a new document instead. * * TODO: Find out how to properly handle user-provided fields whose names start with underscore character ('_'). * @param document the document to index represented as a {@link Map} * @param <V> Value type of document map. * @return A new {@link Map} but with all keys that start with ""_"" removed */",1,1,1,1,-1,-1,-1,-1
"/** * Repository cleanup action for repository implementations based on {@link BlobStoreRepository}. * * The steps taken by the repository cleanup operation are as follows: * <ol> *     <li>Check that there are no running repository cleanup, snapshot create, or snapshot delete actions *     and add an entry for the repository that is to be cleaned up to {@link RepositoryCleanupInProgress}</li> *     <li>Run cleanup actions on the repository. Note, these are executed exclusively on the master node. *     For the precise operations execute see {@link BlobStoreRepository#cleanup}</li> *     <li>Remove the entry in {@link RepositoryCleanupInProgress} in the first step.</li> * </ol> * * On master failover during the cleanup operation it is simply removed from the cluster state. This is safe because the logic in * {@link BlobStoreRepository#cleanup} ensures that the repository state id has not changed between creation of the cluster state entry * and any delete/write operations. TODO: This will not work if we also want to clean up at the shard level as those will involve writes *                                        as well as deletes. */",1,1,0,1,-1,-1,-1,-1
/** * Returns an ordered collection of group by fields in order to get better performance. * * The decision is based on the type and whether the input field is a indexed/runtime/script field * * TODO: take index sorting into account * * @param groups group by as defined by the user * @param runtimeFields set of runtime fields * @return collection in order of priority */,1,1,1,1,-1,-1,-1,-1
"/** * Returns the simple name, which identifies this mapper against other mappers at the same level in the mappers hierarchy * TODO: make this protected once Mapper and FieldMapper are merged together */",1,1,1,1,-1,-1,-1,-1
/** * Returns true if the result doesn't contain any useful information. * It is used by the search action to avoid creating an empty response on * shard request that rewrites to match_no_docs. * * TODO: Currently we need the concrete aggregators to build empty responses. This means that we cannot *       build an empty response in the coordinating node so we rely on this hack to ensure that at least one shard *       returns a valid empty response. We should move the ability to create empty responses to aggregation builders *       in order to allow building empty responses directly from the coordinating node. */,1,1,1,1,-1,-1,-1,-1
/** * Serialises new XContentType VND_ values in a bwc manner * TODO remove in ES v9 * @param out stream output of the destination node * @param xContentType an instance to serialize */,1,1,1,1,-1,-1,-1,-1
"/** * Stores the initial response with the original headers of the authenticated user * and the expected expiration time. * Currently for EQL we don't set limit for a stored async response * TODO: add limit for stored async response in EQL, and instead of this method use createResponse */",1,1,1,1,-1,-1,-1,-1
"/** * TODO: Remove this test once classpath plugins are fully moved to MockNode. * In production, plugin name clashes are checked in a completely different way. * See {@link PluginsServiceTests#testPluginNameClash()} */",1,1,1,1,-1,-1,-1,-1
/** * Test the hijacking a cursor fails. This test is only implemented for * REST because it is the only API where it is simple to hijack a cursor. * It should exercise the same code as the other APIs but if we were truly * paranoid we'd hack together something to test the others as well. */,1,1,1,1,-1,-1,-1,-1
/** * Tests that restoring of a corrupted shard fails and we get a partial snapshot. * TODO once checksum verification on snapshotting is implemented this test needs to be fixed or split into several * parts... We should also corrupt files on the actual snapshot and check that we don't restore the corrupted shard. */,1,1,1,1,-1,-1,-1,-1
/** * The currently applied cluster state. * TODO: Should be renamed to appliedState / appliedClusterState */,1,1,1,1,-1,-1,-1,-1
"/** * The indices request cache allows to cache a shard level request stage responses, helping with improving * similar requests that are potentially expensive (because of aggs for example). The cache is fully coherent * with the semantics of NRT (the index reader cache key is part of the cache key), and relies on size based * eviction to evict old reader associated cache entries as well as scheduler reaper to clean readers that * are no longer used or closed shards. * <p> * Currently, the cache is only enabled for count requests, and can only be opted in on an index * level setting that can be dynamically changed and defaults to false. * <p> * There are still several TODOs left in this class, some easily addressable, some more complex, but the support * is functional. */",1,1,0,1,-1,-1,-1,-1
"/** * This field only exists to be silently ignored when the body of a Mount API request contains a ""ignored_index_settings"" instead of * ""ignore_index_settings"" (note the missing 'd'). We need to silently ignores this field instead of rejecting the request because the * High Level REST Client uses the wrong field name. See https://github.com/elastic/elasticsearch/issues/75982. * TODO: remove in 9.0. */",1,1,0,1,-1,-1,-1,-1
"/** * This has been found to be approximately 300MB on linux by manual testing. * 30MB of this is accounted for via the space set aside to load the code into memory * that we always add as overhead (see MachineLearning.NATIVE_EXECUTABLE_CODE_OVERHEAD). * That would result in 270MB here, although the problem with this is that it would * mean few models would fit on a 2GB ML node in Cloud with logging and metrics enabled. * Therefore we push the boundary a bit and require a 240MB per-model overhead. * TODO Check if it is substantially different in other platforms. */",1,1,0,1,-1,-1,-1,-1
"/** * This is a ""workaround"" method to log index ""access_granted"" and ""access_denied"" events for actions not tied to a * {@code TransportMessage}, or when the connection is not 1:1, i.e. several audit events for an action associated with the same * message. It is currently only used to audit the resolved index (alias) name for each {@code BulkItemRequest} comprised by a * {@code BulkShardRequest}. We should strive to not use this and TODO refactor it out! */",1,1,1,1,-1,-1,-1,-1
"/** * This is a hack for filter scripts, which must return booleans instead of doubles as expression do. * See https://github.com/elastic/elasticsearch/issues/26429. */",1,1,1,1,-1,-1,-1,-1
"/** * This is for lower version requests compatible. * <p> * If we do not keep this, it could be expensive when receiving a request from * lower version. * We have to read the value list by {@link StreamInput#readGenericValue}, * serialize it into {@link BytesReference}, and then deserialize it again when * {@link #doToQuery} called}. * <p> * * TODO: remove in 9.0.0 */",1,1,1,1,-1,-1,-1,-1
/** * Thrown when snapshot creation fails completely * TODO: Remove this class in 8.0 * @deprecated This exception isn't thrown anymore. It's only here for BwC. */,1,1,1,1,-1,-1,-1,-1
/** * Tracks already executing {@link IndexLifecycleClusterStateUpdateTask} tasks in {@link #executingTasks} to prevent queueing up * duplicate cluster state updates. * TODO: refactor ILM logic so that this is not required any longer. It is unreasonably expensive to only filter out duplicate tasks at *       this point given how these tasks are mostly set up on the cluster state applier thread. * * @param source source string as used in {@link ClusterService#submitUnbatchedStateUpdateTask} * @param task   task to submit unless already tracked in {@link #executingTasks}. */,1,1,1,1,-1,-1,-1,-1
"/** * Unpacks ByteRef back into a list of terms * * TODO: this is a temporary solution, we should replace it with a more optimal mechanism instead of relying on BytesKeyedBucketOrds */",1,1,1,1,-1,-1,-1,-1
/** * We can't send parseSearchRequest REST content that it doesn't support * so we will have to remove the content that is valid in addition to * what it supports from the content first. This is a temporary hack and * should get better when SearchRequest has full ObjectParser support * then we can delegate and stuff. */,1,1,1,1,-1,-1,-1,-1
/** * Wrapper for the {@link MlController} interface that allows it to be used * given the way {@link Node} does Guice bindings for plugin components. * TODO: remove this class entirely once Guice is removed entirely. */,1,1,1,1,-1,-1,-1,-1
"/** * the list of nodesIds that will be used to resolve this request and {@link #concreteNodes} * will be populated. Note that if {@link #concreteNodes} is not null, it will be used and nodeIds * will be ignored. * * See {@link DiscoveryNodes#resolveNodes} for a full description of the options. * * TODO: we can get rid of this and resolve it to concrete nodes in the rest layer */",1,1,1,1,-1,-1,-1,-1
/*TODO should we throw if this is not set?*/,1,1,1,1,-1,-1,-1,-1
// 5) All the permissions needed for UGI to do its weird JAAS hack,1,1,1,1,-1,-1,-1,-1
// 5. Replace Turkish İ with I (TODO - check this out better...),1,1,1,1,-1,-1,-1,-1
// @TODO : Submit a patch to OpenSAML to optionally disable the timer,1,1,1,1,-1,-1,-1,-1
// A bit of a hack to (ab)use shardIndex property here to,1,1,1,1,-1,-1,-1,-1
// BWC - hack for input requests made to elasticsearch that do not provide the right content-type header!,1,1,1,1,-1,-1,-1,-1
// FIXME this is an antipattern move this out of a bootstrap check!,1,1,0,1,-1,-1,-1,-1
// FIXME this was copy pasted from the other impl and not used. breaks the nasty date actually gets assigned,1,1,0,1,-1,-1,-1,-1
// FIXME we need to audit here,1,1,1,1,-1,-1,-1,-1
"// FIXME: The settings might be changed after this (e.g. from ""additionalSettings"" method in other plugins)",1,1,0,1,-1,-1,-1,-1
// FIXME: accessor interface until making script generation pluggable,1,1,0,1,-1,-1,-1,-1
// FIXME: includeFrozen needs to be set already,1,1,0,1,-1,-1,-1,-1
// FIXME: the project split causes different behaviour between Gradle vs IDEs,1,1,0,1,-1,-1,-1,-1
// HACK: windows asynchronously releases file locks after processes exit. Unfortunately there is no clear way to wait on,1,1,1,1,-1,-1,-1,-1
// Hack it so the field to be parsed is also one of the column names,1,1,1,1,-1,-1,-1,-1
// Hack so that the Unified Highlighter can still extract the original terms from this query,1,1,1,1,-1,-1,-1,-1
// Hack the new pattern into place,1,1,1,1,-1,-1,-1,-1
// Make sure it's not the same type. TODO: Can we check for deeper cycles?,1,1,1,1,-1,-1,-1,-1
// Make sure it's not the same type. TODO: Can we check for deeper loops?,1,1,1,1,-1,-1,-1,-1
"// Only report ""critical"" exceptions - TODO: Reach out to the master node to get the latest shard state then report.",1,1,1,1,-1,-1,-1,-1
// TODO (crazybob): Filter out overridden members.,1,1,1,1,-1,-1,-1,-1
"// TODO (crazybob): if we can't proxy this object, can we proxy the other object?",1,1,1,1,-1,-1,-1,-1
// TODO (support scripts),1,1,1,1,-1,-1,-1,-1
"// TODO - distance_error_pct ends up being subsumed into a calculated value, how to test",1,1,1,1,-1,-1,-1,-1
"// TODO - do we need something more extensible? Yet, this does the job for now...",1,1,1,1,-1,-1,-1,-1
// TODO - if already timed out can we shortcut the trip somehow? Throw exception if remaining time < 0?,1,1,1,1,-1,-1,-1,-1
// TODO - need to check with mapping that this is indeed a text field....,1,1,1,1,-1,-1,-1,-1
// TODO - process all results in the batch,1,1,1,1,-1,-1,-1,-1
"// TODO : ""saml_nameid"" should be null too, but the logout code requires it for now.",1,1,1,1,-1,-1,-1,-1
// TODO A better way to handle this rather than just ignoring the error?,1,1,1,1,-1,-1,-1,-1
"// TODO Can this actually happen? Needs a test to exercise it, or else needs to be removed.",1,1,1,1,-1,-1,-1,-1
// TODO Change this to run with security enabled,1,1,1,1,-1,-1,-1,-1
// TODO Change this when we get more than just langIdent stored,1,1,1,1,-1,-1,-1,-1
// TODO Discuss moving compileOptions.getCompilerArgs() to use provider api with Gradle team.,1,1,1,1,-1,-1,-1,-1
// TODO Fix the test so that it runs with security enabled,1,1,1,1,-1,-1,-1,-1
// TODO Handle validating possibly signed responses,1,1,1,1,-1,-1,-1,-1
// TODO I'd have expected this to be true but we fail too early?,1,1,1,1,-1,-1,-1,-1
// TODO Improve heuristic for in-memory model size.,1,1,1,1,-1,-1,-1,-1
// TODO IndexRouting should build the query somehow,1,1,1,1,-1,-1,-1,-1
// TODO Is it what we really want to test?,1,1,1,1,-1,-1,-1,-1
// TODO It'd be nice not to refresh on every slice. Instead we should refresh after the sub requests finish.,1,1,1,1,-1,-1,-1,-1
// TODO JIndex we shouldn't be building the job here,1,1,1,1,-1,-1,-1,-1
"// TODO Make our packaging test methods aware of multiple installations, see https://github.com/elastic/elasticsearch/issues/79688",1,1,1,1,-1,-1,-1,-1
"// TODO Maybe just clear out non-ongoing snapshot recoveries is the node is master eligible, so that we don't",1,1,1,1,-1,-1,-1,-1
// TODO Modify tests below to work with security when BWC version is after 8.0.0,1,1,1,1,-1,-1,-1,-1
// TODO Not sure this needs to be a sorted map,1,1,1,1,-1,-1,-1,-1
// TODO PG logger impl instance caching https://github.com/elastic/elasticsearch/issues/87511,1,1,0,1,-1,-1,-1,-1
// TODO Remove if compatibility with 8.x is no longer necessary,1,1,1,1,-1,-1,-1,-1
// TODO Remove in 9?.x,1,1,1,1,-1,-1,-1,-1
// TODO Remove this from 9.0,1,1,1,1,-1,-1,-1,-1
// TODO Review security level,1,1,1,1,-1,-1,-1,-1
// TODO Should this be pos instead of 0? This assigns exact matches to the southernmost component.,1,1,1,1,-1,-1,-1,-1
// TODO Should use InternalComposite constructor but it is package protected in core.,1,1,1,1,-1,-1,-1,-1
// TODO Stop expecting nulls here,1,1,1,1,-1,-1,-1,-1
// TODO TBD use a different trigger for creating the cache index and avoid a put in the CACHE_NOT_READY case.,1,1,1,1,-1,-1,-1,-1
// TODO This could be expanded to allow primitives where neither of the two operations allow them alone,1,1,1,1,-1,-1,-1,-1
// TODO This could fail with errors. In that case we get stuck with the copied index.,1,1,1,1,-1,-1,-1,-1
// TODO This is wrong. Settings can change after this. We should use the settings from createComponents,1,1,1,1,-1,-1,-1,-1
"// TODO When java 9 features can be used, we will not need the local variable here",1,1,1,1,-1,-1,-1,-1
"// TODO a ""bottom up"" insert would save a couple of comparisons. Worth it?",1,1,1,1,-1,-1,-1,-1
// TODO abstract in a base `InternalUser` class,1,1,1,1,-1,-1,-1,-1
// TODO accept a requested xcontent type,1,1,1,1,-1,-1,-1,-1
// TODO add a method or interface to aggregation builder that defaults to false,1,1,1,1,-1,-1,-1,-1
"// TODO add at least hdfs, and investigate supporting all `BlobStoreRepository` implementations",1,1,1,1,-1,-1,-1,-1
// TODO add data_frame attributes when/if they are added,1,1,1,1,-1,-1,-1,-1
// TODO add equals tests with mutating the original object,1,1,1,1,-1,-1,-1,-1
"// TODO add exhaustive verifications (from/to/content.length, version supported, id == recomputed id etc)",1,1,1,1,-1,-1,-1,-1
"// TODO add global params like never_split, bos_token, eos_token, mask_token, tokenize_chinese_chars, strip_accents, etc.",1,1,1,1,-1,-1,-1,-1
// TODO add link to docs,1,1,1,1,-1,-1,-1,-1
// TODO add specific tests to SearchExecutionTests similar to the ones in FieldTypeLookupTests,1,1,1,1,-1,-1,-1,-1
// TODO add support for batching here,1,1,1,1,-1,-1,-1,-1
"// TODO add support for other roles? If so, it may have to be an instance method...",1,1,1,1,-1,-1,-1,-1
// TODO add the predicate,1,1,1,1,-1,-1,-1,-1
"// TODO after backporting we expect this never to happen in 8.x, so adjust this to throw an exception instead.",1,1,1,1,-1,-1,-1,-1
// TODO allow configuration of value mode,1,1,1,1,-1,-1,-1,-1
// TODO allow customizing the time zone - this is what session set/reset/get should be about,1,1,1,1,-1,-1,-1,-1
// TODO allow non-numeric value_counts.,1,1,1,1,-1,-1,-1,-1
// TODO also use sizes that aren't a power of two,1,1,1,1,-1,-1,-1,-1
// TODO assert SystemUser.is(fallbackUser);,1,1,1,1,-1,-1,-1,-1
"// TODO assertBusy should not be here, see https://github.com/elastic/elasticsearch/issues/38348",1,1,1,1,-1,-1,-1,-1
// TODO better way to know if the scripted metric received documents?,1,1,1,1,-1,-1,-1,-1
// TODO can we emit a warning if we're losing precision here? I'm not sure we can.,1,1,1,1,-1,-1,-1,-1
"// TODO can we get around this? the cluster is RED, so what do we wait for?",1,1,1,1,-1,-1,-1,-1
// TODO can we have this just a NumericDocValues?,1,1,1,1,-1,-1,-1,-1
// TODO cancel when a slice fails?,1,1,1,1,-1,-1,-1,-1
// TODO change this to use _source instead of the exact form (aka field.keyword for geo shape fields),1,1,1,1,-1,-1,-1,-1
// TODO change this to use _source instead of the exact form (aka field.keyword for text fields),1,1,1,1,-1,-1,-1,-1
// TODO change version on backport,1,1,1,1,-1,-1,-1,-1
// TODO check is closed,1,1,1,1,-1,-1,-1,-1
// TODO comment from Colin in review:,1,1,0,1,-1,-1,-1,-1
// TODO consider changing this implementation to emit tokens as-we-go,1,1,1,1,-1,-1,-1,-1
// TODO consider splitting up enable and disable to have their own rest handler,1,1,1,1,-1,-1,-1,-1
// TODO convert this wildcard to a real setting,1,1,1,1,-1,-1,-1,-1
// TODO correct the loss of precision from the range somehow.....?,1,1,1,1,-1,-1,-1,-1
"// TODO create a system user class, so that the type system guarantees that this is only invoked for internal users",1,1,1,1,-1,-1,-1,-1
// TODO deprecate and remove in API,1,1,1,1,-1,-1,-1,-1
"// TODO describe the document instead of ""null""",1,1,1,1,-1,-1,-1,-1
// TODO do not allow parsing unrecognized parameter value https://github.com/elastic/elasticsearch/issues/63080,1,1,1,1,-1,-1,-1,-1
// TODO does it makes sense to test normalize on tokenizer and analyzer?,1,1,1,1,-1,-1,-1,-1
// TODO does not test using the recovery range size,1,1,1,1,-1,-1,-1,-1
// TODO drop aliases once they are moved to module,1,1,1,1,-1,-1,-1,-1
// TODO drop this temporary shim when all the old style tokenizers have been migrated to new style,1,1,1,1,-1,-1,-1,-1
// TODO error_count here???,1,1,1,1,-1,-1,-1,-1
// TODO evict cache file if fsync failed,1,1,1,1,-1,-1,-1,-1
"// TODO expose getFormatter(), keyed upstream in Core",1,1,0,1,-1,-1,-1,-1
// TODO expose the currently running rollup tasks on this node? Unclear the best way to do that,1,1,1,1,-1,-1,-1,-1
// TODO externalize this into something user editable,1,1,1,1,-1,-1,-1,-1
// TODO find a better string to output,1,1,1,1,-1,-1,-1,-1
// TODO find a better way to limit concurrent updates (and potential associated reroutes) while allowing tests to ensure that,1,1,1,1,-1,-1,-1,-1
// TODO fix these leaks and implement leak checking,1,1,1,1,-1,-1,-1,-1
// TODO floating point conversions are lossy but conversions to integer are not. Are we ok with that?,1,1,1,1,-1,-1,-1,-1
"// TODO for now we re-run the script every time a leaf field is accessed, but we could cache the values?",1,1,1,1,-1,-1,-1,-1
"// TODO forbid nulls here, this only applies to very old repositories",1,1,1,1,-1,-1,-1,-1
// TODO generalise this so that it succeeds as soon as it's acquired a permit on >1/2 of the master-eligible nodes,1,1,1,1,-1,-1,-1,-1
// TODO generate more malformed WKT,1,1,1,1,-1,-1,-1,-1
// TODO have the IndexRouting build the query and pass routingRequired in,1,1,1,1,-1,-1,-1,-1
// TODO header could be empty,1,1,1,1,-1,-1,-1,-1
// TODO how can this not be true,1,1,1,1,-1,-1,-1,-1
// TODO how could we stream in the model definition WHILE parsing it?,1,1,1,1,-1,-1,-1,-1
// TODO how might we use JtsSpatialContextFactory to configure the context (esp. for non-geo)?,1,1,1,1,-1,-1,-1,-1
"// TODO ideally we should make defaulting for weekbased year here too,",1,1,1,1,-1,-1,-1,-1
"// TODO if perf is a problem, we can specialize a subclass to avoid conditionals on each iteration",1,1,1,1,-1,-1,-1,-1
"// TODO if we ever support anything other than ""basic"" and platinum, we need to adjust our feature tracking logic",1,1,1,1,-1,-1,-1,-1
// TODO implement better diffable logic so that whole diff does not need to be serialized if only one part changes,1,1,1,1,-1,-1,-1,-1
// TODO implement semi-sorting,1,1,1,1,-1,-1,-1,-1
// TODO implement term visiting,1,1,1,1,-1,-1,-1,-1
// TODO implement the single point optimization above,1,1,1,1,-1,-1,-1,-1
// TODO improve FreezeResponse so that it also reports failures from the close index API,1,1,1,1,-1,-1,-1,-1
// TODO improve this measure for when nested docs are in use,1,1,1,1,-1,-1,-1,-1
// TODO in this case we should probably remove the source filtering entirely. Right? It costs but we don't need it.,1,1,1,1,-1,-1,-1,-1
// TODO in v10:,1,1,1,1,-1,-1,-1,-1
// TODO in v8.0.0 move this out so that it will be included when `exclude_generated` is `true`,1,1,1,1,-1,-1,-1,-1
// TODO in v9:,1,1,1,1,-1,-1,-1,-1
// TODO investigate if a data type Long (BIGINT) wouldn't be more appropriate here,1,1,1,1,-1,-1,-1,-1
// TODO investigate reusing Page here - it probably is much more efficient,1,1,1,1,-1,-1,-1,-1
// TODO investigate this and remove this guard,1,1,1,1,-1,-1,-1,-1
// TODO is a newer version than the node's a valid value?,1,1,1,1,-1,-1,-1,-1
// TODO is it worth keeping this when we have ListRowSet?,1,1,1,1,-1,-1,-1,-1
"// TODO is this really a good default number for max_merge_segment, what happens for large indices,",1,1,1,1,-1,-1,-1,-1
// TODO is this right?,1,1,1,1,-1,-1,-1,-1
// TODO is this the behaviour we want?,1,1,1,1,-1,-1,-1,-1
// TODO it is unclear why we can't just use the IndexSearcher which already caches,1,1,1,1,-1,-1,-1,-1
"// TODO it looks like this passes the ""final"" reduce context more than once.",1,1,1,1,-1,-1,-1,-1
// TODO it would be good one day to possibly interpolate between ranges in the histogram fields,1,1,1,1,-1,-1,-1,-1
// TODO it'd be faster to count the number of buckets in a list of these ords rather than one at a time,1,1,1,1,-1,-1,-1,-1
// TODO it'd be faster to iterate many ords at once rather than one at a time,1,1,1,1,-1,-1,-1,-1
// TODO it'd be nice to combine this with BaseRestHandler's implementation.,1,1,1,1,-1,-1,-1,-1
// TODO keep track of unsuccessful requests in different entries,1,1,0,1,-1,-1,-1,-1
// TODO know when sampling would be much slower and skip sampling: https://github.com/elastic/elasticsearch/issues/84353,1,1,1,1,-1,-1,-1,-1
"// TODO log watch record in logger, when saving in history store failed, otherwise the info is gone!",1,1,1,1,-1,-1,-1,-1
// TODO lookup the min and max rounding when appropriate,1,1,1,1,-1,-1,-1,-1
// TODO make it the caller's responsibility to fork to an appropriate thread before even calling this method - see #87911,1,1,1,1,-1,-1,-1,-1
// TODO make the service account user a separate class/interface,1,1,1,1,-1,-1,-1,-1
// TODO make the type system ensure that this is not a run-as user,1,1,1,1,-1,-1,-1,-1
// TODO maybe aggs should force millis because lots so of other places want nanos?,1,1,1,1,-1,-1,-1,-1
"// TODO maybe we can improve the ""did pre-start-up config run"" check",1,1,1,1,-1,-1,-1,-1
// TODO maybe we can improve the check that this is indeed the initial node,1,1,1,1,-1,-1,-1,-1
// TODO maybe we can make this a setting for rigurous users,1,1,1,1,-1,-1,-1,-1
// TODO maybe we can make this concrete later - for now we just implement this in the base class for all initial phases,1,1,1,1,-1,-1,-1,-1
// TODO maybe we can randomize these numbers somehow,1,1,1,1,-1,-1,-1,-1
// TODO maybe we can respect throttling here too?,1,1,1,1,-1,-1,-1,-1
// TODO maybe we can return an empty commit?,1,1,1,1,-1,-1,-1,-1
// TODO maybe we need a getter on Namedanalyzer that tells if this uses broken Analysis,1,1,1,1,-1,-1,-1,-1
// TODO migrate to securesetting!,1,1,1,1,-1,-1,-1,-1
// TODO most Releasables are managed by their callers. We probably don't need this.,1,1,1,1,-1,-1,-1,-1
// TODO move the request to the correct node. maybe here or somehow do it as part of startup for reindex in general....,1,1,1,1,-1,-1,-1,-1
// TODO move this constant to License.java once we move License.java to the protocol jar,1,1,1,1,-1,-1,-1,-1
// TODO mutate the predicate,1,1,1,1,-1,-1,-1,-1
// TODO not sure how useful the following test is,1,1,1,1,-1,-1,-1,-1
"// TODO now that these rollup caps are being used more widely (e.g. search), perhaps we should",1,1,1,1,-1,-1,-1,-1
// TODO now that we have config we make a method on bytes to do this building wihout needing this check everywhere,1,1,1,1,-1,-1,-1,-1
// TODO once composite is plugged in to the values source registry or at least understands Date values source types use it,1,1,1,1,-1,-1,-1,-1
// TODO only millisecond granularity here!,1,1,1,1,-1,-1,-1,-1
// TODO phase out geohash (which is currently used in the CompletionSuggester),1,1,1,1,-1,-1,-1,-1
// TODO public for tests,1,1,1,1,-1,-1,-1,-1
// TODO push some of this writing logic down into the blob container implementation.,1,1,1,1,-1,-1,-1,-1
// TODO randomize the size and the params in here?,1,1,1,1,-1,-1,-1,-1
// TODO randomize the size?,1,1,1,1,-1,-1,-1,-1
// TODO read maxBuckets at runtime,1,1,1,1,-1,-1,-1,-1
// TODO read the width from the data type?,1,1,1,1,-1,-1,-1,-1
// TODO reconstruct the id on fetch from tsid and timestamp,1,1,1,1,-1,-1,-1,-1
// TODO remove context entirely when it isn't needed,1,1,1,1,-1,-1,-1,-1
// TODO remove funky contexts,1,1,1,1,-1,-1,-1,-1
// TODO remove once jvm.options are added to test system properties,1,1,1,1,-1,-1,-1,-1
// TODO remove once we removed default dependencies from PluginBuildPlugin,1,1,1,1,-1,-1,-1,-1
// TODO remove this entirely?,1,1,1,1,-1,-1,-1,-1
// TODO remove this shitty method... the `assertConditionMet` is bogus,1,1,1,1,-1,-1,-1,-1
// TODO remove this short circuiting and fix tests that fail without this!,1,1,1,1,-1,-1,-1,-1
// TODO remove when no longer needed for wire BWC,1,1,1,1,-1,-1,-1,-1
// TODO rename this to fullPath???,1,1,1,1,-1,-1,-1,-1
// TODO rename this to leafName?,1,1,1,1,-1,-1,-1,-1
// TODO replace with ValuesSourceConfig once the value source refactor has landed,1,1,1,1,-1,-1,-1,-1
// TODO resolve,1,1,1,1,-1,-1,-1,-1
// TODO review: what size cap should we put on this?,1,1,1,1,-1,-1,-1,-1
// TODO rework things so that we don't need this,1,1,1,1,-1,-1,-1,-1
// TODO rewrite this to use a field filter built from field patterns,1,1,1,1,-1,-1,-1,-1
// TODO right now we only trim down to the best N vertices. We might also want to offer,1,1,1,1,-1,-1,-1,-1
// TODO seems like this + lowercase + tokenize cjk + wordpiece could all be the same thing....,1,1,1,1,-1,-1,-1,-1
// TODO separate out ours and users models possibly regression vs classification,1,1,1,1,-1,-1,-1,-1
"// TODO set ""maybeWrap"" to true for IndexSearcher once #23338 is resolved",1,1,1,1,-1,-1,-1,-1
// TODO shard error handling,1,1,1,1,-1,-1,-1,-1
// TODO should this allow null values?,1,1,1,1,-1,-1,-1,-1
// TODO should use blob,1,1,1,1,-1,-1,-1,-1
// TODO should we fail in this case???,1,1,1,1,-1,-1,-1,-1
// TODO should we have a snapshot tmp directory per shard that is maintained by the system?,1,1,1,1,-1,-1,-1,-1
// TODO should we have regression/classification sub-classes that accept the builder?,1,1,1,1,-1,-1,-1,-1
// TODO should we really just drop this exception on the floor?,1,1,1,1,-1,-1,-1,-1
// TODO should we throw an IAE if we have two nodes with the same host?,1,1,1,1,-1,-1,-1,-1
// TODO should we validate that the aggs define the fields requested in the analysis config?,1,1,1,1,-1,-1,-1,-1
// TODO should we validate the classes actually exist?,1,1,1,1,-1,-1,-1,-1
"// TODO significant text does a 2x here, should we as well?",1,1,1,1,-1,-1,-1,-1
// TODO split these settings up,1,1,1,1,-1,-1,-1,-1
// TODO split this into dedicated unit test classes (one for each config object),1,1,1,1,-1,-1,-1,-1
// TODO stop expecting nulls here,1,1,1,1,-1,-1,-1,-1
// TODO stop ignoring parameters such as charset...,1,1,1,1,-1,-1,-1,-1
// TODO support Z??,1,1,1,1,-1,-1,-1,-1
// TODO support multiple docs,1,1,1,1,-1,-1,-1,-1
// TODO swap this over to DateHistoConfig.Builder once DateInterval is in,1,1,1,1,-1,-1,-1,-1
// TODO test SqlGetIndicesAction. Skipping for now because of lack of serialization support.,1,1,1,1,-1,-1,-1,-1
// TODO the logic here needs to be reworked to also include runtime fields. Though matching is against mappers rather,1,1,1,1,-1,-1,-1,-1
// TODO there is an opportunity to optimize the returned caps to find the minimal set of required caps.,1,1,1,1,-1,-1,-1,-1
// TODO these ain't gonna work with runtime fields,1,1,1,1,-1,-1,-1,-1
// TODO these tests are temporary until the named objects are actually used by an encompassing class (i.e. ModelInferer),1,1,1,1,-1,-1,-1,-1
// TODO this,1,1,1,1,-1,-1,-1,-1
// TODO this class can be foled into either IndicesService and partially into IndicesClusterStateService,1,1,1,1,-1,-1,-1,-1
// TODO this could almost certainly start higher when asMultiBucketAggregator is gone,1,1,1,1,-1,-1,-1,-1
// TODO this could be incorrect... e.g. +1 + -1,1,1,1,1,-1,-1,-1,-1
// TODO this currently only considers memory. We should also consider CPU when autoscaling by CPU is possible.,1,1,1,1,-1,-1,-1,-1
// TODO this feels like it is for tests but it has escaped,1,1,1,1,-1,-1,-1,-1
// TODO this filter agg is now redundant given we filter on job ID,1,1,1,1,-1,-1,-1,-1
// TODO this has a weird side-effect for allocating to nodes,1,1,1,1,-1,-1,-1,-1
"// TODO this is a really shitty way to test it, we need to figure out a way to test all the client methods",1,1,1,1,-1,-1,-1,-1
// TODO this is fairly expensive to compute. Can we avoid needing it?,1,1,1,1,-1,-1,-1,-1
// TODO this is lame,1,1,1,1,-1,-1,-1,-1
// TODO this is pretty similar to FieldSortBuilder. Share?,1,1,1,1,-1,-1,-1,-1
"// TODO this is probably not ultimately necessary, keeping track of where we are in the stream",1,1,1,1,-1,-1,-1,-1
"// TODO this is probably super slow, but just used for testing atm",1,1,1,1,-1,-1,-1,-1
// TODO this is to retain BWC compatibility in 7.0 and can be removed for 8.0,1,1,1,1,-1,-1,-1,-1
"// TODO this is wrong, we should only use the environment that is provided to createComponents",1,1,1,1,-1,-1,-1,-1
// TODO this lines up with FieldSortBuilder. Share?,1,1,1,1,-1,-1,-1,-1
"// TODO this means requests may still be routed here, should we not stop deployment?",1,1,1,1,-1,-1,-1,-1
// TODO this method helps because of asMultiBucketAggregator. Once we remove it we can move this logic into the aggregators.,1,1,1,1,-1,-1,-1,-1
// TODO this needs heavy cleanups before we can rewrite it,1,1,1,1,-1,-1,-1,-1
// TODO this one seems useless,1,1,1,1,-1,-1,-1,-1
// TODO this randomization path should be removed when the old settings are removed,1,1,1,1,-1,-1,-1,-1
// TODO this should be MODEL_ID...,1,1,1,1,-1,-1,-1,-1
// TODO this would be better done bottom-up instead of top-down to avoid,1,1,1,1,-1,-1,-1,-1
// TODO undefined parameters are allowed until https://github.com/elastic/elasticsearch/issues/63080,1,1,1,1,-1,-1,-1,-1
// TODO unsigned long dimension,1,1,1,1,-1,-1,-1,-1
// TODO update version on backport!,1,1,1,1,-1,-1,-1,-1
// TODO use a long in case models are larger than 2^31 bytes,1,1,1,1,-1,-1,-1,-1
// TODO use a more limited user for tasks,1,1,1,1,-1,-1,-1,-1
// TODO use separate SLM origin?,1,1,1,1,-1,-1,-1,-1
// TODO verify which version this test is actually valid for (when PR is actually merged),1,1,1,1,-1,-1,-1,-1
"// TODO we allow null here for the _all field, but this is forbidden in the parser. Re-check",1,1,1,1,-1,-1,-1,-1
// TODO we can almost certainly do better here by building something fit for purpose rather than trying to lego together stuff,1,1,1,1,-1,-1,-1,-1
"// TODO we can possibly support also relocating cases, where we cancel relocation and move...",1,1,1,1,-1,-1,-1,-1
// TODO we can potentially also consume the actual per shard results from the initial phase here in the aggregateDfs,1,1,1,1,-1,-1,-1,-1
// TODO we can potentially remove this in 6.x,1,1,1,1,-1,-1,-1,-1
// TODO we could actually add more fields implemented with different PFs,1,1,1,1,-1,-1,-1,-1
// TODO we might force a flush in the future since we have the write lock already even though recoveries,1,1,0,1,-1,-1,-1,-1
// TODO we might use the new NIO2 API to get real notification?,1,1,1,1,-1,-1,-1,-1
"// TODO we plan to support joins in the future when possible, but for now we'll just fail early if we see one",1,1,1,1,-1,-1,-1,-1
// TODO we should add the config dir to the resources so we don't copy this stuff around...,1,1,1,1,-1,-1,-1,-1
"// TODO we should be checking mapped field types, not lucene field types",1,1,1,1,-1,-1,-1,-1
// TODO we should improve this so we don't fire off a bunch of requests to do the same thing (create or update mappings),1,1,1,1,-1,-1,-1,-1
"// TODO we should refactor to remove this, since buckets should be immutable after they are generated.",1,1,1,1,-1,-1,-1,-1
// TODO we still have passwords in Strings in headers. Maybe we can look into using a CharSequence?,1,1,1,1,-1,-1,-1,-1
// TODO we usually have a heap here so we could use that to build the results sorted.,1,1,1,1,-1,-1,-1,-1
// TODO we'll have to handle this in the tests eventually,1,1,1,1,-1,-1,-1,-1
// TODO what is a right value?,1,1,1,1,-1,-1,-1,-1
"// TODO when using delete/none, we can still return the source as bytes by generating it (using the sourceContentType)",1,1,1,1,-1,-1,-1,-1
// TODO when we fix doc values fetcher we should add tests for date and ip ranges.,1,1,1,1,-1,-1,-1,-1
// TODO why does wildcard resolver throw exceptions regarding non wildcarded expressions? This should not be done here.,1,1,1,1,-1,-1,-1,-1
// TODO would be nice to avoid allocating this treemap in the future,1,1,1,1,-1,-1,-1,-1
"// TODO xpack.searchable.snapshot.allocate_on_rolling_restart was only temporary, remove it in the next major",1,1,1,1,-1,-1,-1,-1
"// TODO(jessewilson): fix BuiltInModule, then add Stage",1,1,1,1,-1,-1,-1,-1
// TODO(stu): expand this,1,1,1,1,-1,-1,-1,-1
// TODO(stu): handle primitives & not stdlib,1,1,1,1,-1,-1,-1,-1
// TODO(stu): is this test correct? Comparing against ingestDocument fails due to incorrectly failed byte array comparisons,1,1,1,1,-1,-1,-1,-1
// TODO(stu): should we use extractor for these imported methods?,1,1,1,1,-1,-1,-1,-1
// TODO(stu): this should be inaccessible,1,1,1,1,-1,-1,-1,-1
// TODO(stu): why would operation be null?,1,1,1,1,-1,-1,-1,-1
// TODO(tal): Support definitions,1,1,1,1,-1,-1,-1,-1
// TODO(talevy): assert changes... right now we do not support updates to policies. will require internal cleanup,1,1,1,1,-1,-1,-1,-1
// TODO(talevy): make things cancellable,1,1,1,1,-1,-1,-1,-1
"// TODO: ""package this up"" for external builds",1,1,1,1,-1,-1,-1,-1
// TODO: (maybe) Create a new bucket for <b>all</b> distant docs and merge down to shardSize buckets at end,1,1,1,1,-1,-1,-1,-1
"// TODO: 99 is leftover from alpha/beta/rc, it should be removed",1,1,1,1,-1,-1,-1,-1
// TODO: A better exception goes here,1,1,1,1,-1,-1,-1,-1
// TODO: Add all filters in nested sorting when https://github.com/elastic/elasticsearch/issues/33079 is implemented,1,1,1,1,-1,-1,-1,-1
// TODO: Add test/feature blocking the registration of basic license,1,1,1,1,-1,-1,-1,-1
// TODO: Add timeouts to network calls / the restore process.,1,1,1,1,-1,-1,-1,-1
// TODO: AggregatedDfs. Currently the idf can be different then when executing a normal search with explain.,1,1,1,1,-1,-1,-1,-1
// TODO: Assert that x-pack ccr feature is not enabled once feature functionality has been added,1,1,1,1,-1,-1,-1,-1
// TODO: Callers should ask for the range that source should be retained. Thus we should always,1,1,1,1,-1,-1,-1,-1
// TODO: Can delete test on 9.0,1,1,1,1,-1,-1,-1,-1
// TODO: Change this to true when we can assume that scripts are pure functions,1,1,1,1,-1,-1,-1,-1
// TODO: Check if we could save the set null step,1,1,1,1,-1,-1,-1,-1
// TODO: Consider restoring this assertion when we are sure all the audit messages are available at this point.,1,1,1,1,-1,-1,-1,-1
// TODO: Do we want to stop the task? This would cause it to be reloaded by state updates on INITIALIZING,1,1,1,1,-1,-1,-1,-1
// TODO: Does it make sense to have empty realms for a domain?,1,1,1,1,-1,-1,-1,-1
// TODO: Evaluate if we still need to catch this exception,1,1,1,1,-1,-1,-1,-1
// TODO: Eventually care about those that are STARTED but not FULLY_ALLOCATED,1,1,1,1,-1,-1,-1,-1
"// TODO: Existing - ""cluster_health_action"", ""cat_health_action""",1,1,1,1,-1,-1,-1,-1
// TODO: Explicitly add testing for these versions that validates that starting the node after upgrade fails,1,1,1,1,-1,-1,-1,-1
"// TODO: Extend DirectSpellChecker in 4.1, to get the raw suggested words as BytesRef",1,1,1,1,-1,-1,-1,-1
"// TODO: FAILURE status is never used, but a some code assumes that it is used",1,1,1,1,-1,-1,-1,-1
// TODO: Fallback for BWC with older ES versions. Remove once request.getCustomDataPath() always returns non-null,1,1,1,1,-1,-1,-1,-1
// TODO: Find a way to remove this query and let doToQuery(...) just return the query from JoinUtil.createJoinQuery(...),1,1,1,1,-1,-1,-1,-1
// TODO: Fix T-Digest: this assertion should pass but we currently get ~15,1,1,1,1,-1,-1,-1,-1
// TODO: Fix T-Digest: this assertion should pass but we currently get ~59,1,1,1,1,-1,-1,-1,-1
// TODO: Fix matrix stats to treat neg inf as any other value,1,1,1,1,-1,-1,-1,-1
// TODO: Fix repo cleanup logic to handle these leaked snap-file and only exclude test-repo (the mock repo) here.,1,1,1,1,-1,-1,-1,-1
// TODO: Fix the top hits aggregation,1,1,1,1,-1,-1,-1,-1
"// TODO: Functions supporting distinct should add a dedicated constructor Location, List<Expression>, boolean",1,1,1,1,-1,-1,-1,-1
// TODO: Generalize this class and add it as a utility,1,1,1,1,-1,-1,-1,-1
// TODO: Hacking around here with TransportTasksAction. Ideally we should have another base class in core that,1,1,1,1,-1,-1,-1,-1
// TODO: Have callers wrap the content with an object as they choose rather than forcing it upon them,1,1,1,1,-1,-1,-1,-1
"// TODO: However, for now we just return objectType that may require an extra cast.",1,1,1,1,-1,-1,-1,-1
"// TODO: I think we can remove these arrays. it isn't worth the effort, for operations on all indices.",1,1,1,1,-1,-1,-1,-1
// TODO: If in the future there is a Query#extractFields() then we can do a better job,1,1,1,1,-1,-1,-1,-1
"// TODO: Implement QueryBuilder for distance, boundingBox, polygon",1,1,1,1,-1,-1,-1,-1
// TODO: Implement custom Diff for tasks,1,1,1,1,-1,-1,-1,-1
// TODO: Implement standard to/from x-content parsing tests,1,1,1,1,-1,-1,-1,-1
// TODO: Implement this.,1,1,1,1,-1,-1,-1,-1
// TODO: In the rare case we still haven't reached a correct promotion we need,1,1,1,1,-1,-1,-1,-1
// TODO: InputStreamReader can advance stdin past what it decodes. We need a way to buffer this and put it back,1,1,1,1,-1,-1,-1,-1
// TODO: Is there a way to preserve the original timestamp when re-logging?,1,1,1,1,-1,-1,-1,-1
// TODO: Is this the correct exception type here?,1,1,1,1,-1,-1,-1,-1
// TODO: JDBC escape syntax,1,1,1,1,-1,-1,-1,-1
// TODO: Make common with the index method GeoShapeWithDocValuesFieldMapper,1,1,1,1,-1,-1,-1,-1
// TODO: Make source of search enum?,1,1,1,1,-1,-1,-1,-1
// TODO: Make this a simple request in a future version where there is no possibility,1,1,1,1,-1,-1,-1,-1
// TODO: Make this abstract when all sub-classes implement this (https://github.com/elastic/elasticsearch/issues/25929),1,1,1,1,-1,-1,-1,-1
// TODO: Maybe Fix for BWC,1,1,1,1,-1,-1,-1,-1
// TODO: Maybe it could also make sense to assume independent distributions of documents and eg. have:,1,1,1,1,-1,-1,-1,-1
// TODO: Method interceptors could actually enable us to implement,1,1,1,1,-1,-1,-1,-1
// TODO: Muted on windows until resolved: https://github.com/elastic/elasticsearch/issues/78318,1,1,1,1,-1,-1,-1,-1
// TODO: NaN/Inf/overflow/...,1,1,0,1,-1,-1,-1,-1
// TODO: No production code usage,1,1,1,1,-1,-1,-1,-1
"// TODO: Now that numeric sort uses indexed points to skip over non-competitive documents,",1,1,1,1,-1,-1,-1,-1
// TODO: On 9.0 this will be true because all compatible versions with contain the variable header int,1,1,1,1,-1,-1,-1,-1
"// TODO: Once Java has a factory for those in java.lang.invoke.MethodHandles, use it:",1,1,1,1,-1,-1,-1,-1
// TODO: Only visible for testing. Perhaps move StubbableTransport from,1,1,1,1,-1,-1,-1,-1
// TODO: Read translog forward in 9.0+,1,1,1,1,-1,-1,-1,-1
"// TODO: Remove null usage here, by using a different aggregator for create",1,1,1,1,-1,-1,-1,-1
// TODO: Remove sync_id in 9.0,1,1,1,1,-1,-1,-1,-1
// TODO: Remove this class when https://github.com/elastic/elasticsearch/issues/32981 is addressed.,1,1,1,1,-1,-1,-1,-1
// TODO: Remove this constructor,1,1,1,1,-1,-1,-1,-1
// TODO: Remove this escape hatch in 8.x,1,1,1,1,-1,-1,-1,-1
// TODO: Remove this if block once: https://github.com/elastic/elasticsearch/pull/80160 is merged,1,1,1,1,-1,-1,-1,-1
// TODO: Remove this once fixed in the AWS SDK,1,1,1,1,-1,-1,-1,-1
// TODO: Remove this parameter once the BulkMonitoring endpoint has been removed,1,1,1,1,-1,-1,-1,-1
// TODO: Remove this timeout increase once this test suite is broken up,1,1,1,1,-1,-1,-1,-1
// TODO: Remove this transition in 9.0,1,1,1,1,-1,-1,-1,-1
"// TODO: Rename to ""defer_data_validation"" or similar to emphasize that not all validation is deferred",1,1,1,1,-1,-1,-1,-1
// TODO: Rename to AuthenticationMethod,1,1,1,1,-1,-1,-1,-1
// TODO: Replace with proper setting,1,1,1,1,-1,-1,-1,-1
"// TODO: Script tests, should fail with defaultValuesSourceType disabled.",1,1,1,1,-1,-1,-1,-1
// TODO: See if we can get precise result reporting.,1,1,1,1,-1,-1,-1,-1
"// TODO: ShapeField contains binary, perhaps we can decode the x/y from that",1,1,1,1,-1,-1,-1,-1
// TODO: Should index creation not be throttled for primary shards?,1,1,1,1,-1,-1,-1,-1
// TODO: Should it expose a count (current approach) or return null when there are no more values?,1,1,1,1,-1,-1,-1,-1
// TODO: Should we allow parallelism across repositories here maybe?,1,1,1,1,-1,-1,-1,-1
// TODO: Should we rather pass roundUp=true?,1,1,1,1,-1,-1,-1,-1
// TODO: Simplify cursor handling,1,1,1,1,-1,-1,-1,-1
// TODO: Stop depending on nulls here,1,1,1,1,-1,-1,-1,-1
// TODO: Stop expecting nulls here,1,1,1,1,-1,-1,-1,-1
// TODO: Stop using null here,1,1,1,1,-1,-1,-1,-1
// TODO: Stop using nulls here,1,1,1,1,-1,-1,-1,-1
// TODO: Support distance and bounding box queries on Cartesian data,1,1,1,1,-1,-1,-1,-1
"// TODO: Support for exclusive ranges, pending resolution of #40601",1,1,1,1,-1,-1,-1,-1
// TODO: TextBytesOptimization we can use a buffer here to convert it? maybe add a,1,1,1,1,-1,-1,-1,-1
// TODO: The only implementations of this class use SAME which means the execution will not be,1,1,1,1,-1,-1,-1,-1
// TODO: There must be a better option than this.,1,1,1,1,-1,-1,-1,-1
// TODO: There should be some local timeout. And if the remote cluster returns an unknown session,0,1,1,1,-1,-1,-1,-1
// TODO: Think of a fairer way to do this. Should prev.max = cur.min?,1,1,1,1,-1,-1,-1,-1
"// TODO: This can be moved to IndexNameExpressionResolver too, but this means that we will support wildcards and other expressions",1,1,1,1,-1,-1,-1,-1
// TODO: This class's interface should match that of NodesInfoRequest,1,1,1,1,-1,-1,-1,-1
// TODO: This code retains the existing behaviour which is slightly wrong because,1,1,1,1,-1,-1,-1,-1
// TODO: This is a *temporary* workaround to ensure a timeout does not mask other problems,1,1,1,1,-1,-1,-1,-1
"// TODO: This is nonsense. We allow the value to be null (via constructor), but don't allow it to be set to null. This means",1,1,1,1,-1,-1,-1,-1
// TODO: This rate limiter has some concurrency issues between the two maybePause operations,1,1,1,1,-1,-1,-1,-1
// TODO: This request and its associated transport action can be folded into UpdateRequest which is its only concrete production code,1,1,1,1,-1,-1,-1,-1
// TODO: This way to discover cells inside of a bounding box seems not to work as expected. I can,1,1,1,1,-1,-1,-1,-1
// TODO: Use java.time for the Dates here: x-pack-elasticsearch#829,1,1,1,1,-1,-1,-1,-1
// TODO: Use snapshot multi-delete instead of this loop if all nodes in the cluster support it,1,1,1,1,-1,-1,-1,-1
// TODO: WTF?,1,1,1,1,-1,-1,-1,-1
// TODO: We don't have to remove a cancelled shard from in-sync set once we have a strict resync implementation.,1,1,1,1,-1,-1,-1,-1
"// TODO: We should move these datastructures to IndexNameExpressionResolver, this will give the following benefits:",1,1,1,1,-1,-1,-1,-1
// TODO: add a finish() at least to PushBase? DV too...?,1,1,1,1,-1,-1,-1,-1
// TODO: add assertions this is only read with readSecret,1,1,1,1,-1,-1,-1,-1
// TODO: add cancellation handling here once the task supports it,1,1,1,1,-1,-1,-1,-1
// TODO: add more fine grained mem stats values to per segment info here,1,1,1,1,-1,-1,-1,-1
// TODO: add sort test on nodoc field once we have pipes support,1,1,1,1,-1,-1,-1,-1
// TODO: add support for multi-nested doc,1,1,1,1,-1,-1,-1,-1
"// TODO: add zero terms query support, I'm not sure the best way to parse it yet...",1,1,1,1,-1,-1,-1,-1
// TODO: allow publishing multiple addresses,1,1,1,1,-1,-1,-1,-1
// TODO: allow this behavior instead of throwing an exception,1,1,1,1,-1,-1,-1,-1
// TODO: also unfortunately can't have USERNAME in the list as it matches too broadly,1,1,1,1,-1,-1,-1,-1
"// TODO: assertEquals(indexMetaGenerationsExpected, indexMetaGenerationsFound); requires cleanup functionality for",1,1,1,1,-1,-1,-1,-1
"// TODO: based on index.max_terms_count, however this is per index, which we don't have access to here,",1,1,1,1,-1,-1,-1,-1
// TODO: be and g and both based on the bose-einstein model.,1,1,1,1,-1,-1,-1,-1
// TODO: be resilient to this check failing and try next path?,1,1,1,1,-1,-1,-1,-1
// TODO: beef this up for Security/SSL,1,1,1,1,-1,-1,-1,-1
"// TODO: better API would be ""jump straight to term=N""???",1,1,1,1,-1,-1,-1,-1
"// TODO: binary search when all terms have the same length, which is common for ID fields,",1,1,1,1,-1,-1,-1,-1
// TODO: break down ram usage?,1,1,1,1,-1,-1,-1,-1
// TODO: break this into WritableFST and ReadOnlyFST.. then,1,1,1,1,-1,-1,-1,-1
"// TODO: byte,short,char",1,1,0,1,-1,-1,-1,-1
// TODO: can the Percentiles extractor be removed?,1,1,1,1,-1,-1,-1,-1
// TODO: can the Range extractor be removed?,1,1,1,1,-1,-1,-1,-1
// TODO: can we avoid having an exception here?,1,1,1,1,-1,-1,-1,-1
// TODO: can we do this cleaner???,1,1,1,1,-1,-1,-1,-1
// TODO: can we handle missing bucket when using index sort optimization ?,1,1,1,1,-1,-1,-1,-1
// TODO: can we move this to the .env package and make it package-private?,1,1,1,1,-1,-1,-1,-1
// TODO: can we remove this leniency yet??,1,1,1,1,-1,-1,-1,-1
// TODO: can we remove this? Is resending shard failures the responsibility of shardStateAction?,1,1,1,1,-1,-1,-1,-1
// TODO: can we share more code with the non-test side here,1,1,1,1,-1,-1,-1,-1
// TODO: can we share this with the frame in STE?,1,1,1,1,-1,-1,-1,-1
// TODO: can we test this better? this is a port of the ExpressionsTests method.,1,1,1,1,-1,-1,-1,-1
// TODO: can we use just ByteArrayDataInput...?  need to,1,1,1,1,-1,-1,-1,-1
// TODO: can we use one instance of the script for all buckets? it should be stateless?,1,1,1,1,-1,-1,-1,-1
// TODO: can't assert this because we call from readFirstArc,1,1,1,1,-1,-1,-1,-1
// TODO: cancel and jump to better available allocations?,1,1,1,1,-1,-1,-1,-1
// TODO: change caller logic in RoutingNodes so that this check can go away,1,1,1,1,-1,-1,-1,-1
// TODO: change order when delete index api also updates the data stream the index to be removed is member of,1,1,1,1,-1,-1,-1,-1
"// TODO: change this to minimumCompatibilityVersion(), but first need to remove released/unreleased",1,1,1,1,-1,-1,-1,-1
// TODO: change to String[],1,1,1,1,-1,-1,-1,-1
// TODO: change version to V_6_6_0 after backporting:,1,1,1,1,-1,-1,-1,-1
// TODO: check if we can go to green by starting all shards and finishing all iterations,1,1,1,1,-1,-1,-1,-1
// TODO: check primary == null || primary.active() after all tests properly add ReplicaAfterPrimaryActiveAllocationDecider,1,1,1,1,-1,-1,-1,-1
// TODO: check that object did not change when stream is reopened (e.g. based on etag),1,1,1,1,-1,-1,-1,-1
"// TODO: check why we need a loop, can't we just use received.addAndGet(candidates.size())",1,1,1,1,-1,-1,-1,-1
// TODO: clean up this library to not ask for write access to all system properties!,1,1,1,1,-1,-1,-1,-1
// TODO: consider a hll sparse structure,1,1,1,1,-1,-1,-1,-1
// TODO: consider a lower bound for usecases where you want to transform on a window of a stream,1,1,1,1,-1,-1,-1,-1
"// TODO: consider adding another field here for inference cache hits, but mindful of the naming collision",1,1,1,1,-1,-1,-1,-1
// TODO: consider adding debugging information (a message about why not?),1,1,1,1,-1,-1,-1,-1
// TODO: consider adding more fine-grained status rather than true/false,1,1,1,1,-1,-1,-1,-1
// TODO: consider moving this to the ClusterModule,1,1,1,1,-1,-1,-1,-1
// TODO: consider setting this back to true now that the transport client is gone,1,1,1,1,-1,-1,-1,-1
"// TODO: consider using InlineByteBuddyMockMaker, but this requires using a java agent for instrumentation",1,1,1,1,-1,-1,-1,-1
// TODO: consolidate logging initialization for tests so it all occurs in logconfigurator,1,1,1,1,-1,-1,-1,-1
// TODO: could we somehow [partially] tableize arc lookups,1,1,1,1,-1,-1,-1,-1
// TODO: could we somehow stream an FST to disk while we,1,1,1,1,-1,-1,-1,-1
// TODO: could we use an allocation strategy?,1,1,1,1,-1,-1,-1,-1
"// TODO: ctx should have its members extracted into execute parameters, but it needs to be a member bwc access in params",1,1,1,1,-1,-1,-1,-1
"// TODO: ctx should have its members extracted into execute parameters, but it needs to be a member for bwc access in params",1,1,1,1,-1,-1,-1,-1
// TODO: currently only considering anomaly detection jobs - could extend in the future,1,1,1,1,-1,-1,-1,-1
// TODO: currently we load up the suggester for reporting its size,1,1,1,1,-1,-1,-1,-1
// TODO: cut over all tests to bind to ephemeral ports,1,1,1,1,-1,-1,-1,-1
// TODO: cutover to bulk int codec... simple64?,1,1,0,1,-1,-1,-1,-1
// TODO: decide on one set of naming for between/scaledBetween and remove others,1,1,1,1,-1,-1,-1,-1
"// TODO: delete this test if we ever allow users to revert a job to no model snapshot, e.g. to recover from data loss",1,1,1,1,-1,-1,-1,-1
// TODO: deprecate and remove this field in favor of initialConnectionTimeout field that is of type TimeValue.,1,1,1,1,-1,-1,-1,-1
"// TODO: deprecate and remove, this is a noop token filter; it's here for backwards compat before we had ""smartcn_tokenizer""",1,1,1,1,-1,-1,-1,-1
"// TODO: deprecate and remove, this is an alias to ""smartcn_tokenizer""; it's here for backwards compat",1,1,1,1,-1,-1,-1,-1
// TODO: deprecate one of these styles (returning a map or returning an opaque value below),1,1,1,1,-1,-1,-1,-1
// TODO: deprecate this so we don't need to carry around a useless null in the wire format,1,1,1,1,-1,-1,-1,-1
"// TODO: disable this assertion for now, due to random runs with mock plugins. perhaps run without mock plugins?",1,1,1,1,-1,-1,-1,-1
// TODO: do a quick check and only resolve if necessary??,1,1,1,1,-1,-1,-1,-1
// TODO: do this without copying the bytes from tmp by calling writeBytes and just use the pages in tmp directly through,1,1,1,1,-1,-1,-1,-1
// TODO: do we need handling of delayed allocation for leaving replicas here?,1,1,1,1,-1,-1,-1,-1
// TODO: do we need minNodeVersion here since it is for remote cluster,1,1,1,1,-1,-1,-1,-1
// TODO: do we need to check the security manager here?,1,1,1,1,-1,-1,-1,-1
// TODO: do we need to report zeros?,1,1,1,1,-1,-1,-1,-1
// TODO: do we really need to store all this stuff? some if it might not speed up anything.,1,1,1,1,-1,-1,-1,-1
// TODO: document and/or error if params contains _score?,1,1,1,1,-1,-1,-1,-1
// TODO: does this also happen if the .ml-config index exists but is unavailable?,1,1,1,1,-1,-1,-1,-1
// TODO: does this make sense? Unlike with the store we could evict the cache concurrently and wait for nothing?,1,1,1,1,-1,-1,-1,-1
// TODO: dry up duplication across this suite and org.elasticsearch.snapshots.GetSnapshotsIT more,1,1,1,1,-1,-1,-1,-1
// TODO: ensure empty/no PARAMETERS if parameterTypes.length == 0?,1,1,1,1,-1,-1,-1,-1
// TODO: expose docs stats for replicated closed indices,1,1,1,1,-1,-1,-1,-1
// TODO: extract to standalone helper method,1,1,1,1,-1,-1,-1,-1
"// TODO: fail if pattern contains a newline, it won't work (currently)",1,1,1,1,-1,-1,-1,-1
"// TODO: fail shard? This will otherwise have the local / global checkpoint info lagging, or possibly have replicas",1,1,1,1,-1,-1,-1,-1
"// TODO: fake errors, check password from terminal, allow tests to make elasticsearch.yml change",1,1,1,1,-1,-1,-1,-1
"// TODO: feels hacky, a block disables state persistence, and then we clean the allocated shards, maybe another flag in blocks?",1,1,1,1,-1,-1,-1,-1
// TODO: figure out why GCE is so bad like this,1,1,1,1,-1,-1,-1,-1
// TODO: fix,1,1,1,1,-1,-1,-1,-1
// TODO: fix gradle to add all security resources (plugin metadata) to test classpath,1,1,1,1,-1,-1,-1,-1
// TODO: fix in Lucene,1,1,1,1,-1,-1,-1,-1
// TODO: fix test to allow extras,1,1,1,1,-1,-1,-1,-1
// TODO: fix test to work with ExtrasFS,1,1,1,1,-1,-1,-1,-1
// TODO: fix that,1,1,1,1,-1,-1,-1,-1
// TODO: fix this to so it's actually overrideable,1,1,1,1,-1,-1,-1,-1
// TODO: fix usages of IT tests depending on Tests methods so this extension is not necessary,1,1,1,1,-1,-1,-1,-1
// TODO: follow the directions in the Javadoc for this method,1,1,1,1,-1,-1,-1,-1
// TODO: for better perf (but more RAM used) we,1,1,1,1,-1,-1,-1,-1
// TODO: for systems like Windows without true p-write/read support we should split this up into multiple channels since positional,1,1,1,1,-1,-1,-1,-1
"// TODO: for the above example, remove the binding for BarImpl if the binding for FooImpl fails",1,1,1,1,-1,-1,-1,-1
// TODO: get this fixed,1,1,1,1,-1,-1,-1,-1
// TODO: go masterless?,1,1,0,1,-1,-1,-1,-1
// TODO: handle this cleaner?,1,1,1,1,-1,-1,-1,-1
"// TODO: heap based and wasteful, this should instead use some lucene magic",1,1,1,1,-1,-1,-1,-1
"// TODO: heap based and wasteful, this should instead use some lucene magic if possible",1,1,1,1,-1,-1,-1,-1
// TODO: how can we compute this?,1,1,1,1,-1,-1,-1,-1
// TODO: how can we know if the script relies on scores?,1,1,1,1,-1,-1,-1,-1
// TODO: how close to the actual InternalCategorizationAggregation.Bucket class does this have to be to add any value?,1,1,1,1,-1,-1,-1,-1
// TODO: how to do it in the future?,1,1,1,1,-1,-1,-1,-1
// TODO: https://github.com/elastic/elasticsearch/issues/40779,1,1,0,1,-1,-1,-1,-1
// TODO: https://github.com/elastic/elasticsearch/issues/51836,1,1,0,1,-1,-1,-1,-1
// TODO: if FST is pure prefix trie we can do a more compact,1,1,1,1,-1,-1,-1,-1
// TODO: if I create a proxy which implements all the interfaces of,1,1,1,1,-1,-1,-1,-1
// TODO: if buildChangesQuery changes the query it get overwritten,1,1,1,1,-1,-1,-1,-1
// TODO: if docFreq were bulk decoded we could,1,1,1,1,-1,-1,-1,-1
// TODO: if each arc could somehow read the arc just,1,1,1,1,-1,-1,-1,-1
// TODO: if pending.size() is already 1 with a non-zero prefix length,1,1,1,1,-1,-1,-1,-1
"// TODO: if some uses it in a scoring expression, they will get a nasty failure when evaluating...need a",1,1,1,1,-1,-1,-1,-1
// TODO: if suffixes were stored in random-access,1,1,0,1,-1,-1,-1,-1
"// TODO: if the automaton is ""smallish"" we really",1,1,1,1,-1,-1,-1,-1
"// TODO: if this is still too long, truncate and use ellipses",1,1,1,1,-1,-1,-1,-1
"// TODO: if we really need we can break out name (e.g. ""hack"" or ""scriptEngineService"" or whatever).",1,1,1,1,-1,-1,-1,-1
// TODO: implement custom extension that allows us move around of the projects between major versions and still find them,1,1,1,1,-1,-1,-1,-1
// TODO: implement tests,1,1,1,1,-1,-1,-1,-1
// TODO: improve the calculation of this min and max,1,1,1,1,-1,-1,-1,-1
// TODO: improve this for multi-nested responses,1,1,1,1,-1,-1,-1,-1
"// TODO: in 8.0+, only allow updating index templates, not adding new ones",1,1,1,1,-1,-1,-1,-1
// TODO: in jopt-simple 5.0 we can use a PathConverter to take Path instead of File,1,1,1,1,-1,-1,-1,-1
"// TODO: in some cases representing missing with minValue-1 wouldn't take up additional space and so on,",1,1,1,1,-1,-1,-1,-1
// TODO: in some cases we can filter by length? eg,1,1,1,1,-1,-1,-1,-1
"// TODO: in the following logic, we do not account for existing cache size when handling disk space checks, should and can we",1,1,1,1,-1,-1,-1,-1
// TODO: in the future we could take proactive measures for when a shutdown is actually triggered,1,1,1,1,-1,-1,-1,-1
// TODO: in theory we could avoid loading frq block,1,1,1,1,-1,-1,-1,-1
// TODO: instead of flattening the FileTree here leverage FileTree.visit() so we can preserve folder hierarchy in a more robust way,1,1,1,1,-1,-1,-1,-1
// TODO: instead of recording isFinal/output on the,1,1,1,1,-1,-1,-1,-1
// TODO: introduce a way to ignore internal statements so this assert is not triggered,1,1,1,1,-1,-1,-1,-1
// TODO: invoke open point in time api when this api is moved from xpack core to server module.,1,1,1,1,-1,-1,-1,-1
// TODO: ip filtering does not actually track license usage yet,1,1,1,1,-1,-1,-1,-1
// TODO: is MANAGEMENT TP the right TP? Right now this is an admin api (see action name).,1,1,1,1,-1,-1,-1,-1
// TODO: is the buffer_length correct?,1,1,1,1,-1,-1,-1,-1
// TODO: is the javadoc accurate,1,1,1,1,-1,-1,-1,-1
// TODO: is this still relevant today?,1,1,1,1,-1,-1,-1,-1
// TODO: is this the right boilerplate? I forked this out of TransportAnalyzeAction.java:,1,1,1,1,-1,-1,-1,-1
// TODO: it appears that this can never be true?,1,1,1,1,-1,-1,-1,-1
// TODO: it takes almost 2 seconds to create these mocks....WHY?!?,1,1,1,1,-1,-1,-1,-1
"// TODO: it would be useful to also have the SYSTEM_JAVA_HOME setup in the root project, so that running from GCP only needs",1,1,1,1,-1,-1,-1,-1
"// TODO: it'd be great if these could be constants instead of Strings, needs a core change to make the fields public first",1,1,1,1,-1,-1,-1,-1
// TODO: just load this once,1,1,1,1,-1,-1,-1,-1
// TODO: leave some margin for error here,1,1,1,1,-1,-1,-1,-1
// TODO: legacy support can be removed once all X-Pack plugins use only composable,1,1,1,1,-1,-1,-1,-1
// TODO: make WatcherServiceRequest a real AckedRequest so that we have both a configurable timeout and master node timeout like,1,1,1,1,-1,-1,-1,-1
// TODO: make all usages of headers case-insensitive,1,1,1,1,-1,-1,-1,-1
// TODO: make configurable,1,1,1,1,-1,-1,-1,-1
// TODO: make frq block load lazy/skippable,1,1,1,1,-1,-1,-1,-1
"// TODO: make index_mode, start and end time fields in IndexMetadata class.",1,1,1,1,-1,-1,-1,-1
// TODO: make it possible to choose a language instead of or as well as English for the part-of-speech dictionary,1,1,1,1,-1,-1,-1,-1
// TODO: make settings accessible only to code that registered the setting,1,1,1,1,-1,-1,-1,-1
// TODO: make this array'd so we can do bin search?,1,1,1,1,-1,-1,-1,-1
// TODO: make this configurable,1,1,1,1,-1,-1,-1,-1
// TODO: make this not a ToXContent to make this unnecessary,1,1,1,1,-1,-1,-1,-1
// TODO: make this test robust to virus scanner,1,1,1,1,-1,-1,-1,-1
// TODO: maybe a CharsRef version for BYTE2,1,1,1,1,-1,-1,-1,-1
// TODO: maybe add a flatMap (need to double check the Stream bit),1,1,1,1,-1,-1,-1,-1
// TODO: maybe add scanToLabel; should give perf boost,1,1,1,1,-1,-1,-1,-1
// TODO: maybe change this API to allow for re-use of the,1,1,1,1,-1,-1,-1,-1
// TODO: maybe if number of arcs is high we can safely subsample?,1,1,1,1,-1,-1,-1,-1
// TODO: maybe make valid(T output) public...? for asserts,1,1,1,1,-1,-1,-1,-1
// TODO: maybe track these in bitsets too? this is trickier...,1,1,1,1,-1,-1,-1,-1
// TODO: maybe we could add bulk-add method to,1,1,1,1,-1,-1,-1,-1
// TODO: maybe we should actually check the key is...i dunno...valid?,1,1,1,1,-1,-1,-1,-1
// TODO: maybe we should do the same linear test,1,1,1,1,-1,-1,-1,-1
// TODO: maybe we should make an FST.INPUT_TYPE.BYTE0.5!?,1,1,1,1,-1,-1,-1,-1
// TODO: merge this into XPackPlugin,1,1,1,1,-1,-1,-1,-1
"// TODO: merge with PagedBytes, except PagedBytes doesn't",1,1,1,1,-1,-1,-1,-1
// TODO: more detailed ram usage?,1,1,1,1,-1,-1,-1,-1
// TODO: more efficient?,1,1,1,1,-1,-1,-1,-1
// TODO: move PathUtils to be package-private here instead of,1,1,1,1,-1,-1,-1,-1
// TODO: move all aggs to the same package so that this stuff could be pkg-private,1,1,1,1,-1,-1,-1,-1
// TODO: move all config/bin/_size/etc into packaging,1,1,1,1,-1,-1,-1,-1
// TODO: move geometry normalization to the geometry parser.,1,1,1,1,-1,-1,-1,-1
// TODO: move into context constructor,1,1,1,1,-1,-1,-1,-1
"// TODO: move this back to module test permissions, see https://github.com/elastic/elasticsearch/issues/69464",1,1,1,1,-1,-1,-1,-1
// TODO: move this out if we need it for other reasons,1,1,1,1,-1,-1,-1,-1
"// TODO: move this to a shared function, or fix plugin layout to have jar files in lib directory",1,1,1,1,-1,-1,-1,-1
// TODO: move this to a unit test somewhere...,1,1,1,1,-1,-1,-1,-1
// TODO: move to AnalysisFactoryTestCase so we can more easily test thread safety for all factories,1,1,1,1,-1,-1,-1,-1
// TODO: move to VersionCompatibilityChecks,1,1,1,1,-1,-1,-1,-1
"// TODO: multi fields are really just copy fields, we just need to expose ""sub fields"" or something that can be part",1,1,1,1,-1,-1,-1,-1
// TODO: need to investigate when this can be not-null,1,1,1,1,-1,-1,-1,-1
// TODO: need tree structure,1,1,1,1,-1,-1,-1,-1
// TODO: needs to be InetAddress[],1,1,1,1,-1,-1,-1,-1
// TODO: no half & scaled float testing,1,1,0,1,-1,-1,-1,-1
// TODO: no jars should be an error,1,1,1,1,-1,-1,-1,-1
// TODO: not consistent that in the,1,1,1,1,-1,-1,-1,-1
"// TODO: not ideal, make a better api for this (e.g. with jar metadata, and so on)",1,1,1,1,-1,-1,-1,-1
// TODO: not sure if this next line is correct - if we discarded some categories due to size or minDocCount is this handled?,1,1,1,1,-1,-1,-1,-1
"// TODO: now that terms dict ""sees"" these longs,",1,1,1,1,-1,-1,-1,-1
"// TODO: now we have this in Java, perform this operation in Java for anomaly detection categorization instead of in C++.",1,1,1,1,-1,-1,-1,-1
// TODO: once RollupSearchAction is changed from indices:admin* to indices:data/read/* this branch is not needed,1,1,1,1,-1,-1,-1,-1
"// TODO: once a token is extracted by realms, we should no longer handle null token if no realm can authenticate the token",1,1,1,1,-1,-1,-1,-1
// TODO: once some query syntax has been removed from 8.0 and deprecated in 7.x reinstate this test,1,1,1,1,-1,-1,-1,-1
// TODO: only open these for mockito when it is modularized,1,1,1,1,-1,-1,-1,-1
// TODO: optimize for when a shape fits in a single tile an,1,1,1,1,-1,-1,-1,-1
// TODO: optimize store order based on auth result?,1,1,1,1,-1,-1,-1,-1
// TODO: optimize this,1,1,1,1,-1,-1,-1,-1
// TODO: optimize to skip any bundles not connected to the candidate plugin?,1,1,1,1,-1,-1,-1,-1
// TODO: override toXContent,1,1,0,1,-1,-1,-1,-1
"// TODO: overwrites types, requires resolve if types are mixed",1,1,1,1,-1,-1,-1,-1
// TODO: pass the latest timestamp from engine.,1,1,0,1,-1,-1,-1,-1
// TODO: pass through task here?,1,1,1,1,-1,-1,-1,-1
// TODO: perform real close of the delegate: LUCENE-4058,1,1,1,1,-1,-1,-1,-1
// TODO: performance testing to find the sweet spot,1,1,1,1,-1,-1,-1,-1
// TODO: perhaps store the original version information in attributes so that we can retrieve it later when needed?,1,1,1,1,-1,-1,-1,-1
// TODO: please convert to unit tests!,1,1,1,1,-1,-1,-1,-1
// TODO: possibly caller could/should provide common,1,1,1,1,-1,-1,-1,-1
// TODO: provide engineConfig.getLeafSorter() when opening a DirectoryReader from a commit,1,1,1,1,-1,-1,-1,-1
// TODO: randomize replica count settings once recovery operations aren't blocking anymore,1,1,1,1,-1,-1,-1,-1
// TODO: randomize the size?,1,1,1,1,-1,-1,-1,-1
// TODO: randomize the wait for active shards value on index creation and ensure the appropriate,1,1,1,1,-1,-1,-1,-1
"// TODO: really we should encode this as an arc, arriving",1,1,1,1,-1,-1,-1,-1
// TODO: refactor map diff reading to avoid having to construct empty diffs before throwing them away here,1,1,1,1,-1,-1,-1,-1
// TODO: remove POST endpoint?,1,1,1,1,-1,-1,-1,-1
// TODO: remove THIS when hadoop is fixed,1,1,1,1,-1,-1,-1,-1
"// TODO: remove oldVersions, we should only ever have 2 majors in Version",1,1,1,1,-1,-1,-1,-1
// TODO: remove once refresh doesn't fail immediately if there a master block:,1,1,1,1,-1,-1,-1,-1
"// TODO: remove read permission, see https://github.com/elastic/elasticsearch/issues/69464",1,1,1,1,-1,-1,-1,-1
// TODO: remove setting logging level via system property,1,1,1,1,-1,-1,-1,-1
// TODO: remove the threadpool wrapping when the .add call is non-blocking,1,1,1,1,-1,-1,-1,-1
// TODO: remove this for 8.0,1,1,1,1,-1,-1,-1,-1
// TODO: remove this hack once we remove the deprecated ability to use repository settings in the cluster state in the S3 snapshot,1,1,1,1,-1,-1,-1,-1
// TODO: remove this hack when insecure defaults are removed from java,1,1,1,1,-1,-1,-1,-1
// TODO: remove this if the assert doesn't trip in CI over the next year or so,1,1,1,1,-1,-1,-1,-1
// TODO: remove this in 6.0,1,1,1,1,-1,-1,-1,-1
// TODO: remove this indirection now that transport client is gone,1,1,1,1,-1,-1,-1,-1
// TODO: remove this leniency,1,1,1,1,-1,-1,-1,-1
// TODO: remove this leniency once we fix the API to handle master failover cleaner,1,1,1,1,-1,-1,-1,-1
"// TODO: remove this leniency, these settings should exist together and be validated",1,1,1,1,-1,-1,-1,-1
// TODO: remove this once cname is prepended to transport.publish_address by default in 8.0,1,1,1,1,-1,-1,-1,-1
// TODO: remove this once ctx isn't added to update script params in 7.0,1,1,1,1,-1,-1,-1,-1
// TODO: remove this once min compat version is a constant instead of method,1,1,1,1,-1,-1,-1,-1
// TODO: remove this once scripts know to look for params under params key,1,1,1,1,-1,-1,-1,-1
// TODO: remove this property in 8.0,1,1,1,1,-1,-1,-1,-1
"// TODO: remove this, just for debugging",1,1,1,1,-1,-1,-1,-1
// TODO: remove unused API extension point,1,1,1,1,-1,-1,-1,-1
"// TODO: rename all these ""file"" methods to ""dir""",1,1,1,1,-1,-1,-1,-1
// TODO: replace frequently() with usually(),1,1,1,1,-1,-1,-1,-1
// TODO: replace these with an enum,1,1,1,1,-1,-1,-1,-1
// TODO: replace this with #closeContexts,1,1,1,1,-1,-1,-1,-1
// TODO: replace usages of this with warning_regex or allowed_warnings_regex,1,1,1,1,-1,-1,-1,-1
"// TODO: replace with a class that better represent the result, e.g. carry info for disabled role",1,1,1,1,-1,-1,-1,-1
// TODO: replace with constants class if needed (cf. org.apache.lucene.util.Constants),1,1,1,1,-1,-1,-1,-1
// TODO: replace with usages of Map.of and Map.ofEntries,1,1,1,1,-1,-1,-1,-1
"// TODO: resolve no longer generates invalid configs. Once VSConfig is immutable, we can drop this check",1,1,1,1,-1,-1,-1,-1
// TODO: return a prettier name on non-Linux OS,1,1,1,1,-1,-1,-1,-1
// TODO: return info for SCALED_FLOATS (should be based on field not type),1,1,1,1,-1,-1,-1,-1
// TODO: return the actual throttle time,1,1,1,1,-1,-1,-1,-1
// TODO: reverse vLong byte order for better FST,1,1,1,1,-1,-1,-1,-1
// TODO: revisit the next two tests when https://github.com/elastic/elasticsearch/issues/64190 is closed,1,1,1,1,-1,-1,-1,-1
"// TODO: rework these tests to mock jvm option finder so they can run with security manager, no forking needed",1,1,1,1,-1,-1,-1,-1
// TODO: rework this test to use a dummy Version class so these don't need to change with each release,1,1,1,1,-1,-1,-1,-1
// TODO: rewrite this test to not use a real second distro to try and install,1,1,1,1,-1,-1,-1,-1
// TODO: scope it per file?,1,1,0,1,-1,-1,-1,-1
// TODO: set non-compliant status on auto-follow coordination that can be viewed via a stats API,1,1,1,1,-1,-1,-1,-1
"// TODO: short,byte,char",1,1,0,1,-1,-1,-1,-1
"// TODO: should verify this against the Vagrantfile, but would need to do so in afterEvaluate once vagrantfile is unmodifiable",1,1,1,1,-1,-1,-1,-1
"// TODO: should we add option to mean ""ignore docs that",1,1,1,1,-1,-1,-1,-1
"// TODO: should we apply the same logic here as FieldPermissions#limitFieldPermissions,",1,1,1,1,-1,-1,-1,-1
// TODO: should we consider the locale as well?,1,1,1,1,-1,-1,-1,-1
// TODO: should we expose the total number of buckets on InternalGeoTileGrid?,1,1,1,1,-1,-1,-1,-1
// TODO: should we fail to start?,1,1,1,1,-1,-1,-1,-1
// TODO: should we handle this with a thrown exception?,1,1,1,1,-1,-1,-1,-1
// TODO: should we implement numeric - interval types conversions too; ever needed? ODBC does mandate it,1,1,1,1,-1,-1,-1,-1
// TODO: should we return a status here (SEEK_FOUND / SEEK_NOT_FOUND /,1,1,1,1,-1,-1,-1,-1
// TODO: should we send offsets/payloads to,1,1,1,1,-1,-1,-1,-1
// TODO: should we support conversion to TIMESTAMP?,1,1,1,1,-1,-1,-1,-1
// TODO: should we try skipping every 2/4 blocks...?,1,1,1,1,-1,-1,-1,-1
// TODO: should we validate enable status and length of role names on instantiation time of anonymousUser?,1,1,1,1,-1,-1,-1,-1
"// TODO: shouldn't this be up to the ScoreMode? I.e., we should just invoke ScoreMode.combine, passing 0.0f for the",1,1,1,1,-1,-1,-1,-1
// TODO: sort shouldn't fail when sort field is mapped dynamically,1,1,1,1,-1,-1,-1,-1
// TODO: source,1,1,1,1,-1,-1,-1,-1
// TODO: specialize based on compiled.type: for ALL and prefixes (sinkState >= 0 ) we can avoid i/o and just set bits.,1,1,1,1,-1,-1,-1,-1
// TODO: stop expecting a null here,1,1,1,1,-1,-1,-1,-1
// TODO: stop expecting nulls here,1,1,1,1,-1,-1,-1,-1
// TODO: stop using LanguageIdentifier...,1,1,1,1,-1,-1,-1,-1
// TODO: stop using nulls here,1,1,1,1,-1,-1,-1,-1
// TODO: store intermediate results ?,1,1,1,1,-1,-1,-1,-1
// TODO: support dynamic_templates in update requests,1,1,1,1,-1,-1,-1,-1
// TODO: support for IDN,1,1,1,1,-1,-1,-1,-1
// TODO: sync this with the grammar,1,1,1,1,-1,-1,-1,-1
// TODO: test CRUD operations,1,1,0,1,-1,-1,-1,-1
"// TODO: the B6 appendix of the jdbc spec does mention CHAR, VARCHAR, LONGVARCHAR, DATE, TIMESTAMP as supported",1,1,0,1,-1,-1,-1,-1
// TODO: the error message in case the value in the column cannot be converted to a Date refers to a column index,1,1,1,1,-1,-1,-1,-1
// TODO: these charfilters are not yet exposed: useful?,1,1,1,1,-1,-1,-1,-1
// TODO: these tokenfilters are not yet exposed: useful?,1,1,1,1,-1,-1,-1,-1
"// TODO: this array is always of length 1, and testChildrenAggs fails if this is changed",1,1,1,1,-1,-1,-1,-1
// TODO: this can deadlock as it might access the ScoreSortBuilder (subclass) initializer from the SortBuilder initializer!!!,1,1,1,1,-1,-1,-1,-1
// TODO: this can't possibly be right! single node and integ test are unrelated!,1,1,1,1,-1,-1,-1,-1
"// TODO: this catch is bogus, it means the old repo is already closed,",1,1,1,1,-1,-1,-1,-1
// TODO: this check needs to be revised. It's trivially true right now.,1,1,1,1,-1,-1,-1,-1
// TODO: this could be incorporated into the query generation,1,1,1,1,-1,-1,-1,-1
"// TODO: this could be more efficient, to only parse final options once",1,1,1,1,-1,-1,-1,-1
// TODO: this doesn't need to be a supplier anymore,1,1,1,1,-1,-1,-1,-1
"// TODO: this fallback is only needed for tests, in production input is always Settings.EMPTY",1,1,1,1,-1,-1,-1,-1
// TODO: this interaction with sort comparators is really ugly...,1,1,1,1,-1,-1,-1,-1
// TODO: this is a hack!! We should instead keep track of incoming (relocated) shards since we know,1,1,1,1,-1,-1,-1,-1
// TODO: this is just a stop-gap solution for until we have an encrypted output stream wrapper,1,1,1,1,-1,-1,-1,-1
// TODO: this is not entirely accurate if anonymous user can create a token,1,1,1,1,-1,-1,-1,-1
// TODO: this is public so allocation benchmark can access the default deciders...can we do that in another way?,1,1,1,1,-1,-1,-1,-1
"// TODO: this is to retain existing behaviour, but it is not accurate",1,1,1,1,-1,-1,-1,-1
"// TODO: this is wrong, i.e. we are comparing apples and oranges at this point. It would be better if we always rescored all",1,1,1,1,-1,-1,-1,-1
// TODO: this method can be removed in 9.0 because we will no longer use v1 templates to create indices (only v2 templates),1,1,1,1,-1,-1,-1,-1
// TODO: this method only exists for access to LoggingAuditTrail in a Node for testing.,1,1,1,1,-1,-1,-1,-1
// TODO: this needs to be improved to avoid creating the pattern on every call,1,1,1,1,-1,-1,-1,-1
// TODO: this needs to be improved to properly scale each row across multiple lines,1,1,1,1,-1,-1,-1,-1
"// TODO: this path is currently not used in production code, if it ever is this should start using pooled buffers",1,1,1,1,-1,-1,-1,-1
// TODO: this probably shouldn't apply to groovy at all?,1,1,1,1,-1,-1,-1,-1
"// TODO: this seems wrong, SearchPhaseResult should have a writeTo?",1,1,1,1,-1,-1,-1,-1
"// TODO: this should just be test framework, but some cleanup is needed in places incorrectly specifying java vs yaml",1,1,1,1,-1,-1,-1,-1
// TODO: this should probably be handled server side,1,1,1,1,-1,-1,-1,-1
// TODO: to calculate the highest upper bound for the two types and return that.,1,1,1,1,-1,-1,-1,-1
// TODO: try to avoid wasteful cases: disable doFixedLengthArcs in that case,1,1,1,1,-1,-1,-1,-1
// TODO: try writing the leading vLong in MSB order,1,1,1,1,-1,-1,-1,-1
// TODO: upgrade the HDRHistogram library,1,1,1,1,-1,-1,-1,-1
"// TODO: use .nextSetBit here, at least!!",1,1,1,1,-1,-1,-1,-1
// TODO: use FieldHighlighter::highlightOffsetsEnums and modify BoundedBreakIteratorScanner to work with it,1,1,1,1,-1,-1,-1,-1
// TODO: use FieldHighlighter::maybeAddPassage,1,1,1,1,-1,-1,-1,-1
// TODO: use UTC for now until deciding on a strategy for handling date extraction,1,1,1,1,-1,-1,-1,-1
// TODO: use a consistent data path for custom paths,1,1,1,1,-1,-1,-1,-1
// TODO: use another method of testing not being able to read the test file written by the master...,1,1,1,1,-1,-1,-1,-1
// TODO: use diamond once JI-9019884 is fixed,1,1,1,1,-1,-1,-1,-1
// TODO: use diamond operator once JI-9019884 is fixed,1,1,1,1,-1,-1,-1,-1
// TODO: use explodedPlugin here for modules,1,1,1,1,-1,-1,-1,-1
// TODO: useful to break down RAM usage here?,1,1,1,1,-1,-1,-1,-1
// TODO: validate against known service accounts?,1,1,1,1,-1,-1,-1,-1
// TODO: validation,1,1,1,1,-1,-1,-1,-1
// TODO: verify the classname exists in one of the jars!,1,1,1,1,-1,-1,-1,-1
"// TODO: want to read packages the same for src dirs and jars, but src dirs we also want the files in the src package dir",1,1,1,1,-1,-1,-1,-1
// TODO: wasteful we are counting this (counting # docs,1,1,1,1,-1,-1,-1,-1
"// TODO: we are breaking the rules of UUIDs by lowercasing this here, find an alternative (snapshot names must be lowercase)",1,1,1,1,-1,-1,-1,-1
// TODO: we can free up a bit if we can nuke this:,1,1,1,1,-1,-1,-1,-1
// TODO: we could be more efficient for the next(),1,1,1,1,-1,-1,-1,-1
// TODO: we could enable FST to sorting arcs by weight,1,1,1,1,-1,-1,-1,-1
"// TODO: we could make ""tiers"" of metadata, ie,",1,1,1,1,-1,-1,-1,-1
// TODO: we could maybe defer this somewhat costly operation until one of the APIs that,1,1,1,1,-1,-1,-1,-1
"// TODO: we could push ""it's a range"" or ""it's a prefix"" down into IntersectTermsEnum?",1,1,1,1,-1,-1,-1,-1
// TODO: we could save the outputs in local,1,1,1,1,-1,-1,-1,-1
// TODO: we could skip this if !hasTerms; but,1,1,1,1,-1,-1,-1,-1
// TODO: we could specialize the single value case,1,1,1,1,-1,-1,-1,-1
// TODO: we have no CannedAnalyzer?,1,1,1,1,-1,-1,-1,-1
// TODO: we should add an easier to do this. It's too much of a song and dance..,1,1,1,1,-1,-1,-1,-1
"// TODO: we should be able to default this to eg compile deps, but we need to move the licenses",1,1,1,1,-1,-1,-1,-1
// TODO: we should fail the entire request because the topdocs,1,1,1,1,-1,-1,-1,-1
// TODO: we should fix this code to not have to create,1,1,1,1,-1,-1,-1,-1
// TODO: we should have a more efficient way of getting just the changed indices so that we don't have to fork here,1,1,1,1,-1,-1,-1,-1
// TODO: we should not ignore the exception and return a prefix query with the original term ?,1,1,1,1,-1,-1,-1,-1
// TODO: we should really try to get this fixed in ASM!,1,1,1,1,-1,-1,-1,-1
// TODO: we should write our vLong backwards (MSB,1,1,1,1,-1,-1,-1,-1
"// TODO: we should, instead, hold a ""bytes reserved"" of how large we anticipate this shard will be, e.g. for a shard",1,1,1,1,-1,-1,-1,-1
// TODO: we shouldn't be leaking empty shard directories when a shard (but not all of the index it belongs to),1,1,1,1,-1,-1,-1,-1
// TODO: what happen with rectangles over the dateline,1,1,1,1,-1,-1,-1,-1
// TODO: what should it be?,1,1,1,1,-1,-1,-1,-1
// TODO: what would be a good upper bound?,1,1,1,1,-1,-1,-1,-1
// TODO: why do we support suffix of LICENSE *and* LICENSE.txt??,1,1,1,1,-1,-1,-1,-1
"// TODO: why is shape here already, it is not supported yet",1,1,1,1,-1,-1,-1,-1
// TODO: why not populate negativeLookupCache here with missing roles?,1,1,1,1,-1,-1,-1,-1
// TODO: wildcard support?,1,1,1,1,-1,-1,-1,-1
"// TODO: with better support in Java 8, we should consider moving to use AES GCM as it",1,1,1,1,-1,-1,-1,-1
"// TODO: with jopt-simple 5.0, we can make these requiredUnless each other",1,1,1,1,-1,-1,-1,-1
// TODO: would be nice not to alloc this on every lookup,1,1,1,1,-1,-1,-1,-1
"// TODO: would be nice to have IPORHOST here, but HOST matches almost all words",1,1,1,1,-1,-1,-1,-1
"// TODO: would be nice to have IPORHOST here, but HOSTNAME matches almost all words",1,1,1,1,-1,-1,-1,-1
// TODO: would be nice to have more random data here,1,1,1,1,-1,-1,-1,-1
// TODO: would be nice to make this lazy -- maybe,1,1,1,1,-1,-1,-1,-1
// TODO[PCS]: add builder pattern here,1,1,1,1,-1,-1,-1,-1
// TODO[wrb]: most unmanaged system indices do not set origins; could we assert on that here?,1,1,1,1,-1,-1,-1,-1
// Temporary shim for aliases. TODO deprecate after they are moved,1,1,1,1,-1,-1,-1,-1
// They will be saved as `0` so this hack can be removed once we no longer have to read cluster states from 7.x.,1,1,1,1,-1,-1,-1,-1
"// This is a bit of a hack in tests, as we can't readd a trial license",1,1,1,1,-1,-1,-1,-1
// This is a hack for the fact that the close listener for the,1,1,1,1,-1,-1,-1,-1
// This is a random starting point alpha. TODO: revisit this with actual testing and/or make it configurable,1,1,1,1,-1,-1,-1,-1
// Todo: should we return a status here (SEEK_FOUND / SEEK_NOT_FOUND /,1,1,1,1,-1,-1,-1,-1
"// a HACK to make highlighter do highlighting, even though its using the single frag list builder",1,1,1,1,-1,-1,-1,-1
// a hack but this lets us get the right xcontent type to go with the source,1,1,1,1,-1,-1,-1,-1
// by this version of Elasticsearch. TODO TBD should we avoid indexing when possible?,1,1,1,1,-1,-1,-1,-1
// disallowed) so this is a hack to treat negative `min_age`s as 0 to prevent those errors.,1,1,1,1,-1,-1,-1,-1
// disregard unknown metrics; TODO eschew this lenience?,1,1,1,1,-1,-1,-1,-1
"// don't even think about passing args with -J-xxx, oracle will ask you to submit a bug report :)",1,0,1,1,-1,-1,-1,-1
// end hack,1,1,1,1,-1,-1,-1,-1
"// even though it's now possible to achieve better balance, so we have to do an explicit reroute. TODO fix this?",1,1,1,1,-1,-1,-1,-1
// for now... the hack begins,1,1,1,1,-1,-1,-1,-1
"// guarantee plugin classes are initialized first, in case they have one-time hacks.",1,1,1,1,-1,-1,-1,-1
// hack around code messiness in GCE code,1,1,1,1,-1,-1,-1,-1
// hack but it saves a lot of mocking,1,1,1,1,-1,-1,-1,-1
// hack to make it detected as YAML,1,1,1,1,-1,-1,-1,-1
"// hack: on Windows, Shell's clinit has a similar problem that on unix,",1,1,1,1,-1,-1,-1,-1
// implementations of CancellableTask#onCancelled() are nontrivial so we use GENERIC here. TODO could it be SAME?,1,1,1,1,-1,-1,-1,-1
// intellij hack: intellij test runner wants setIO and will,1,1,1,1,-1,-1,-1,-1
"// it's not possible to run it as @BeforeClass as clients aren't initialized then, so we need this little hack",1,1,1,1,-1,-1,-1,-1
// lower default permission: TODO: needed?,1,1,1,1,-1,-1,-1,-1
"// min compat JDK is JDK17, we can remove this hack and use the standard security properties file.",1,1,1,1,-1,-1,-1,-1
// mocking the logger used inside DeprecationLogger requires heavy hacking...,1,1,1,1,-1,-1,-1,-1
// noop; todo validate at least 1 polygon to ensure valid multipolygon,1,1,1,1,-1,-1,-1,-1
"// refer to the hack in bootstrap, where we don't log it",1,1,1,1,-1,-1,-1,-1
"// since all results need to be ASC, use this hack to figure out whether the results need to be flipped",1,1,1,1,-1,-1,-1,-1
"// this is a hack to bind the painless script engine in guice (all components are added to guice), so that",1,1,1,1,-1,-1,-1,-1
// this is a hack to clean up the .security index since only a superuser can delete it,1,1,1,1,-1,-1,-1,-1
// this is super duper hacky,1,1,1,1,-1,-1,-1,-1
// this must be a separate method from other ensure checks above so suite scoped integ tests can call...TODO: fix that,1,1,1,1,-1,-1,-1,-1
// this property is to support a hack to workaround an issue with Docker containers mounting the cgroups hierarchy inconsistently with,1,1,1,1,-1,-1,-1,-1
// todo,1,1,0,1,-1,-1,-1,-1
// todo add BYTE support,1,1,1,1,-1,-1,-1,-1
// todo add ParseField support to XContentBuilder,1,1,1,1,-1,-1,-1,-1
// todo add SHORT support,1,1,1,1,-1,-1,-1,-1
// todo how to workaround this? we get AssertionError without this,1,1,1,1,-1,-1,-1,-1
// todo need postCollection() to clean up temp sorted data?,1,1,1,1,-1,-1,-1,-1
// todo should it be BufferedInputStream ?,1,1,1,1,-1,-1,-1,-1
// todo support half_float,1,1,1,1,-1,-1,-1,-1
"// todo(hendrikm): workaround, see",1,1,1,1,-1,-1,-1,-1
// todo: move this to top level class.,1,1,1,1,-1,-1,-1,-1
// todo: multiple data path support.,1,1,1,1,-1,-1,-1,-1
"// todo: restore archives bad settings, for now we verify just the data tiers, since we know their dependencies are available",1,1,1,1,-1,-1,-1,-1
"// todo: size > 1 is not supported, requires a refactoring so that `size()` is exposed in the agg builder",1,1,1,1,-1,-1,-1,-1
// todo: we should ideally not have the level of uncertainty we have here.,1,1,1,1,-1,-1,-1,-1
"// try the other suffix...TODO: get rid of this, just support ending in .txt",1,1,1,1,-1,-1,-1,-1
// try to clean up the hack,1,1,1,1,-1,-1,-1,-1
// ugly hack to assert current count = 1,1,1,1,1,-1,-1,-1,-1
"// ugly hack, wait for the second node to actually start and join the cluster, all of our current tooling expects/assumes",1,1,1,1,-1,-1,-1,-1
// we can bypass this by forcing soft deletes to be used. TODO this restriction can be lifted when #55142 is resolved.,1,1,1,1,-1,-1,-1,-1
// we found the horrible method: the hack begins!,1,1,1,1,-1,-1,-1,-1
"/*$*.class"");            test.jvmArgs(""-Xmx"" + System.getProperty(""tests.heap.size"", ""512m""), ""-Xms"" + System.getProperty(""tests.heap.size"", ""512m""), ""-Djava.security.manager=allow"", // TODO: only open these for mockito when it is modularized            ""--add-opens=java.base/java.security.cert=ALL-UNNAMED"", ""--add-opens=java.base/java.nio.channels=ALL-UNNAMED"", ""--add-opens=java.base/java.net=ALL-UNNAMED"", ""--add-opens=java.base/javax.net.ssl=ALL-UNNAMED"", ""--add-opens=java.base/java.nio.file=ALL-UNNAMED"", ""--add-opens=java.base/java.time=ALL-UNNAMED"", ""--add-opens=java.management/java.lang.management=ALL-UNNAMED"", ""-XX:+HeapDumpOnOutOfMemoryError"");            test.getJvmArgumentProviders().add(new SimpleCommandLineArgumentProvider(""-XX:HeapDumpPath="" + heapdumpDir));            String argline = System.getProperty(""tests.jvm.argline"");            if (argline != null) {                test.jvmArgs((Object[]) argline.split("" ""));            }            if (Util.getBooleanProperty(""tests.asserts"", true)) {                test.jvmArgs(""-ea"", ""-esa"");            }            Map<String, String> sysprops = Map.of(""java.awt.headless"", ""true"", ""tests.artifact"", project.getName(), ""tests.security.manager"", ""true"", ""jna.nosys"", ""true"");            test.systemProperties(sysprops);            // ignore changing test seed when build is passed -Dignore.tests.seed for cacheability experimentation            if (System.getProperty(""ignore.tests.seed"") != null) {                nonInputProperties.systemProperty(""tests.seed"", BuildParams.getTestSeed());            } else {                test.systemProperty(""tests.seed"", BuildParams.getTestSeed());            }            // don't track these as inputs since they contain absolute paths and break cache relocatability            File gradleUserHome = project.getGradle().getGradleUserHomeDir();            nonInputProperties.systemProperty(""gradle.user.home"", gradleUserHome);            // we use 'temp' relative to CWD since this is per JVM and tests are forbidden from writing to CWD            nonInputProperties.systemProperty(""java.io.tmpdir"", test.getWorkingDir().toPath().resolve(""temp""));            // TODO: remove setting logging level via system property            test.systemProperty(""tests.logger.level"", ""WARN"");            System.getProperties().entrySet().forEach(entry -> {                if ((entry.getKey().toString().startsWith(""tests."") || entry.getKey().toString().startsWith(""es.""))) {                    test.systemProperty(entry.getKey().toString(), entry.getValue());                }            });            // TODO: remove this once ctx isn't added to update script params in 7.0            test.systemProperty(""es.scripting.update.ctx_in_params"", ""false"");            // TODO: remove this property in 8.0            test.systemProperty(""es.search.rewrite_sort"", ""true"");            // TODO: remove this once cname is prepended to transport.publish_address by default in 8.0            test.systemProperty(""es.transport.cname_in_publish_address"", ""true"");            // Set netty system properties to the properties we configure in jvm.options            test.systemProperty(""io.netty.noUnsafe"", ""true"");            test.systemProperty(""io.netty.noKeySetOptimization"", ""true"");            test.systemProperty(""io.netty.recycler.maxCapacityPerThread"", ""0"");            test.testLogging(logging -> {                logging.setShowExceptions(true);                logging.setShowCauses(true);                logging.setExceptionFormat(""full"");            });            if (OS.current().equals(OS.WINDOWS) && System.getProperty(""tests.timeoutSuite"") == null) {                // override the suite timeout to 30 mins for windows, because it has the most inefficient filesystem known to man                test.systemProperty(""tests.timeoutSuite"", ""2400000!"");            }            /*             *  If this project builds a shadow JAR than any unit tests should test against that artifact instead of             *  compiled class output and dependency jars. This better emulates the runtime environment of consumers.             */",1,1,1,1,-1,-1,-1,-1
"/**         * Move the last cluster to position <code>idx</code>         * This is expensive because a merge map of size <code>numClusters</code> is created, so don't call this method too often         *         * TODO: Make this more efficient         */",1,1,1,1,-1,-1,-1,-1
"/**         * Process the search response of the changes query and remember the changes.         *         * TODO: replace the boolean with a more descriptive enum.         *         * @param searchResponse the response after querying for changes         * @return the position of the change collector, null in case the collector is exhausted         */",1,1,1,1,-1,-1,-1,-1
/**     * @TODO REALM-SETTINGS[TIM] This can be redone a lot now the realm settings are keyed by type     */,1,1,1,1,-1,-1,-1,-1
/**     * Assert that there are no unreferenced indices or unreferenced root-level metadata blobs in any repository.     * TODO: Expand the logic here to also check for unreferenced segment blobs and shard level metadata     * @param repository BlobStoreRepository to check     */,1,1,1,1,-1,-1,-1,-1
"/**     * Calculate the weighted edit distance between two sequences. Each     * element of each sequence has an associated weight, such that some     * elements can be considered more expensive to add/remove/replace than     * others.     *     * Unfortunately, in the case of arbitrary weightings, the     * Berghel-Roach algorithm cannot be applied. Ukkonen gives a     * counter-example on page 114 of Information and Control, Vol 64,     * Nos. 1-3, January/February/March 1985. The problem is that the     * matrix diagonals are not necessarily monotonically increasing.     * See http://www.cs.helsinki.fi/u/ukkonen/InfCont85.PDF.     *     * TODO: It may be possible to apply some of the lesser optimisations     *       from section 2 of Ukkonen's paper to this algorithm.     */",1,1,0,1,-1,-1,-1,-1
"/**     * Calculates the optimal number of buckets for this filter.  The xor used in the bucketing     * algorithm requires this to be a power of two, so the optimal number of buckets will     * be rounded to the next largest power of two where applicable.     *     * TODO: there are schemes to avoid powers of two, might want to investigate those     */",1,1,1,1,-1,-1,-1,-1
"/**     * Checks the ack message going from the  {@code from} license type to {@code to} license type.     * TODO: check the actual messages, not just the number of them! This was copied from previous license tests...     */",1,1,1,1,-1,-1,-1,-1
"/**     * Create a new {@link ShapeBuilder} from {@link XContent}     * @param parser parser to read the GeoShape from     * @param geometryMapper document field mapper reference required for spatial parameters relevant     *                     to the shape construction process (e.g., orientation)     *                     todo: refactor to place build specific parameters in the SpatialContext     * @return {@link ShapeBuilder} read from the parser or null     *          if the parsers current token has been <code>null</code>     * @throws IOException if the input could not be read     */",1,1,1,1,-1,-1,-1,-1
/**     * Dynamic node setting for specifying the wait_for_timeout that the auto follow coordinator should be using.     * TODO: Deprecate and remove this setting     */,1,1,1,1,-1,-1,-1,-1
/**     * Enable blocking a single read of {@link org.elasticsearch.snapshots.SnapshotInfo} in case the repo is already blocked on another     * file. This allows testing very specific timing issues where a read of {@code SnapshotInfo} is much slower than another concurrent     * repository operation. See {@link #blockExecution()} for the exact mechanics of why we need a secondary block defined here.     * TODO: clean this up to not require a second block set     */,1,1,0,1,-1,-1,-1,-1
/**     * Generates a XML response that describe the EC2 instances     * TODO: org.elasticsearch.discovery.ec2.AmazonEC2Fixture uses pretty much the same code. We should dry up that test fixture.     */,1,1,1,1,-1,-1,-1,-1
/**     * Hack to rethrow unknown Exceptions from compile:     */,1,1,1,1,-1,-1,-1,-1
/**     * Hack to rethrow unknown Exceptions from {@link MethodHandle#invokeExact}:     */,1,1,1,1,-1,-1,-1,-1
"/**     * Hack to set the initial ""depth"" for the {@link DefBootstrap.PIC} and {@link DefBootstrap.MIC}. Only used for testing: do not     * overwrite.     */",1,1,1,1,-1,-1,-1,-1
"/**     * Legacy index setting, kept for 7.x BWC compatibility. This setting has no effect in 8.x. Do not use.     * TODO: Remove in 9.0     */",1,1,1,1,-1,-1,-1,-1
"/**     * Match a String against the given pattern, supporting the following simple     * pattern styles: ""xxx*"", ""*xxx"", ""*xxx*"" and ""xxx*yyy"" matches (with an     * arbitrary number of pattern parts), as well as direct equality.     *     * @param pattern the pattern to match against     * @param str     the String to match     * @param caseInsensitive  true if ASCII case differences should be ignored     * @return whether the String matches the given pattern     */",0,1,1,1,-1,-1,-1,-1
"/**     * Match a String against the given pattern, supporting the following simple     * pattern styles: ""xxx*"", ""*xxx"", ""*xxx*"" and ""xxx*yyy"" matches (with an     * arbitrary number of pattern parts), as well as direct equality.     *     * @param pattern the pattern to match against     * @param str     the String to match     * @return whether the String matches the given pattern     */",0,1,1,1,-1,-1,-1,-1
"/**     * Match a String against the given pattern, supporting the following simple     * pattern styles: ""xxx*"", ""*xxx"", ""*xxx*"" and ""xxx*yyy"" matches (with an     * arbitrary number of pattern parts), as well as direct equality.     * Matching is case sensitive.     *     * @param pattern the pattern to match against     * @param str     the String to match     * @return whether the String matches the given pattern     */",0,1,1,1,-1,-1,-1,-1
"/**     * Match a String against the given patterns, supporting the following simple     * pattern styles: ""xxx*"", ""*xxx"", ""*xxx*"" and ""xxx*yyy"" matches (with an     * arbitrary number of pattern parts), as well as direct equality.     *     * @param patterns the patterns to match against     * @param str      the String to match     * @return whether the String matches any of the given patterns     */",0,1,1,1,-1,-1,-1,-1
"/**     * Packs a list of terms into ByteRef so we can use BytesKeyedBucketOrds     *     * TODO: this is a temporary solution, we should replace it with a more optimal mechanism instead of relying on BytesKeyedBucketOrds     */",1,1,1,1,-1,-1,-1,-1
"/**     * Parses a header value into it's parts.     * follows https://tools.ietf.org/html/rfc7231#section-3.1.1.1     * but allows only single media type. Media ranges will be ignored (treated as not provided)     * Note: parsing can return null, but it will throw exceptions once https://github.com/elastic/elasticsearch/issues/63080 is done     * TODO Do not rely on nulls     *     * @return a {@link ParsedMediaType} if the header could be parsed.     * @throws IllegalArgumentException if the header is malformed     */",1,1,1,1,-1,-1,-1,-1
"/**     * Prune transactions and items according to the given min count     *     * Prune rewrites the internal data structures by getting rid of items which are     * below the given minSupport.     *     * Performance: In addition it re-arranges transactions in order to execute a     * contains operation as linear scan, see [ITEM-BOW].     *     * Currently this is only used after merging all shard stores.     *     * TODO:     *     *  - explore whether we could prune per shard based on a heuristic     *  - if minimum_set_size is 1, only keep `size` items     *     * @param minSupport the minimum support an item must have to be kept     */",1,1,0,1,-1,-1,-1,-1
"/**     * Removes all the internal entries from the map. The entry is considered internal when the key starts with underscore character ('_').     * The original document is *not* changed. The method returns a new document instead.     *     * TODO: Find out how to properly handle user-provided fields whose names start with underscore character ('_').     * @param document the document to index represented as a {@link Map}     * @param <V> Value type of document map.     * @return A new {@link Map} but with all keys that start with ""_"" removed     */",1,1,1,1,-1,-1,-1,-1
/**     * Returns an ordered collection of group by fields in order to get better performance.     *     * The decision is based on the type and whether the input field is a indexed/runtime/script field     *     * TODO: take index sorting into account     *     * @param groups group by as defined by the user     * @param runtimeFields set of runtime fields     * @return collection in order of priority     */,1,1,1,1,-1,-1,-1,-1
"/**     * Returns the simple name, which identifies this mapper against other mappers at the same level in the mappers hierarchy     * TODO: make this protected once Mapper and FieldMapper are merged together     */",1,1,1,1,-1,-1,-1,-1
/**     * Returns true if the result doesn't contain any useful information.     * It is used by the search action to avoid creating an empty response on     * shard request that rewrites to match_no_docs.     *     * TODO: Currently we need the concrete aggregators to build empty responses. This means that we cannot     *       build an empty response in the coordinating node so we rely on this hack to ensure that at least one shard     *       returns a valid empty response. We should move the ability to create empty responses to aggregation builders     *       in order to allow building empty responses directly from the coordinating node.     */,1,1,1,1,-1,-1,-1,-1
/**     * Serialises new XContentType VND_ values in a bwc manner     * TODO remove in ES v9     * @param out stream output of the destination node     * @param xContentType an instance to serialize     */,1,1,1,1,-1,-1,-1,-1
"/**     * Stores the initial response with the original headers of the authenticated user     * and the expected expiration time.     * Currently for EQL we don't set limit for a stored async response     * TODO: add limit for stored async response in EQL, and instead of this method use createResponse     */",1,1,1,1,-1,-1,-1,-1
"/**     * TODO: Remove this test once classpath plugins are fully moved to MockNode.     * In production, plugin name clashes are checked in a completely different way.     * See {@link PluginsServiceTests#testPluginNameClash()}     */",1,1,1,1,-1,-1,-1,-1
/**     * Test the hijacking a cursor fails. This test is only implemented for     * REST because it is the only API where it is simple to hijack a cursor.     * It should exercise the same code as the other APIs but if we were truly     * paranoid we'd hack together something to test the others as well.     */,1,1,1,1,-1,-1,-1,-1
/**     * Tests that restoring of a corrupted shard fails and we get a partial snapshot.     * TODO once checksum verification on snapshotting is implemented this test needs to be fixed or split into several     * parts... We should also corrupt files on the actual snapshot and check that we don't restore the corrupted shard.     */,1,1,1,1,-1,-1,-1,-1
/**     * The currently applied cluster state.     * TODO: Should be renamed to appliedState / appliedClusterState     */,1,1,1,1,-1,-1,-1,-1
"/**     * This field only exists to be silently ignored when the body of a Mount API request contains a ""ignored_index_settings"" instead of     * ""ignore_index_settings"" (note the missing 'd'). We need to silently ignores this field instead of rejecting the request because the     * High Level REST Client uses the wrong field name. See https://github.com/elastic/elasticsearch/issues/75982.     * TODO: remove in 9.0.     */",1,1,0,1,-1,-1,-1,-1
"/**     * This has been found to be approximately 300MB on linux by manual testing.     * 30MB of this is accounted for via the space set aside to load the code into memory     * that we always add as overhead (see MachineLearning.NATIVE_EXECUTABLE_CODE_OVERHEAD).     * That would result in 270MB here, although the problem with this is that it would     * mean few models would fit on a 2GB ML node in Cloud with logging and metrics enabled.     * Therefore we push the boundary a bit and require a 240MB per-model overhead.     * TODO Check if it is substantially different in other platforms.     */",1,1,0,1,-1,-1,-1,-1
"/**     * This is a ""workaround"" method to log index ""access_granted"" and ""access_denied"" events for actions not tied to a     * {@code TransportMessage}, or when the connection is not 1:1, i.e. several audit events for an action associated with the same     * message. It is currently only used to audit the resolved index (alias) name for each {@code BulkItemRequest} comprised by a     * {@code BulkShardRequest}. We should strive to not use this and TODO refactor it out!     */",1,1,1,1,-1,-1,-1,-1
"/**     * This is a hack for filter scripts, which must return booleans instead of doubles as expression do.     * See https://github.com/elastic/elasticsearch/issues/26429.     */",1,1,1,1,-1,-1,-1,-1
"/**     * This is for lower version requests compatible.     * <p>     * If we do not keep this, it could be expensive when receiving a request from     * lower version.     * We have to read the value list by {@link StreamInput#readGenericValue},     * serialize it into {@link BytesReference}, and then deserialize it again when     * {@link #doToQuery} called}.     * <p>     *     * TODO: remove in 9.0.0     */",1,1,1,1,-1,-1,-1,-1
/**     * Tracks already executing {@link IndexLifecycleClusterStateUpdateTask} tasks in {@link #executingTasks} to prevent queueing up     * duplicate cluster state updates.     * TODO: refactor ILM logic so that this is not required any longer. It is unreasonably expensive to only filter out duplicate tasks at     *       this point given how these tasks are mostly set up on the cluster state applier thread.     *     * @param source source string as used in {@link ClusterService#submitUnbatchedStateUpdateTask}     * @param task   task to submit unless already tracked in {@link #executingTasks}.     */,1,1,1,1,-1,-1,-1,-1
"/**     * Unpacks ByteRef back into a list of terms     *     * TODO: this is a temporary solution, we should replace it with a more optimal mechanism instead of relying on BytesKeyedBucketOrds     */",1,1,1,1,-1,-1,-1,-1
/**     * We can't send parseSearchRequest REST content that it doesn't support     * so we will have to remove the content that is valid in addition to     * what it supports from the content first. This is a temporary hack and     * should get better when SearchRequest has full ObjectParser support     * then we can delegate and stuff.     */,1,1,1,1,-1,-1,-1,-1
"/**     * the list of nodesIds that will be used to resolve this request and {@link #concreteNodes}     * will be populated. Note that if {@link #concreteNodes} is not null, it will be used and nodeIds     * will be ignored.     *     * See {@link DiscoveryNodes#resolveNodes} for a full description of the options.     *     * TODO: we can get rid of this and resolve it to concrete nodes in the rest layer     */",1,1,1,1,-1,-1,-1,-1
// -----------------------------------------------------------------// Test facilities and facades for subclasses.// -----------------------------------------------------------------// TODO: decide on one set of naming for between/scaledBetween and remove others// TODO: replace frequently() with usually(),1,1,1,1,-1,-1,-1,-1
"// ... but tests are messy. like file permissions, just let them live in a fantasy for now.// TODO: cut over all tests to bind to ephemeral ports",1,1,1,1,-1,-1,-1,-1
"// 1st pass: pack term suffix bytes into byte[] blob// TODO: cutover to bulk int codec... simple64?// We optimize the leaf block case (block has only terms), writing a more// compact format in this case:",1,1,1,1,-1,-1,-1,-1
// A bit of a hack to (ab)use shardIndex property here to// hold a bucket ID but avoids allocating extra data structures// and users should have bigger concerns if bucket IDs// exceed int capacity..,1,1,1,1,-1,-1,-1,-1
// A different repository is being used// TODO: allow this behavior instead of throwing an exception,1,1,1,1,-1,-1,-1,-1
"// Assume the following auto-configuration must NOT run if enrollment is disabled when the node starts,// so no credentials or HTTPS CA fingerprint will be displayed in this case (in addition to no enrollment// tokens being generated).// This is not ideal because the {@code ENROLLMENT_ENABLED} setting is now interpreted as// ""did the pre-startup configuration completed"", in order to generate/display information assuming// and relying on that configuration being done.// TODO maybe we can improve the ""did pre-start-up config run"" check",1,1,0,1,-1,-1,-1,-1
// Clear default dependencies added by public PluginBuildPlugin as we add our// own project dependencies for internal builds// TODO remove once we removed default dependencies from PluginBuildPlugin,1,1,1,1,-1,-1,-1,-1
// ClientConfiguration clinit has some classloader problems// TODO: fix that,1,1,1,1,-1,-1,-1,-1
// Creating a in-memory index is not light weight// TODO: is MANAGEMENT TP the right TP? Right now this is an admin api (see action name).,1,1,1,1,-1,-1,-1,-1
// DEK and DEK Ids MUST be generated randomly (with independent random instances)// the rand algo is not pinned so that it goes well with various providers (eg FIPS)// TODO maybe we can make this a setting for rigurous users,1,1,1,1,-1,-1,-1,-1
// Doc value fetching crashes.// https://github.com/elastic/elasticsearch/issues/70269// TODO when we fix doc values fetcher we should add tests for date and ip ranges.,1,1,1,1,-1,-1,-1,-1
"// FIXME: The settings might be changed after this (e.g. from ""additionalSettings"" method in other plugins)// We should only depend on the settings from the Environment object passed to createComponents",1,1,1,1,-1,-1,-1,-1
"// FIXME: the project split causes different behaviour between Gradle vs IDEs// Eclipse considers classes from both projects, Gradle does not// hence why this is disabled for now",1,1,0,1,-1,-1,-1,-1
"// Flag for whether this is updating an existing template or adding a new one// TODO: in 8.0+, only allow updating index templates, not adding new ones",1,1,1,1,-1,-1,-1,-1
// Fork to the management pool to avoid blocking the cluster applier thread unnecessarily for very large index counts// TODO: we should have a more efficient way of getting just the changed indices so that we don't have to fork here,1,1,1,1,-1,-1,-1,-1
"// HACK: windows asynchronously releases file locks after processes exit. Unfortunately there is no clear way to wait on// those locks being released. We might be able to use `openfiles /query`, but that requires modifying global settings// in our windows images with `openfiles /local on` (which requires a restart, thus needs to be baked into the images).// The following sleep allows time for windows to release the data file locks from Elasticsearch which was stopped in the// previous test.",1,1,1,1,-1,-1,-1,-1
"// Hack so that the Unified Highlighter can still extract the original terms from this query// after rewriting, even though it would normally become a MatchNoDocsQuery against an empty// index",1,1,1,1,-1,-1,-1,-1
"// In 7.x, there was an opt-in flag to show ""enterprise"" licenses. In 8.0 the flag is deprecated and can only be true// TODO Remove this from 9.0",1,1,1,1,-1,-1,-1,-1
// In earlier versions it was possible to create a Phase with a negative `min_age` which would then cause errors// when the phase is read from the cluster state during startup (even before negative timevalues were strictly// disallowed) so this is a hack to treat negative `min_age`s as 0 to prevent those errors.// They will be saved as `0` so this hack can be removed once we no longer have to read cluster states from 7.x.,1,1,1,1,-1,-1,-1,-1
"// Just ignore on OSX for now, there is no reliably way of determining if the socket is still in a state that// accepts the setting because it could have already been reset from the other end which quietly does nothing on// Linux but throws OSX.// TODO: handle this cleaner?",1,1,1,1,-1,-1,-1,-1
// Make a new bucket since the document is distant from all existing buckets// TODO: (maybe) Create a new bucket for <b>all</b> distant docs and merge down to shardSize buckets at end,1,1,1,1,-1,-1,-1,-1
// Manually add the schema to the endpoint to work around https://github.com/aws/aws-sdk-java/issues/2274// TODO: Remove this once fixed in the AWS SDK,1,1,1,1,-1,-1,-1,-1
"// NB safeCommitInfo.docCount is a very low-level count of the docs in the index, and in particular if this shard contains nested// docs then safeCommitInfo.docCount counts every child doc separately from the parent doc. However every part of a nested document// has the same seqno, so we may be overestimating the cost of a file-based recovery when compared to an ops-based recovery and// therefore preferring ops-based recoveries inappropriately in this case. Correctly accounting for nested docs seems difficult to// do cheaply, and the circumstances in which this matters should be relatively rare, so we use this naive calculation regardless.// TODO improve this measure for when nested docs are in use",1,1,0,1,-1,-1,-1,-1
"// Peer recovery always copies .liv files but we do not permit writing to searchable snapshot directories so this doesn't work, but// we can bypass this by forcing soft deletes to be used. TODO this restriction can be lifted when #55142 is resolved.",1,1,1,1,-1,-1,-1,-1
// Placeholder Script for source-only fields// TODO rework things so that we don't need this,1,1,1,1,-1,-1,-1,-1
// Put the composite keys into a treemap so that the key iteration order is consistent// TODO would be nice to avoid allocating this treemap in the future,1,1,1,1,-1,-1,-1,-1
"// Put the partially constructed binding in the map a little early. This enables us to handle// circular dependencies. Example: FooImpl -> BarImpl -> FooImpl.// Note: We don't need to synchronize on state.lock() during injector creation.// TODO: for the above example, remove the binding for BarImpl if the binding for FooImpl fails",1,1,1,1,-1,-1,-1,-1
"// Reallocate in reaction to either node change events or// changes triggered by the node shutdown API.// When the shutdown API is used the metadata is modified// before the node is removed and then once again after// the node has returned. In this situation the node change// events become a no-op due to the checks against shutting// down nodes and because reassignment has already been// triggered by the node shutdown metadata changes.//// If the shutdown API is not used the node change events// are sufficient to cause a reassignment.//// Shutdowns should be respected so that the service does not// allocate models to a node that is about to leave the cluster//// TODO this has a weird side-effect for allocating to nodes// If the event indicates there were nodes added/removed, this method only looks at the current state and has// no previous knowledge of existing nodes. Consequently, if a model was manually removed (task-kill) from a node// it may get re-allocated to that node when another node is added/removed...",1,1,0,1,-1,-1,-1,-1
// Remove before updating the group since lookup is done via comparators// TODO: optimize this,1,1,1,1,-1,-1,-1,-1
// Run the time tests always in UTC// TODO: https://github.com/elastic/elasticsearch/issues/40779,1,1,1,1,-1,-1,-1,-1
"// See https://bugs.openjdk.java.net/browse/JDK-8267701. In short, when generating PKCS#12 keystores in JDK 12 and later// the MAC algorithm used for integrity protection is incompatible with any previous JDK version. This affects us as we generate// PKCS12 keystores on startup ( with the bundled JDK ) but we also need to run certain tests with a JDK other than the bundled// one, and we still use JDK11 for that.// We're manually setting the HMAC algorithm to something that is compatible with previous versions here. Moving forward, when// min compat JDK is JDK17, we can remove this hack and use the standard security properties file.",1,1,0,1,-1,-1,-1,-1
// Setup the composite agg// TODO swap this over to DateHistoConfig.Builder once DateInterval is in,1,1,1,1,-1,-1,-1,-1
// Shard was already removed by routing nodes iterator// TODO: change caller logic in RoutingNodes so that this check can go away,1,1,1,1,-1,-1,-1,-1
"// System.out.println("" advance len="" + target.length + "" curlen="" + current.length);// TODO: possibly caller could/should provide common// prefix length? ie this work may be redundant if// caller is in fact intersecting against its own// automaton// System.out.println(""FE.seekCeil upto="" + upto);// Save time by starting at the end of the shared prefix// b/w our current term & the target:",1,1,1,1,-1,-1,-1,-1
"// System.out.println("" non-bs cycle"");// TODO: we should fix this code to not have to create// object for the output of every arc we scan... only// for the matching arc, if found",1,1,1,1,-1,-1,-1,-1
"// System.out.println("" now pushFrame"");// TODO this// We are on a sub-block, and caller wants// us to position to the next term after// the target, so we must recurse into the// sub-frame(s):",1,1,1,1,-1,-1,-1,-1
// TODO Change this to run with security enabled// https://github.com/elastic/elasticsearch/issues/75940,1,1,1,1,-1,-1,-1,-1
"// TODO Maybe just clear out non-ongoing snapshot recoveries is the node is master eligible, so that we don't// have to repopulate the data over and over in an unstable master situation?",1,1,1,1,-1,-1,-1,-1
// TODO This could fail with errors. In that case we get stuck with the copied index.// We could delete the index in case of failure or we could try building the factory before reindexing// to catch the error early on.,1,1,1,1,-1,-1,-1,-1
"// TODO add support for other roles? If so, it may have to be an instance method...// NOTE, whatever determines assignment should not be dynamically set on the node// Otherwise assignment logic might fail",1,1,1,1,-1,-1,-1,-1
// TODO allow customizing the time zone - this is what session set/reset/get should be about// method called only from CLI,1,1,1,1,-1,-1,-1,-1
"// TODO allow non-numeric value_counts.// I removed the hard coding of NUMERIC as part of cleaning up targetValueType, but I don't think that resolves// the above to do note -- Tozzi 2019-12-06",1,1,1,1,-1,-1,-1,-1
// TODO also use sizes that aren't a power of two// Try and form an even spread of blob sizes by accounting for as many evenly spreads repeats as possible up-front.,1,1,1,1,-1,-1,-1,-1
"// TODO better way to know if the scripted metric received documents?// Could check for null too, but a script might return null on purpose...",1,1,1,1,-1,-1,-1,-1
// TODO comment from Colin in review:// RAW won't work here long term since if you do a max on e.g. a date field it will// render differently for the rolled up and non-rolled up results. At the moment// the formatter is not exposed on the internal agg objects but I think this is// something we can discuss exposing,1,1,1,1,-1,-1,-1,-1
// TODO consider changing this implementation to emit tokens as-we-go// rather than buffering all. However this array is perhaps not the// bulk of memory usage (in practice the dupSequenceSpotter requires// ~5x the original content size in its internal tree ).,1,1,1,1,-1,-1,-1,-1
"// TODO deprecate and remove in API// This is already broken with normalization, so backwards compat isn't necessary?",1,1,1,1,-1,-1,-1,-1
"// TODO do not allow parsing unrecognized parameter value https://github.com/elastic/elasticsearch/issues/63080// assertThat(XContentType.parseVersion(""application/json;compatible-with=123""),// is(nullValue()));",1,1,1,1,-1,-1,-1,-1
// TODO find a better way to limit concurrent updates (and potential associated reroutes) while allowing tests to ensure that// all ClusterInfo updates are processed and never ignored,1,1,1,1,-1,-1,-1,-1
// TODO how can this not be true// assert olderVersion.onOrBefore(getVersion());,1,1,1,1,-1,-1,-1,-1
// TODO how could we stream in the model definition WHILE parsing it?// This would reduce the overall memory usage as we won't have to load the whole compressed string// XContentParser supports streams.,1,1,1,1,-1,-1,-1,-1
"// TODO ideally we should make defaulting for weekbased year here too,// but this will not work when locale is changed// weekbased rounding relies on DateFormatters#localDateFromWeekBasedDate// Applying month of year or dayOfMonth when weekbased fields are used will result in a conflict",1,1,1,1,-1,-1,-1,-1
"// TODO if we ever support anything other than ""basic"" and platinum, we need to adjust our feature tracking logic// and we need to adjust our license checks to validate more than ""is basic"" or not",1,1,1,1,-1,-1,-1,-1
// TODO in v9:// - throw an IllegalArgumentException here// - record the removal of support for this value as a breaking change.// - mention Version.V_8_0_0 in the code to ensure that we revisit this in v10// TODO in v10:// - remove the IllegalArgumentException here,1,1,1,1,-1,-1,-1,-1
"// TODO is this really a good default number for max_merge_segment, what happens for large indices,// won't they end up with many segments?",1,1,1,1,-1,-1,-1,-1
"// TODO it looks like this passes the ""final"" reduce context more than once.// Once here and once in the for above. That is bound to cause trouble.",1,1,1,1,-1,-1,-1,-1
"// TODO it would be good one day to possibly interpolate between ranges in the histogram fields// If we knew the underlying data structure that created the histogram value, we could provide more accurate// data counts for the ranges",1,1,1,1,-1,-1,-1,-1
"// TODO now that these rollup caps are being used more widely (e.g. search), perhaps we should// store the RollupJob and translate into FieldCaps on demand for json output. Would make working with// it internally a lot easier",1,1,1,1,-1,-1,-1,-1
// TODO once composite is plugged in to the values source registry or at least understands Date values source types use it// here,1,1,1,1,-1,-1,-1,-1
"// TODO phase out geohash (which is currently used in the CompletionSuggester)// we only expose the geohash value and disallow advancing tokens, hence we can reuse the same parser throughout multiple sub-fields",1,1,1,1,-1,-1,-1,-1
"// TODO push some of this writing logic down into the blob container implementation.// E.g. for S3 blob containers we would like to choose somewhat more randomly between single-part and multi-part uploads,// rather than relying on the usual distinction based on the size of the blob.",1,1,1,1,-1,-1,-1,-1
// TODO rewrite this to use a field filter built from field patterns// Using lookups doesn't work for eg dynamic fields,1,1,1,1,-1,-1,-1,-1
"// TODO right now we only trim down to the best N vertices. We might also want to offer// clients the option to limit to the best M connections. One scenario where this is required// is if the ""from"" and ""to"" nodes are a client-supplied set of includes e.g. a list of// music artists then the client may be wanting to draw only the most-interesting connections// between them. See https://github.com/elastic/x-plugins/issues/518#issuecomment-160186424// I guess clients could trim the returned connections (which all have weights) but I wonder if// we can do something server-side here// Helper method - compute the total signal of all scores in the search results",1,1,1,1,-1,-1,-1,-1
"// TODO the logic here needs to be reworked to also include runtime fields. Though matching is against mappers rather// than field types, and runtime fields are mixed with ordinary fields in FieldTypeLookup",1,1,1,1,-1,-1,-1,-1
"// TODO there is an opportunity to optimize the returned caps to find the minimal set of required caps.// For example, one leaf may have equally good jobs [A,B], while another leaf finds only job [B] to be best.// If job A is a subset of job B, we could simply search job B in isolation and get the same results//// We can't do that today, because we don't (yet) have way of determining if one job is a sub/super set of another",1,1,1,1,-1,-1,-1,-1
// TODO this class can be foled into either IndicesService and partially into IndicesClusterStateService// there is no need for a separate public service,1,1,1,1,-1,-1,-1,-1
// TODO this filter agg is now redundant given we filter on job ID// in the query and the translator doesn't add any clauses anymore,1,1,1,1,-1,-1,-1,-1
"// TODO this is a really shitty way to test it, we need to figure out a way to test all the client methods// without specifying each one (reflection doesn't as each action needs its own special settings, without// them, request validation will fail before the test is executed. (one option is to enable disabling the// validation in the settings??? - ugly and conceptually wrong)// choosing arbitrary top level actions to test",1,1,1,1,-1,-1,-1,-1
"// TODO this is probably not ultimately necessary, keeping track of where we are in the stream// and optimizing our replacements (like MappingCharFilter), would be faster and use less memory",1,1,1,1,-1,-1,-1,-1
// TODO this would be better done bottom-up instead of top-down to avoid// calculating the same times over and over...but worth the effort?,1,1,1,1,-1,-1,-1,-1
// TODO we can potentially also consume the actual per shard results from the initial phase here in the aggregateDfs// to free up memory early,1,1,1,1,-1,-1,-1,-1
// TODO we can potentially remove this in 6.x// This code is lifted almost straight from 2.x's TimeValue.java,1,1,1,1,-1,-1,-1,-1
"// TODO we could actually add more fields implemented with different PFs// or, just put this test into the usual rotation?",1,1,1,1,-1,-1,-1,-1
// TODO we might force a flush in the future since we have the write lock already even though recoveries// are running.,1,1,1,1,-1,-1,-1,-1
"// TODO we should refactor to remove this, since buckets should be immutable after they are generated.// This can lead to confusing bugs if the bucket is re-created (via createBucket() or similar) without// the score",1,1,1,1,-1,-1,-1,-1
// TODO what is a right value?// Defaults to a high-ish value so that it likely runs last.,1,1,1,1,-1,-1,-1,-1
// TODO: Add all filters in nested sorting when https://github.com/elastic/elasticsearch/issues/33079 is implemented// Adding multiple filters to sort sections makes sense for nested queries where multiple conditions belong to the same// nested query. The current functionality creates one nested query for each condition involving a nested field.,1,1,1,1,-1,-1,-1,-1
// TODO: Callers should ask for the range that source should be retained. Thus we should always// check for the existence source once we make peer-recovery to send ops after the local checkpoint.,1,1,1,1,-1,-1,-1,-1
"// TODO: Change this to true when we can assume that scripts are pure functions// ie. the return value is always the same given the same conditions and may not// depend on the current timestamp, other documents, etc.",1,1,1,1,-1,-1,-1,-1
"// TODO: Consider restoring this assertion when we are sure all the audit messages are available at this point.// assertThat(""Messages: "" + allAuditMessages, allAuditMessages, hasSize(expectedAuditMessagePrefixes.length));",1,1,1,1,-1,-1,-1,-1
// TODO: Do we want to stop the task? This would cause it to be reloaded by state updates on INITIALIZING// We should stop the local task so that future task actions won't get routed to the older one.,1,1,1,1,-1,-1,-1,-1
"// TODO: Fix T-Digest: this assertion should pass but we currently get ~15// https://github.com/elastic/elasticsearch/issues/14851// assertThat(rank.getPercent(), Matchers.equalTo(0d));",1,1,1,1,-1,-1,-1,-1
"// TODO: Fix T-Digest: this assertion should pass but we currently get ~59// https://github.com/elastic/elasticsearch/issues/14851// assertThat(rank.getPercent(), Matchers.equalTo(100d));",1,1,1,1,-1,-1,-1,-1
// TODO: Hacking around here with TransportTasksAction. Ideally we should have another base class in core that// redirects to a single node only,1,1,1,1,-1,-1,-1,-1
"// TODO: In the rare case we still haven't reached a correct promotion we need// TODO: to calculate the highest upper bound for the two types and return that.// TODO: However, for now we just return objectType that may require an extra cast.",1,1,1,1,-1,-1,-1,-1
// TODO: JDBC escape syntax// https://db.apache.org/derby/docs/10.5/ref/rrefjdbc1020262.html,1,1,1,1,-1,-1,-1,-1
"// TODO: Now that numeric sort uses indexed points to skip over non-competitive documents,// Lucene 9 requires that the same data/type is stored in points and doc values.// We break this assumption in ES by using the wider numeric sort type for every field,// (e.g. shorts use longs and floats use doubles). So for now we forbid the usage of// points in numeric sort on field types that use a different sort type.// We could expose these optimizations for all numeric types but that would require// to rewrite the logic to handle types when merging results coming from different// indices.",1,1,1,1,-1,-1,-1,-1
// TODO: Only visible for testing. Perhaps move StubbableTransport from// org.elasticsearch.test.transport to org.elasticsearch.transport,1,1,1,1,-1,-1,-1,-1
"// TODO: Remove this parameter once the BulkMonitoring endpoint has been removed// for CompatibleApi V7 this means to deprecate on type, for V8+ it means to throw an error",1,1,1,1,-1,-1,-1,-1
// TODO: TextBytesOptimization we can use a buffer here to convert it? maybe add a// request to jackson to support InputStream as well?,1,1,1,1,-1,-1,-1,-1
// TODO: The only implementations of this class use SAME which means the execution will not be// rejected. Future implementations can adjust this functionality as needed.,1,1,1,1,-1,-1,-1,-1
"// TODO: There should be some local timeout. And if the remote cluster returns an unknown session// response, we should be able to retry by creating a new session.",1,1,1,1,-1,-1,-1,-1
"// TODO: This can be moved to IndexNameExpressionResolver too, but this means that we will support wildcards and other expressions// in the index,bulk,update and delete apis.",1,1,1,1,-1,-1,-1,-1
"// TODO: This code retains the existing behaviour which is slightly wrong because// when run-as lookup fails, the effectiveSubject will have a null realm. In this// case, the code returns the authenticatingSubject's realm. This is wrong in theory// because it is not the intention of this method. In practice, it does not matter// because failed lookup will be rejected at authZ time. But fixing it causes test// failures. So leave it for now.",1,1,1,1,-1,-1,-1,-1
"// TODO: This is nonsense. We allow the value to be null (via constructor), but don't allow it to be set to null. This means// thing looking to copy settings (like RollupRequestTranslator) need to check if userValueTypeHint is not null, and then// set it if and only if it is non-null.",1,1,1,1,-1,-1,-1,-1
// TODO: This request and its associated transport action can be folded into UpdateRequest which is its only concrete production code// implementation,1,1,1,1,-1,-1,-1,-1
// TODO: This way to discover cells inside of a bounding box seems not to work as expected. I can// see that eventually we will be visiting twice the same cell which should not happen.,1,1,1,1,-1,-1,-1,-1
// TODO: Use snapshot multi-delete instead of this loop if all nodes in the cluster support it// i.e are newer or equal to SnapshotsService#MULTI_DELETE_VERSION,1,1,1,1,-1,-1,-1,-1
"// TODO: We should move these datastructures to IndexNameExpressionResolver, this will give the following benefits:// 1) The datastructures will be rebuilt only when needed. Now during serializing we rebuild these datastructures// while these datastructures aren't even used.// 2) The aliasAndIndexLookup can be updated instead of rebuilding it all the time.",1,1,1,1,-1,-1,-1,-1
"// TODO: allow publishing multiple addresses// for now... the hack begins// 1. single wildcard address, probably set by network.host: expand to all interface addresses.",1,1,1,1,-1,-1,-1,-1
"// TODO: assertEquals(indexMetaGenerationsExpected, indexMetaGenerationsFound); requires cleanup functionality for// index meta generations blobs",1,1,1,1,-1,-1,-1,-1
"// TODO: based on index.max_terms_count, however this is per index, which we don't have access to here,// because the page size is limit to 64k anyhow, return 64k",1,1,1,1,-1,-1,-1,-1
// TODO: be and g and both based on the bose-einstein model.// Is there a better replacement for d and p which use the binomial model?,1,1,1,1,-1,-1,-1,-1
"// TODO: binary search when all terms have the same length, which is common for ID fields,// which are also the most sensitive to lookup performance?// Loop over each entry (term or sub-block) in this block:",1,1,1,1,-1,-1,-1,-1
"// TODO: break this into WritableFST and ReadOnlyFST.. then// we can have subclasses of ReadOnlyFST to handle the// different byte[] level encodings (packed or// not)... and things like nodeCount, arcCount are read only// TODO: if FST is pure prefix trie we can do a more compact// job, ie, once we are at a 'suffix only', just store the// completion labels as a string not as a series of arcs.// NOTE: while the FST is able to represent a non-final// dead-end state (NON_FINAL_END_NODE=0), the layers above// (FSTEnum, Util) have problems with this!!",1,1,1,1,-1,-1,-1,-1
// TODO: can we share more code with the non-test side here// without making things complex???,1,1,1,1,-1,-1,-1,-1
// TODO: can we use just ByteArrayDataInput...?  need to// add a .skipBytes to DataInput.. hmm and .setPosition,1,1,1,1,-1,-1,-1,-1
"// TODO: can't assert this because we call from readFirstArc// assert !flag(arc.flags, BIT_LAST_ARC);",1,1,1,1,-1,-1,-1,-1
"// TODO: change this to minimumCompatibilityVersion(), but first need to remove released/unreleased// versions so getPreviousVerison returns the *actual* previous version. Otherwise eg 8.0.0 returns say 7.0.2 for previous,// but 7.2.0 for minimum compat",1,1,1,1,-1,-1,-1,-1
// TODO: consider adding debugging information (a message about why not?)// TODO: consider adding more fine-grained status rather than true/false,1,1,1,1,-1,-1,-1,-1
// TODO: consider moving this to the ClusterModule// this lives here instead of the more aptly named ClusterModule because it used to be used by the Transport client,1,1,1,1,-1,-1,-1,-1
// TODO: could we somehow [partially] tableize arc lookups// like automaton?,1,1,1,1,-1,-1,-1,-1
// TODO: could we somehow stream an FST to disk while we// build it?,1,1,1,1,-1,-1,-1,-1
"// TODO: currently only considering anomaly detection jobs - could extend in the future// Ignore failed jobs - the persistent task still exists to remember the failure (because no// persistent task means closed), but these don't need to be relocated to another node.",1,1,1,1,-1,-1,-1,-1
// TODO: deprecate and remove this field in favor of initialConnectionTimeout field that is of type TimeValue.// When rest api versioning exists then change org.elasticsearch.transport.RemoteConnectionInfo to properly serialize// the initialConnectionTimeout field so that we can properly parse initialConnectionTimeout as TimeValue,1,1,1,1,-1,-1,-1,-1
"// TODO: disable this assertion for now, due to random runs with mock plugins. perhaps run without mock plugins?// assertThat(nodeInfo.getInfo(PluginsAndModules.class).getInfos(), hasSize(2));",1,1,1,1,-1,-1,-1,-1
"// TODO: disable this assertion for now, due to random runs with mock plugins. perhaps run without mock plugins?// assertThat(nodeInfo.getPlugins().getInfos(), hasSize(2));",1,1,1,1,-1,-1,-1,-1
// TODO: do this without copying the bytes from tmp by calling writeBytes and just use the pages in tmp directly through// manipulation of the offsets on the pages after writing to tmp. This will require adjustments to the places in this class// that make assumptions about the page size,1,1,1,1,-1,-1,-1,-1
"// TODO: do we really need to store all this stuff? some if it might not speed up anything.// we keep it around for now, to reduce the amount of e.g. hash lookups by field and stuff",1,1,1,1,-1,-1,-1,-1
"// TODO: document and/or error if params contains _score?// NOTE: by checking for the variable in params first, it allows masking document fields with a global constant,// but if we were to reverse it, we could provide a way to supply dynamic defaults for documents missing the field?",1,1,1,1,-1,-1,-1,-1
"// TODO: does this also happen if the .ml-config index exists but is unavailable?// However, note that we wait for the .ml-config index to be available earlier on in the// job assignment process, so that scenario should be very rare, i.e. somebody has closed// the .ml-config index (which would be unexpected and unsupported for an internal index)// during the memory refresh.",1,1,1,1,-1,-1,-1,-1
"// TODO: fail shard? This will otherwise have the local / global checkpoint info lagging, or possibly have replicas// go out of sync with the primary",1,1,1,1,-1,-1,-1,-1
"// TODO: fix gradle to add all security resources (plugin metadata) to test classpath// of watcher plugin, which depends on it directly. This prevents these plugins// from being initialized correctly by the test framework, and means we have to// have this leniency.",1,1,1,1,-1,-1,-1,-1
"// TODO: fix// assertSearchableSnapshotStats(restoredIndexName, false, nonCachedExtensions);",1,1,1,1,-1,-1,-1,-1
"// TODO: fix// assertSearchableSnapshotStats(restoredIndexName, true, nonCachedExtensions);",1,1,1,1,-1,-1,-1,-1
"// TODO: for better perf (but more RAM used) we// could avoid this except when arc is ""near"" the// last arc:",1,1,1,1,-1,-1,-1,-1
// TODO: for systems like Windows without true p-write/read support we should split this up into multiple channels since positional// operations in #IO are not contention-free there (https://bugs.java.com/bugdatabase/view_bug.do?bug_id=6265734),1,1,1,1,-1,-1,-1,-1
"// TODO: if I create a proxy which implements all the interfaces of// the implementation type, I'll be able to get away with one proxy// instance (as opposed to one per caller).",1,1,1,1,-1,-1,-1,-1
"// TODO: if each arc could somehow read the arc just// before, we can save this re-scan. The ceil case// doesn't need this because it reads the next arc// instead:",1,1,1,1,-1,-1,-1,-1
"// TODO: if pending.size() is already 1 with a non-zero prefix length// we can save writing a ""degenerate"" root block, but we have to// fix all the places that assume the root block's prefix is the empty string:",1,1,1,1,-1,-1,-1,-1
"// TODO: if suffixes were stored in random-access// array structure, then we could do binary search// instead of linear scan to find target term; eg// we could have simple array of offsets",1,1,1,1,-1,-1,-1,-1
"// TODO: if the automaton is ""smallish"" we really// should use the terms index to seek at least to// the initial term and likely to subsequent terms// (or, maybe just fallback to ATE for such cases).// Else the seek cost of loading the frames will be// too costly.",1,1,1,1,-1,-1,-1,-1
"// TODO: if we really need we can break out name (e.g. ""hack"" or ""scriptEngineService"" or whatever).// but let's just keep it simple if we can.",1,1,1,1,-1,-1,-1,-1
"// TODO: in some cases representing missing with minValue-1 wouldn't take up additional space and so on,// but this is very simple, and algorithms only check this for values of 0 anyway (doesnt slow down normal decode)",1,1,1,1,-1,-1,-1,-1
// TODO: in some cases we can filter by length? eg// regexp foo*bar must be at least length 6 bytes,1,1,1,1,-1,-1,-1,-1
"// TODO: in theory we could avoid loading frq block// when not needed, ie, use skip data to load how far to// seek the pos pointer ... instead of having to load frq// blocks only to sum up how many positions to skip",1,1,1,1,-1,-1,-1,-1
"// TODO: instead of recording isFinal/output on the// node, maybe we should use -1 arc to mean ""end"" (like// we do when reading the FST). Would simplify much// code here...",1,1,1,1,-1,-1,-1,-1
"// TODO: invoke open point in time api when this api is moved from xpack core to server module.// (so that we have a consistent view of the chunk documents while doing the lookups)// (the chance that the documents change is rare, given the low frequency of the updates for these databases)",1,1,1,1,-1,-1,-1,-1
"// TODO: it would be useful to also have the SYSTEM_JAVA_HOME setup in the root project, so that running from GCP only needs// a java for gradle to run, and the tests are self sufficient and consistent with the java they use",1,1,1,1,-1,-1,-1,-1
"// TODO: it'd be great if these could be constants instead of Strings, needs a core change to make the fields public first// TODO: add zero terms query support, I'm not sure the best way to parse it yet...// appliers.put(""zero_terms_query"", (qb, s) -> qb.zeroTermsQuery(s));",1,1,1,1,-1,-1,-1,-1
// TODO: legacy support can be removed once all X-Pack plugins use only composable// templates in the oldest version we test upgrades from,1,1,1,1,-1,-1,-1,-1
// TODO: make WatcherServiceRequest a real AckedRequest so that we have both a configurable timeout and master node timeout like// we do elsewhere,1,1,1,1,-1,-1,-1,-1
"// TODO: make index_mode, start and end time fields in IndexMetadata class.// (this to avoid the overhead that occurs when reading a setting)",1,1,1,1,-1,-1,-1,-1
"// TODO: make this array'd so we can do bin search?// likely not worth it? need to measure how many// floor blocks we ""typically"" get",1,1,1,1,-1,-1,-1,-1
// TODO: maybe add a flatMap (need to double check the Stream bit)//// Transform methods////// transform the node itself and its children//,1,1,1,1,-1,-1,-1,-1
// TODO: maybe add scanToLabel; should give perf boost// Decodes next entry; returns true if it's a sub-block,1,1,1,1,-1,-1,-1,-1
// TODO: maybe change this API to allow for re-use of the// output instances -- this is an insane amount of garbage// (new object per byte/char/int) if eg used during// analysis,1,1,1,1,-1,-1,-1,-1
// TODO: maybe we could add bulk-add method to// Builder? Takes FST and unions it w/ current// FST.,1,1,1,1,-1,-1,-1,-1
"// TODO: maybe we should do the same linear test// that AutomatonTermsEnum does, so that if we// reach a part of the automaton where .* is// ""temporarily"" accepted, we just blindly .next()// until the limit// See if the term suffix matches the automaton:// We know from above that the first byte in our suffix (label) matches// the current transition, so we step from the 2nd byte// in the suffix:",1,1,1,1,-1,-1,-1,-1
"// TODO: merge with PagedBytes, except PagedBytes doesn't// let you read while writing which FST needs",1,1,1,1,-1,-1,-1,-1
"// TODO: multi fields are really just copy fields, we just need to expose ""sub fields"" or something that can be part// of the mappings",1,1,1,1,-1,-1,-1,-1
"// TODO: need to investigate when this can be not-null// if (innerKey == null) {// throw new SqlIllegalArgumentException(""Invalid innerKey {} specified for aggregation {}"", innerKey, name);// }",1,1,1,1,-1,-1,-1,-1
// TODO: no jars should be an error// TODO: verify the classname exists in one of the jars!,0,1,1,1,-1,-1,-1,-1
// TODO: not consistent that in the// not-exact case we don't next() into the next// frame here,1,1,1,1,-1,-1,-1,-1
"// TODO: now that terms dict ""sees"" these longs,// we can explore better column-stride encodings// to encode all long[0]s for this block at// once, all long[1]s, etc., e.g. using// Simple64. Alternatively, we could interleave// stats + meta ... no reason to have them// separate anymore:// Write term meta data",1,1,1,1,-1,-1,-1,-1
"// TODO: now we have this in Java, perform this operation in Java for anomaly detection categorization instead of in C++.// (It could maybe be incorporated into the categorization analyzer and then shared between aggregation and anomaly detection.)",1,1,1,1,-1,-1,-1,-1
// TODO: once some query syntax has been removed from 8.0 and deprecated in 7.x reinstate this test// to check that particular query syntax causes a deprecation warning,1,1,1,1,-1,-1,-1,-1
"// TODO: optimize for when a shape fits in a single tile an// for when brute-force is expected to be faster than rasterization, which// is when the number of tiles expected is less than the precision",1,1,1,1,-1,-1,-1,-1
// TODO: perform real close of the delegate: LUCENE-4058// dir.close();,1,1,1,1,-1,-1,-1,-1
"// TODO: possibly caller could/should provide common// prefix length? ie this work may be redundant if// caller is in fact intersecting against its own// automaton// System.out.println(""FE: seek exact upto="" + upto);// Save time by starting at the end of the shared prefix// b/w our current term & the target:",1,1,1,1,-1,-1,-1,-1
"// TODO: possibly caller could/should provide common// prefix length? ie this work may be redundant if// caller is in fact intersecting against its own// automaton// System.out.println(""FE: seek floor upto="" + upto);// Save CPU by starting at the end of the shared prefix// b/w our current term & the target:",1,1,1,1,-1,-1,-1,-1
// TODO: provide engineConfig.getLeafSorter() when opening a DirectoryReader from a commit// should be available from Lucene v 8.10,1,1,1,1,-1,-1,-1,-1
// TODO: randomize the wait for active shards value on index creation and ensure the appropriate// number of data nodes are started for the randomized active shard count value,1,1,1,1,-1,-1,-1,-1
"// TODO: really we should encode this as an arc, arriving// to the root node, instead of special casing here:",1,1,1,1,-1,-1,-1,-1
"// TODO: remove once refresh doesn't fail immediately if there a master block:// https://github.com/elastic/elasticsearch/issues/9997// client().admin().cluster().prepareHealth(""test"").setWaitForYellowStatus().get();",1,1,1,1,-1,-1,-1,-1
// TODO: remove the threadpool wrapping when the .add call is non-blocking// (it can currently execute the bulk request occasionally)// see: https://github.com/elastic/elasticsearch/issues/50440,1,1,1,1,-1,-1,-1,-1
// TODO: remove this hack once we remove the deprecated ability to use repository settings in the cluster state in the S3 snapshot// module,1,1,1,1,-1,-1,-1,-1
// TODO: reverse vLong byte order for better FST// prefix output sharing// First compare up to valid seek frames:,1,1,1,1,-1,-1,-1,-1
// TODO: rework this test to use a dummy Version class so these don't need to change with each release// full range,1,1,1,1,-1,-1,-1,-1
"// TODO: should we add option to mean ""ignore docs that// don't have the group field"" (instead of stuffing them// under null group)?",1,1,1,1,-1,-1,-1,-1
"// TODO: should we apply the same logic here as FieldPermissions#limitFieldPermissions,// i.e. treat limited-by as queries if original queries is null?",1,1,1,1,-1,-1,-1,-1
// TODO: should we return a status here (SEEK_FOUND / SEEK_NOT_FOUND /// SEEK_END)? saves the eq check above?,1,1,1,1,-1,-1,-1,-1
// TODO: should we send offsets/payloads to// .pay...? seems wasteful (have to store extra// vLong for low (< BLOCK_SIZE) DF terms = vast vast// majority)// vInt encode the remaining positions/payloads/offsets:// force first payload length to be written,1,1,1,1,-1,-1,-1,-1
"// TODO: should we support conversion to TIMESTAMP?// The spec says that getLong() should support the following types conversions:// TINYINT, SMALLINT, INTEGER, BIGINT, REAL, FLOAT, DOUBLE, DECIMAL, NUMERIC, BIT, BOOLEAN, CHAR, VARCHAR, LONGVARCHAR// case TIMESTAMP:// return ((Number) val).longValue();",1,1,1,1,-1,-1,-1,-1
"// TODO: shouldn't this be up to the ScoreMode? I.e., we should just invoke ScoreMode.combine, passing 0.0f for the// secondary score?",1,1,1,1,-1,-1,-1,-1
// TODO: sort shouldn't fail when sort field is mapped dynamically// We have to specify mapping explicitly because by the time search is performed dynamic mapping might not// be propagated to all nodes yet and sort operation fail when the sort field is not defined,1,1,1,1,-1,-1,-1,-1
"// TODO: the B6 appendix of the jdbc spec does mention CHAR, VARCHAR, LONGVARCHAR, DATE, TIMESTAMP as supported// jdbc types that should be handled by getDate and getTime methods. From all of those we support VARCHAR and// TIMESTAMP. Should we consider the VARCHAR conversion as a later enhancement?",1,1,1,1,-1,-1,-1,-1
"// TODO: the error message in case the value in the column cannot be converted to a Date refers to a column index// (for example - ""unable to convert column 4 to a long"") and not to the column name, which is a bit confusing.// Should we reconsider this? Maybe by catching the exception here and rethrowing it with the columnLabel instead.",1,1,1,1,-1,-1,-1,-1
// TODO: these charfilters are not yet exposed: useful?// handling of zwnj for persian,1,1,1,1,-1,-1,-1,-1
"// TODO: this catch is bogus, it means the old repo is already closed,// but we have nothing to replace it",1,1,1,1,-1,-1,-1,-1
"// TODO: this is a hack!! We should instead keep track of incoming (relocated) shards since we know// how large they will be once they're done copying, instead of a silly guess for such cases:// Very rough heuristic of how much disk space we expect the shard will use over its lifetime, the max of current average// shard size across the cluster and 5% of the total available free space on this node:",1,1,1,1,-1,-1,-1,-1
"// TODO: this is wrong, i.e. we are comparing apples and oranges at this point. It would be better if we always rescored all// incoming first pass hits, instead of allowing recoring of just the top subset:",1,1,1,1,-1,-1,-1,-1
"// TODO: this method only exists for access to LoggingAuditTrail in a Node for testing.// DO NOT USE IT, IT WILL BE REMOVED IN THE FUTURE",1,1,1,1,-1,-1,-1,-1
"// TODO: this should just be test framework, but some cleanup is needed in places incorrectly specifying java vs yaml// we shield the project dependency to make integration tests easier",1,1,1,1,-1,-1,-1,-1
"// TODO: try writing the leading vLong in MSB order// (opposite of what Lucene does today), for better// outputs sharing in the FST",1,1,1,1,-1,-1,-1,-1
"// TODO: use FieldHighlighter::highlightOffsetsEnums and modify BoundedBreakIteratorScanner to work with it// LUCENE-9093 modified how FieldHighlighter breaks texts into passages,// which doesn't work well with BoundedBreakIteratorScanner// This is the copy of highlightOffsetsEnums before LUCENE-9093.",1,1,1,1,-1,-1,-1,-1
"// TODO: use FieldHighlighter::maybeAddPassage// After removing CustomFieldHighlighter::highlightOffsetsEnums, remove this method as well.",1,1,1,1,-1,-1,-1,-1
// TODO: use another method of testing not being able to read the test file written by the master...// this is super duper hacky,1,1,1,1,-1,-1,-1,-1
// TODO: wasteful we are counting this (counting # docs// for this term) in two places?,1,1,1,1,-1,-1,-1,-1
"// TODO: we could be more efficient for the next()// case by using current arc as starting point,// passed to findTargetArc",1,1,1,1,-1,-1,-1,-1
// TODO: we could enable FST to sorting arcs by weight// as it freezes... can easily do this on first pass// (w/o requiring rewrite)// TODO: maybe we should make an FST.INPUT_TYPE.BYTE0.5!?// (nibbles),1,1,1,1,-1,-1,-1,-1
"// TODO: we could make ""tiers"" of metadata, ie,// decode docFreq/totalTF but don't decode postings// metadata; this way caller could get// docFreq/totalTF w/o paying decode cost for// postings// TODO: if docFreq were bulk decoded we could// just skipN here:",1,1,1,1,-1,-1,-1,-1
"// TODO: we could make ""tiers"" of metadata, ie,// decode docFreq/totalTF but don't decode postings// metadata; this way caller could get// docFreq/totalTF w/o paying decode cost for// postings// TODO: if docFreq were bulk decoded we could// just skipN here:// stats",1,1,1,1,-1,-1,-1,-1
"// TODO: we could maybe defer this somewhat costly operation until one of the APIs that// needs to see the top is invoked (docFreq, postings, etc.)",1,1,1,1,-1,-1,-1,-1
"// TODO: we could save the outputs in local// byte[][] instead of making new objs ever// seek; but, often the FST doesn't have any// shared bytes (but this could change if we// reverse vLong byte order)",1,1,1,1,-1,-1,-1,-1
// TODO: we could skip this if !hasTerms; but// that's rare so won't help much// metadata,1,1,1,1,-1,-1,-1,-1
"// TODO: we should be able to default this to eg compile deps, but we need to move the licenses// check from distribution to core (ie this should only be run on java projects)",1,1,1,1,-1,-1,-1,-1
// TODO: we should write our vLong backwards (MSB// first) to get better sharing from the FST// First compare up to valid seek frames:,1,1,1,1,-1,-1,-1,-1
"// TODO: we should, instead, hold a ""bytes reserved"" of how large we anticipate this shard will be, e.g. for a shard// that's being relocated/replicated we know how large it will become once it's done copying:// Count up how many shards are currently on each data path:",1,1,1,1,-1,-1,-1,-1
// TODO: we shouldn't be leaking empty shard directories when a shard (but not all of the index it belongs to)// becomes unreferenced. We should fix that and remove this conditional once its fixed.,1,1,1,1,-1,-1,-1,-1
"// TODO: why not populate negativeLookupCache here with missing roles?// TODO: replace with a class that better represent the result, e.g. carry info for disabled role",1,1,1,1,-1,-1,-1,-1
"// TODO: with jopt-simple 5.0, we can make these requiredUnless each other// which is effectively ""one must be present""",1,1,1,1,-1,-1,-1,-1
// TODO: would be nice to make this lazy -- maybe// caller doesn't need the target and is scanning arcs...,1,1,1,1,-1,-1,-1,-1
// TODO:// custom SERVICE_USERNAME/SERVICE_PASSWORD// custom SERVICE_LOG_DIR// custom LOG_OPTS (looks like it currently conflicts with setting custom log dir)// install and run java opts Xmx/s (each data size type),1,1,1,1,-1,-1,-1,-1
"// The binary search returned an exact match, but we checked again using compareTo()// and it didn't match after all.// TODO Can this actually happen? Needs a test to exercise it, or else needs to be removed.",1,1,1,1,-1,-1,-1,-1
"// The in-memory size of the model was found to be approximately equal// to the size of the model on disk in experiments for BERT models. However,// this might not always be the case.// TODO Improve heuristic for in-memory model size.",1,1,1,1,-1,-1,-1,-1
// The results are sorted by index first rather than doc_num// TODO is this the behaviour we want?,1,1,1,1,-1,-1,-1,-1
"// The user has not made a shardSize selection. Use default// heuristic to avoid any wrong-ranking caused by distributed// counting// TODO significant text does a 2x here, should we as well?",1,1,1,1,-1,-1,-1,-1
// This is a hack for the fact that the close listener for the// ShardCoreKeyMap will be called before onDocIdSetEviction// See onDocIdSetEviction for more info,1,1,1,1,-1,-1,-1,-1
// This needs to be a MasterNodeReadRequest even though the corresponding transport// action is a HandledTransportAction so that in mixed version clusters it can be// serialized to older nodes where the transport action was a MasterNodeReadAction.// TODO: Make this a simple request in a future version where there is no possibility// of this request being serialized to another node.,1,1,1,1,-1,-1,-1,-1
// Today we block all master failovers to avoid things like TransportMasterNodeAction-led retries which might fail e.g. because// the snapshot already exists).// TODO generalise this so that it succeeds as soon as it's acquired a permit on >1/2 of the master-eligible nodes,1,1,1,1,-1,-1,-1,-1
// Todo: should we return a status here (SEEK_FOUND / SEEK_NOT_FOUND /// SEEK_END)? saves the eq check above?,1,1,1,1,-1,-1,-1,-1
// Use the old map-based filtering mechanism if there are wildcards in the excludes.// TODO: Remove this if block once: https://github.com/elastic/elasticsearch/pull/80160 is merged,1,1,1,1,-1,-1,-1,-1
// We can't inject abstract classes.// TODO: Method interceptors could actually enable us to implement// abstract types. Should we remove this restriction?,1,1,1,1,-1,-1,-1,-1
// We don't want overlapping buckets --> Adjust their bounds// TODO: Think of a fairer way to do this. Should prev.max = cur.min?,1,1,1,1,-1,-1,-1,-1
"// We don't want to rely on the internal OpenSAML refresh timer, but we can't turn it off, so just set it to run once a day.// @TODO : Submit a patch to OpenSAML to optionally disable the timer",1,1,1,1,-1,-1,-1,-1
// We need to make the indexing buffer for this shard at least as large// as the amount of memory that is available for all engines on the// local node so that decisions to flush segments to disk are made by// IndexingMemoryController rather than Lucene.// Add an escape hatch in case this change proves problematic - it used// to be a fixed amound of RAM: 256 MB.// TODO: Remove this escape hatch in 8.x,1,1,0,1,-1,-1,-1,-1
"// We would have liked to find a cached entry but we did not find anything: the cache on the disk will be requested// so we compute the region of the file we would like to have the next time. The region is expressed as a tuple of// {start, end} where positions are relative to the whole file.// We must fill in a cache miss even if CACHE_NOT_READY since the cache index is only created on the first put.// TODO TBD use a different trigger for creating the cache index and avoid a put in the CACHE_NOT_READY case.",1,1,0,1,-1,-1,-1,-1
"// When sync ids were used we could use them to check if two shard copies were equivalent,// if that's the case we can skip sending files from the source shard to the target shard.// If the shard uses the current replication mechanism, we have to compute the recovery plan,// and it is still possible to skip the sending files from the source shard to the target shard// using a different mechanism to determine it.// TODO: is this still relevant today?",1,1,0,1,-1,-1,-1,-1
"// Write the whole state out to be sure it's fresh and using the latest format. Called during initialisation, so that// (1) throwing an IOException is enough to halt the node, and// (2) the index is currently empty since it was opened with IndexWriterConfig.OpenMode.CREATE// In the common case it's actually sufficient to commit() the existing state and not do any indexing. For instance,// this is true if there's only one data path on this master node, and the commit we just loaded was already written out// by this version of Elasticsearch. TODO TBD should we avoid indexing when possible?",1,1,0,1,-1,-1,-1,-1
// _ignored is the only multi-valued meta field// TODO: can we avoid having an exception here?,1,1,1,1,-1,-1,-1,-1
"// a starting node with {@code ENROLLMENT_ENABLED} set to true, and with no .security index,// must be the initial node of a cluster (starting for the first time and forming a cluster by itself)// Not always true, but in the cases where it's not (which involve deleting the .security index which// is now a system index), it's not a catastrophic position to be in either, because it only entails// that new tokens and possibly credentials are generated anew// TODO maybe we can improve the check that this is indeed the initial node// a lot of stuff runs when a node just started, and the autoconfiguration is not time-critical// and nothing else depends on it; be a good sport and wait a couple",1,1,0,1,-1,-1,-1,-1
"// add a valid license again// This is a bit of a hack in tests, as we can't readd a trial license// We force this by clearing the existing basic license first",1,1,1,1,-1,-1,-1,-1
"// also add spi jars// TODO: move this to a shared function, or fix plugin layout to have jar files in lib directory",1,1,1,1,-1,-1,-1,-1
"// and the result is ""text""// now that string has been splitted into text and keyword, we use text for// dynamic mappings. However before it used to be possible to index as a keyword// by setting index=not_analyzed, so for now we will use a keyword field rather// than a text field if index=not_analyzed and the field type was not specified// explicitly// TODO: remove this in 6.0// TODO: how to do it in the future?",1,1,0,1,-1,-1,-1,-1
// arbitrary low number// TODO: performance testing to find the sweet spot,1,1,1,1,-1,-1,-1,-1
"// build all concrete indices arrays:// TODO: I think we can remove these arrays. it isn't worth the effort, for operations on all indices.// When doing an operation across all indices, most of the time is spent on actually going to all shards and// do the required operations, the bottleneck isn't resolving expressions into concrete indices.",1,1,1,1,-1,-1,-1,-1
// check jarhell of all plugins so we know this plugin and anything depending on it are ok together// TODO: optimize to skip any bundles not connected to the candidate plugin?,1,1,1,1,-1,-1,-1,-1
// checkpoint for for time based sync// TODO: consider a lower bound for usecases where you want to transform on a window of a stream,1,1,1,1,-1,-1,-1,-1
// creates the fallback response if the node crashes/restarts in the middle of the request// TODO: store intermediate results ?,1,1,1,1,-1,-1,-1,-1
"// do not rethrow this exception, otherwise the watch history will contain an exception// even though the execution might have been fine// TODO should we really just drop this exception on the floor?",1,1,1,1,-1,-1,-1,-1
"// don't even think about passing args with -J-xxx, oracle will ask you to submit a bug report :)// fail on all javac warnings.// TODO Discuss moving compileOptions.getCompilerArgs() to use provider api with Gradle team.",1,0,1,1,-1,-1,-1,-1
// ensure we don't have duplicate stuff going in here. can catch bugs// (e.g. nodes get assigned wrong offsets by antlr walker)// TODO: introduce a way to ignore internal statements so this assert is not triggered// TODO: https://github.com/elastic/elasticsearch/issues/51836// assert statements.get(offset) == false;,1,1,1,1,-1,-1,-1,-1
// extra files for the plugin to go into the zip// TODO: move all config/bin/_size/etc into packaging,1,1,1,1,-1,-1,-1,-1
// first delete the data streams and then the indices:// (this to avoid data stream validation from failing when deleting an index that is part of a data stream// without updating the data stream)// TODO: change order when delete index api also updates the data stream the index to be removed is member of,1,1,1,1,-1,-1,-1,-1
// for now this is just text input// TODO: add assertions this is only read with readSecret,1,1,1,1,-1,-1,-1,-1
// for parsing purposes only// TODO: move all aggs to the same package so that this stuff could be pkg-private,1,1,1,1,-1,-1,-1,-1
// from 7.0 on we are supporting the latest minor of the previous major... this might fail once we add a new version ie. 5.x is// released since we need to bump the supported minor in Version#minimumCompatibilityVersion()// TODO: remove this once min compat version is a constant instead of method,1,1,1,1,-1,-1,-1,-1
"// guarantee plugin classes are initialized first, in case they have one-time hacks.// this just makes unit testing more realistic",1,1,1,1,-1,-1,-1,-1
// hack around code messiness in GCE code// TODO: get this fixed,1,1,1,1,-1,-1,-1,-1
"// hack: on Windows, Shell's clinit has a similar problem that on unix,// but here we can workaround it for now by setting hadoop home// on unix: we still want to set this to something we control, because// if the user happens to have HADOOP_HOME in their environment -> checkHadoopHome goes boom// TODO: remove THIS when hadoop is fixed",1,1,1,1,-1,-1,-1,-1
// holes[i].coordinate lies exactly on an edge.// TODO Should this be pos instead of 0? This assigns exact matches to the southernmost component.,1,1,1,1,-1,-1,-1,-1
"// if (DEBUG) System.out.println("" FieldReader.intersect startTerm="" +// BlockTreeTermsWriter.brToString(startTerm));// System.out.println(""intersect: "" + compiled.type + "" a="" + compiled.automaton);// TODO: we could push ""it's a range"" or ""it's a prefix"" down into IntersectTermsEnum?// can we optimize knowing that...?",1,1,1,1,-1,-1,-1,-1
"// if its a guice exception, the whole thing really will not be in the log, its megabytes.// refer to the hack in bootstrap, where we don't log it",1,1,1,1,-1,-1,-1,-1
"// if the nodes were all under the low watermark already (but unbalanced) then a change in the disk usage doesn't trigger a reroute// even though it's now possible to achieve better balance, so we have to do an explicit reroute. TODO fix this?",1,1,1,1,-1,-1,-1,-1
"// ignore exceptions here, the snapshot will work out fine in all cases but the API might throw because of the master// fail-over during the snapshot// TODO: remove this leniency once we fix the API to handle master failover cleaner",1,1,1,1,-1,-1,-1,-1
// ignore shards response that would make the sort incompatible// (e.g.: mixing keyword/numeric or long/double).// TODO: we should fail the entire request because the topdocs// merge will likely fail later but this is not possible with// the current async logic that only allows shard failures here.,1,1,1,1,-1,-1,-1,-1
// ignore// TODO: we should not ignore the exception and return a prefix query with the original term ?,1,1,1,1,-1,-1,-1,-1
"// ignored as we had a failover in here and will get all kinds of errors as a result, just making sure the future completes in// all cases for now// TODO: remove this leniency once we fix the API to handle master failover cleaner",1,1,1,1,-1,-1,-1,-1
// indices options are not equivalent when sent to an older version and re-read due// to the addition of hidden indices as expand to hidden indices is always true when// read from a prior version// TODO change version on backport,1,1,1,1,-1,-1,-1,-1
// indices options are not equivalent when sent to an older version and re-read due// to the addition of hidden indices as expand to hidden indices is always true when// read from a prior version// TODO update version on backport!,1,1,1,1,-1,-1,-1,-1
// intellij hack: intellij test runner wants setIO and will// screw up all test logging without it!,1,1,1,1,-1,-1,-1,-1
// malformed - extra paren// TODO generate more malformed WKT,1,1,1,1,-1,-1,-1,-1
// mockdirectorywrappers currently set this boolean if checkindex fails// TODO: can we do this cleaner???,1,1,1,1,-1,-1,-1,-1
"// noop: _value is special for aggregations, and is handled in ExpressionScriptBindings// TODO: if some uses it in a scoring expression, they will get a nasty failure when evaluating...need a// way to know this is for aggregations and so _value is ok to have...",1,1,1,1,-1,-1,-1,-1
"// note: percentiles is also a multi value agg, therefore check percentiles first// TODO: can the Percentiles extractor be removed?",1,1,1,1,-1,-1,-1,-1
"// note: range is also a multi bucket agg, therefore check range first// TODO: can the Range extractor be removed?",1,1,1,1,-1,-1,-1,-1
"// note: when security is turned on, the indices are already resolved// TODO: do a quick check and only resolve if necessary??",1,1,1,1,-1,-1,-1,-1
// override the BroadcastResponse behavior that is not compatible with the toXContentChunked implementation// TODO: make this not a ToXContent to make this unnecessary,1,1,1,1,-1,-1,-1,-1
"// pre-check if it can be allocated to any node that currently exists, so we won't list the cache sizes for it for nothing// TODO: in the following logic, we do not account for existing cache size when handling disk space checks, should and can we// reliably do this in a world of concurrent cache evictions or are we ok with the cache size just being a best effort hint// here?",1,1,1,1,-1,-1,-1,-1
// something in our tests wrap the error code to 1 on windows// TODO investigate this and remove this guard,1,1,1,1,-1,-1,-1,-1
// statement can be null so we have to extract the timeZone from the non-nullable cfg// TODO: should we consider the locale as well?,1,1,1,1,-1,-1,-1,-1
"// support caching for common queries, by inspecting the field// TODO: If in the future there is a Query#extractFields() then we can do a better job",1,1,1,1,-1,-1,-1,-1
"// the cursor can return an Integer if the date-since-epoch is small enough, XContentParser (Jackson) will// return the ""smallest"" data type for numbers when parsing// TODO: this should probably be handled server side",1,1,1,1,-1,-1,-1,-1
"// the encryption used in this class was picked when Java 7 was still the min. supported// version. The use of counter mode was chosen to simplify the need to deal with padding// and for its speed. 128 bit key length is chosen due to the JCE policy that ships by// default with the Oracle JDK.// TODO: with better support in Java 8, we should consider moving to use AES GCM as it// also provides authentication of the encrypted data, which is something that we are// missing here.",1,1,0,1,-1,-1,-1,-1
"// the following traits, and especially the run-as one, go with all the internal users// TODO abstract in a base `InternalUser` class",1,1,1,1,-1,-1,-1,-1
"// the inference cache in the native process, but that's completely different, so it doesn't make// sense to reuse the same field here.// TODO: consider adding another field here for inference cache hits, but mindful of the naming collision",1,1,1,1,-1,-1,-1,-1
"// the resolution here is always set to milliseconds, as aggregations use this formatter mainly and those are always in// milliseconds. The only special case here is docvalue fields, which are handled somewhere else// TODO maybe aggs should force millis because lots so of other places want nanos?",1,1,1,1,-1,-1,-1,-1
// the value might contain multiple lines (plan execution for example)// TODO: this needs to be improved to properly scale each row across multiple lines,1,1,1,1,-1,-1,-1,-1
"// this breaks b/c 5.x is still in version list but master doesn't care about it!// assert majorVersions.size() == 2;// TODO: remove oldVersions, we should only ever have 2 majors in Version",1,1,1,1,-1,-1,-1,-1
"// this is a hack to bind the painless script engine in guice (all components are added to guice), so that// the painless context api. this is a temporary measure until transport actions do no require guice",1,1,1,1,-1,-1,-1,-1
"// this is an unexpected error// TODO this means requests may still be routed here, should we not stop deployment?",1,1,1,1,-1,-1,-1,-1
// this is separated out so that the removed description can be read from the stream on construction// TODO: remove this for 8.0,1,1,1,1,-1,-1,-1,-1
"// this property is to support a hack to workaround an issue with Docker containers mounting the cgroups hierarchy inconsistently with// respect to /proc/self/cgroup; for Docker containers this should be set to ""/""",1,1,1,1,-1,-1,-1,-1
// todo add BYTE support// todo add SHORT support,0,1,1,1,-1,-1,-1,-1
"// todo(hendrikm): workaround, see// https://github.com/elastic/machine-learning-cpp/issues/123",1,1,1,1,-1,-1,-1,-1
"// todo: restore archives bad settings, for now we verify just the data tiers, since we know their dependencies are available// in settings",1,1,1,1,-1,-1,-1,-1
"// ugly hack, wait for the second node to actually start and join the cluster, all of our current tooling expects/assumes// a single installation listening on 9200// TODO Make our packaging test methods aware of multiple installations, see https://github.com/elastic/elasticsearch/issues/79688",1,1,1,1,-1,-1,-1,-1
"// wait a bit for the cluster to realize that the shard is not there...// TODO can we get around this? the cluster is RED, so what do we wait for?",1,1,1,1,-1,-1,-1,-1
"// we can't wrap CompletionTerms, as CompletionWeight does an instanceof check.// we also can't create a subclass of CompletionTerms as it is a final class.// TODO: fix in Lucene",1,1,1,1,-1,-1,-1,-1
// we cannot use state.hashCode at the moment because of:// https://github.com/HdrHistogram/HdrHistogram/issues/81// TODO: upgrade the HDRHistogram library,1,1,1,1,-1,-1,-1,-1
"// we found the horrible method: the hack begins!// force the hadoop code to back down, by throwing an exception that it catches.",1,1,1,1,-1,-1,-1,-1
"// we have to do this in two steps as we now do async shard fetching before assigning, so the change to the// allocation filtering may not have immediate effect// TODO: we should add an easier to do this. It's too much of a song and dance..",1,1,1,1,-1,-1,-1,-1
"// we need to clean the shards and indices we have on this node, since we// are going to recover them again once state persistence is disabled (no master / not recovered)// TODO: feels hacky, a block disables state persistence, and then we clean the allocated shards, maybe another flag in blocks?",1,1,1,1,-1,-1,-1,-1
"// we use the max here since it's the only ""true"" estimation we can make here// at least max(df) documents have that term. Sum or Averages don't seem// to have a significant meaning here.// TODO: Maybe it could also make sense to assume independent distributions of documents and eg. have:// df = df1 + df2 - (df1 * df2 / maxDoc)?",1,1,1,1,-1,-1,-1,-1
"// { ""abc.d.ef"", ""flat"", ""abc"": { ""d.ef"": ""mixed"" }// TODO(stu): this should be inaccessible",1,1,1,1,-1,-1,-1,-1
"//todo"", ""// some stuff, toDo"");",1,1,1,1,-1,-1,-1,-1
"/**     * Move the last cluster to position <code>idx</code>     * This is expensive because a merge map of size <code>numClusters</code> is created, so don't call this method too often     *     * TODO: Make this more efficient     */",1,1,1,1,-1,-1,-1,-1
"/**     * Process the search response of the changes query and remember the changes.     *     * TODO: replace the boolean with a more descriptive enum.     *     * @param searchResponse the response after querying for changes     * @return the position of the change collector, null in case the collector is exhausted     */",1,1,1,1,-1,-1,-1,-1
"/*$*.class"");        test.jvmArgs(""-Xmx"" + System.getProperty(""tests.heap.size"", ""512m""), ""-Xms"" + System.getProperty(""tests.heap.size"", ""512m""), ""-Djava.security.manager=allow"", // TODO: only open these for mockito when it is modularized        ""--add-opens=java.base/java.security.cert=ALL-UNNAMED"", ""--add-opens=java.base/java.nio.channels=ALL-UNNAMED"", ""--add-opens=java.base/java.net=ALL-UNNAMED"", ""--add-opens=java.base/javax.net.ssl=ALL-UNNAMED"", ""--add-opens=java.base/java.nio.file=ALL-UNNAMED"", ""--add-opens=java.base/java.time=ALL-UNNAMED"", ""--add-opens=java.management/java.lang.management=ALL-UNNAMED"", ""-XX:+HeapDumpOnOutOfMemoryError"");        test.getJvmArgumentProviders().add(new SimpleCommandLineArgumentProvider(""-XX:HeapDumpPath="" + heapdumpDir));        String argline = System.getProperty(""tests.jvm.argline"");        if (argline != null) {            test.jvmArgs((Object[]) argline.split("" ""));        }        if (Util.getBooleanProperty(""tests.asserts"", true)) {            test.jvmArgs(""-ea"", ""-esa"");        }        Map<String, String> sysprops = Map.of(""java.awt.headless"", ""true"", ""tests.artifact"", project.getName(), ""tests.security.manager"", ""true"", ""jna.nosys"", ""true"");        test.systemProperties(sysprops);        // ignore changing test seed when build is passed -Dignore.tests.seed for cacheability experimentation        if (System.getProperty(""ignore.tests.seed"") != null) {            nonInputProperties.systemProperty(""tests.seed"", BuildParams.getTestSeed());        } else {            test.systemProperty(""tests.seed"", BuildParams.getTestSeed());        }        // don't track these as inputs since they contain absolute paths and break cache relocatability        File gradleUserHome = project.getGradle().getGradleUserHomeDir();        nonInputProperties.systemProperty(""gradle.user.home"", gradleUserHome);        // we use 'temp' relative to CWD since this is per JVM and tests are forbidden from writing to CWD        nonInputProperties.systemProperty(""java.io.tmpdir"", test.getWorkingDir().toPath().resolve(""temp""));        // TODO: remove setting logging level via system property        test.systemProperty(""tests.logger.level"", ""WARN"");        System.getProperties().entrySet().forEach(entry -> {            if ((entry.getKey().toString().startsWith(""tests."") || entry.getKey().toString().startsWith(""es.""))) {                test.systemProperty(entry.getKey().toString(), entry.getValue());            }        });        // TODO: remove this once ctx isn't added to update script params in 7.0        test.systemProperty(""es.scripting.update.ctx_in_params"", ""false"");        // TODO: remove this property in 8.0        test.systemProperty(""es.search.rewrite_sort"", ""true"");        // TODO: remove this once cname is prepended to transport.publish_address by default in 8.0        test.systemProperty(""es.transport.cname_in_publish_address"", ""true"");        // Set netty system properties to the properties we configure in jvm.options        test.systemProperty(""io.netty.noUnsafe"", ""true"");        test.systemProperty(""io.netty.noKeySetOptimization"", ""true"");        test.systemProperty(""io.netty.recycler.maxCapacityPerThread"", ""0"");        test.testLogging(logging -> {            logging.setShowExceptions(true);            logging.setShowCauses(true);            logging.setExceptionFormat(""full"");        });        if (OS.current().equals(OS.WINDOWS) && System.getProperty(""tests.timeoutSuite"") == null) {            // override the suite timeout to 30 mins for windows, because it has the most inefficient filesystem known to man            test.systemProperty(""tests.timeoutSuite"", ""2400000!"");        }        /*             *  If this project builds a shadow JAR than any unit tests should test against that artifact instead of             *  compiled class output and dependency jars. This better emulates the runtime environment of consumers.             */",1,1,1,1,-1,-1,-1,-1
"/*$*.class"");    test.jvmArgs(""-Xmx"" + System.getProperty(""tests.heap.size"", ""512m""), ""-Xms"" + System.getProperty(""tests.heap.size"", ""512m""), ""-Djava.security.manager=allow"", // TODO: only open these for mockito when it is modularized    ""--add-opens=java.base/java.security.cert=ALL-UNNAMED"", ""--add-opens=java.base/java.nio.channels=ALL-UNNAMED"", ""--add-opens=java.base/java.net=ALL-UNNAMED"", ""--add-opens=java.base/javax.net.ssl=ALL-UNNAMED"", ""--add-opens=java.base/java.nio.file=ALL-UNNAMED"", ""--add-opens=java.base/java.time=ALL-UNNAMED"", ""--add-opens=java.management/java.lang.management=ALL-UNNAMED"", ""-XX:+HeapDumpOnOutOfMemoryError"");    test.getJvmArgumentProviders().add(new SimpleCommandLineArgumentProvider(""-XX:HeapDumpPath="" + heapdumpDir));    String argline = System.getProperty(""tests.jvm.argline"");    if (argline != null) {        test.jvmArgs((Object[]) argline.split("" ""));    }    if (Util.getBooleanProperty(""tests.asserts"", true)) {        test.jvmArgs(""-ea"", ""-esa"");    }    Map<String, String> sysprops = Map.of(""java.awt.headless"", ""true"", ""tests.artifact"", project.getName(), ""tests.security.manager"", ""true"", ""jna.nosys"", ""true"");    test.systemProperties(sysprops);    // ignore changing test seed when build is passed -Dignore.tests.seed for cacheability experimentation    if (System.getProperty(""ignore.tests.seed"") != null) {        nonInputProperties.systemProperty(""tests.seed"", BuildParams.getTestSeed());    } else {        test.systemProperty(""tests.seed"", BuildParams.getTestSeed());    }    // don't track these as inputs since they contain absolute paths and break cache relocatability    File gradleUserHome = project.getGradle().getGradleUserHomeDir();    nonInputProperties.systemProperty(""gradle.user.home"", gradleUserHome);    // we use 'temp' relative to CWD since this is per JVM and tests are forbidden from writing to CWD    nonInputProperties.systemProperty(""java.io.tmpdir"", test.getWorkingDir().toPath().resolve(""temp""));    // TODO: remove setting logging level via system property    test.systemProperty(""tests.logger.level"", ""WARN"");    System.getProperties().entrySet().forEach(entry -> {        if ((entry.getKey().toString().startsWith(""tests."") || entry.getKey().toString().startsWith(""es.""))) {            test.systemProperty(entry.getKey().toString(), entry.getValue());        }    });    // TODO: remove this once ctx isn't added to update script params in 7.0    test.systemProperty(""es.scripting.update.ctx_in_params"", ""false"");    // TODO: remove this property in 8.0    test.systemProperty(""es.search.rewrite_sort"", ""true"");    // TODO: remove this once cname is prepended to transport.publish_address by default in 8.0    test.systemProperty(""es.transport.cname_in_publish_address"", ""true"");    // Set netty system properties to the properties we configure in jvm.options    test.systemProperty(""io.netty.noUnsafe"", ""true"");    test.systemProperty(""io.netty.noKeySetOptimization"", ""true"");    test.systemProperty(""io.netty.recycler.maxCapacityPerThread"", ""0"");    test.testLogging(logging -> {        logging.setShowExceptions(true);        logging.setShowCauses(true);        logging.setExceptionFormat(""full"");    });    if (OS.current().equals(OS.WINDOWS) && System.getProperty(""tests.timeoutSuite"") == null) {        // override the suite timeout to 30 mins for windows, because it has the most inefficient filesystem known to man        test.systemProperty(""tests.timeoutSuite"", ""2400000!"");    }    /*             *  If this project builds a shadow JAR than any unit tests should test against that artifact instead of             *  compiled class output and dependency jars. This better emulates the runtime environment of consumers.             */",1,1,1,1,-1,-1,-1,-1
"/*   * TODO:   *   * 1. Validate that Android device certification now ensures correct behavior, and add a   *    corresponding SDK_INT upper bound for applying the workaround (probably SDK_INT < 26).   * 2. Determine a complete list of affected devices.   * 3. Some of the devices in this list only fail to support setOutputSurface when switching from   *    a SurfaceView provided Surface to a Surface of another type (e.g. TextureView/DummySurface),   *    and vice versa. One hypothesis is that setOutputSurface fails when the surfaces have   *    different pixel formats. If we can find a way to query the Surface instances to determine   *    whether this case applies, then we'll be able to provide a more targeted workaround.   */",1,1,1,1,-1,-1,-1,-1
/* TODO */,1,1,0,1,-1,-1,-1,-1
/* TODO: || playbackStateChanged */,1,1,0,1,-1,-1,-1,-1
"/** * A hacky method that always throws {@code t} even if {@code t} is a checked exception, and is * not declared to be thrown. */",1,1,1,1,-1,-1,-1,-1
// AudioTrack errors (5xxx).,0,1,1,1,-1,-1,-1,-1
// Decoding errors (3xxx).,0,1,1,1,-1,-1,-1,-1
// Decoding errors (4xxx).,0,1,1,1,-1,-1,-1,-1
// Encoding errors (4xxx).,0,1,1,1,-1,-1,-1,-1
// Input/Output errors (2xxx).,0,1,1,1,-1,-1,-1,-1
// Miscellaneous errors (1xxx).,0,1,1,1,-1,-1,-1,-1
// Muxing errors (6xxx).,0,1,1,1,-1,-1,-1,-1
// See Hacker's Delight 2-13 (H. Warren Jr).,1,1,0,1,-1,-1,-1,-1
// TODO (Internal b/32267012): Consider using random access indicator.,1,1,1,1,-1,-1,-1,-1
// TODO (Internal: b/179261323): use framework constants for levels 10 to 13.,1,1,1,1,-1,-1,-1,-1
// TODO (internal b/192337376): Change 0 for ERROR_UNKNOWN once available.,1,1,1,1,-1,-1,-1,-1
// TODO (internal ref: b/239701618),1,1,1,1,-1,-1,-1,-1
// TODO Calculate this depending on surface size and field of view.,1,1,1,1,-1,-1,-1,-1
// TODO [Internal: b/113315546]: Slerp between the floor and ceil rotation.,1,1,1,1,-1,-1,-1,-1
// TODO optimization: defragmentation or binary search?,1,1,1,1,-1,-1,-1,-1
// TODO remove @Nullable annotation when the deprecated zero-arg constructor is removed.,1,1,1,1,-1,-1,-1,-1
// TODO(210593256): Test pre 24 once in-app muxing implemented.,1,1,1,1,-1,-1,-1,-1
// TODO(227624622): Implement a pixel test that confirms 16f has less posterization.,1,1,1,1,-1,-1,-1,-1
// TODO(b/142097774): Handle streams where chroma channels are not stored at half width and,1,1,1,1,-1,-1,-1,-1
// TODO(b/151280453): Replace the hidden intent action with an official one.,1,1,1,1,-1,-1,-1,-1
// TODO(b/153317944): Allow users to override these flags.,1,1,1,1,-1,-1,-1,-1
// TODO(b/154746451): Batching provokes frame drops in non offload.,1,1,1,1,-1,-1,-1,-1
// TODO(b/160450903): Verify masking of buffering properties when behaviour in EPII is fully,1,1,1,1,-1,-1,-1,-1
// TODO(b/166765820): See if missing adsId would be okay and add adsId to the Bundle otherwise.,1,1,1,1,-1,-1,-1,-1
// TODO(b/166765820): See if missing fields would be okay and add them to the Bundle otherwise.,1,1,1,1,-1,-1,-1,-1
// TODO(b/172315872) Delete when all clients have been migrated to base class.,1,1,1,1,-1,-1,-1,-1
// TODO(b/172315872) Delete when client have migrated from MediaSource.MediaPeriodId,1,1,1,1,-1,-1,-1,-1
// TODO(b/172315872) Renderer was a link. Link to equivalent concept or remove @code.,1,1,1,1,-1,-1,-1,-1
"// TODO(b/172315872) Should be final, but subclassed in MediaSource for backward-compatibility.",1,1,1,1,-1,-1,-1,-1
// TODO(b/172331505) Add a timeout monitor for pending requests.,1,1,1,1,-1,-1,-1,-1
"// TODO(b/172331505) Add support for other AU-Header fields, like CTS-flag, CTS-delta, etc.",1,1,1,1,-1,-1,-1,-1
"// TODO(b/178685617): Only set the PCM encoding for audio/raw, once we have a way to",1,1,1,1,-1,-1,-1,-1
// TODO(b/181121074): Progressive container mime type is not filled in by MediaSource.,1,1,1,1,-1,-1,-1,-1
// TODO(b/181121847): Detect stream sources mixed and local depending on localBytesRead.,1,1,1,1,-1,-1,-1,-1
// TODO(b/181121847): Report localBytesRead. This requires additional callbacks or plumbing.,1,1,1,1,-1,-1,-1,-1
// TODO(b/181122234): DecoderCounters are not re-reported at period boundaries.,1,1,1,1,-1,-1,-1,-1
// TODO(b/190203080): Use error codes instead of the Exception's cause where possible.,1,1,1,1,-1,-1,-1,-1
// TODO(b/192231683) Reduce additional period duration to 1 when rounding work,1,1,1,1,-1,-1,-1,-1
// TODO(b/192231683) Use getEndTimeMs()/getStartTimeMs() after jar target was removed,1,1,1,1,-1,-1,-1,-1
// TODO(b/197817693): Explicitly indicate whether the receiver should be exported.,1,1,1,1,-1,-1,-1,-1
// TODO(b/198620566) Consider using ParsableBitArray.,1,1,1,1,-1,-1,-1,-1
// TODO(b/198620566) Rename firstReceivedTimestamp to timestampBase for all RtpPayloadReaders.,1,1,1,1,-1,-1,-1,-1
// TODO(b/198772621): Consider making the processor inactive and skipping it in the processor chain,1,1,1,1,-1,-1,-1,-1
// TODO(b/201293185): Consider handling adjustments for sizes > GL_MAX_TEXTURE_SIZE,1,1,1,1,-1,-1,-1,-1
// TODO(b/204892224): Consider subtracting the first sample timestamp from the sample pipeline,1,1,1,1,-1,-1,-1,-1
// TODO(b/205002913): Update to use GlProgram.Uniform.bind().,1,1,1,1,-1,-1,-1,-1
// TODO(b/207848601): switch to using proper tooling for testing against golden data.,1,1,1,1,-1,-1,-1,-1
// TODO(b/209469847): Update the javadoc once the underlying values are fixed.,1,1,1,1,-1,-1,-1,-1
// TODO(b/210591626) Add encoder selection for audio.,1,1,1,1,-1,-1,-1,-1
// TODO(b/210591626): Also update bitrate and other params once encoder configuration and,1,1,1,1,-1,-1,-1,-1
// TODO(b/210591626): Also update bitrate etc. once encoder configuration and fallback are,1,1,1,1,-1,-1,-1,-1
// TODO(b/210591626): Pick fallback MIME type using same strategy as for encoder,1,1,1,1,-1,-1,-1,-1
// TODO(b/210593256): Remove overriding profile/level (before API 29) after switching to in-app,1,1,1,1,-1,-1,-1,-1
// TODO(b/210593256): Remove test skipping after removing the MediaMuxer dependency.,1,1,1,1,-1,-1,-1,-1
// TODO(b/210593256): Set KEY_LATENCY to 2 to enable B-frame production after switching to,1,1,1,1,-1,-1,-1,-1
// TODO(b/211458101): Make non-final once HlsMasterPlaylist is removed.,1,1,1,1,-1,-1,-1,-1
// TODO(b/213341814): Add event flags for Transformer events.,1,1,1,1,-1,-1,-1,-1
// TODO(b/214964116): Merge into MediaCodecUtil.,1,1,1,1,-1,-1,-1,-1
// TODO(b/217187518) Support seeking backwards.,1,1,1,1,-1,-1,-1,-1
// TODO(b/224949986) Split audio and video encoder factory.,1,1,1,1,-1,-1,-1,-1
// TODO(b/226330223): Investigate increasing this limit.,1,1,1,1,-1,-1,-1,-1
"// TODO(b/227624622): Add a test for HDR input after BitmapTestUtil can read HDR bitmaps, using",1,1,1,1,-1,-1,-1,-1
// TODO(b/227624622): Add a test for HDR input after BitmapTestUtil can read HDR bitmaps.,1,1,1,1,-1,-1,-1,-1
// TODO(b/227624622): Add color space information for HDR.,1,1,0,1,-1,-1,-1,-1
// TODO(b/227624622): Add support for reading HDR bitmaps.,1,1,1,1,-1,-1,-1,-1
// TODO(b/227624622): Confirm whether MediaPipeProcessor could support HDR colors.,1,1,1,1,-1,-1,-1,-1
"// TODO(b/227625365): Delete this class and use a texture processor from the Transformer library,",1,1,1,1,-1,-1,-1,-1
// TODO(b/230097284): Add a maximum API check after we know which APIs will never use OMX.,1,1,1,1,-1,-1,-1,-1
// TODO(b/233577470): Call MediaSource.Factory.setDataSourceFactory on each value when it,1,1,1,1,-1,-1,-1,-1
// TODO(b/233986762): Support clipping with SEF flattening.,1,1,1,1,-1,-1,-1,-1
"// TODO(b/237674316): Delay initialization of things requiring the colorInfo, to",1,1,1,1,-1,-1,-1,-1
// TODO(b/237674316): Get the color info from the decoder output media format instead.,1,1,0,1,-1,-1,-1,-1
// TODO(b/237674316): The container ColorInfo's transfer doesn't match the decoder output,0,1,1,1,-1,-1,-1,-1
// TODO(b/238094555) Refactor into a BitrateProvider.,1,1,1,1,-1,-1,-1,-1
// TODO(b/238094555): Check encoder supports bitrate targeted by high quality.,1,1,1,1,-1,-1,-1,-1
// TODO(b/238094555): Force specific encoders to be used.,1,1,1,1,-1,-1,-1,-1
// TODO(b/238302213): Handle timestamps restarting from 0 when applying effects to a playlist.,1,1,1,1,-1,-1,-1,-1
// TODO(b/239174610): Add a way to determine profiles for DV and HDR10+.,1,1,1,1,-1,-1,-1,-1
// TODO(b/241240659): Add HDR tests once infrastructure supports it.,1,1,1,1,-1,-1,-1,-1
// TODO(b/241241680): Check if HDR <-> HSL works the same or not.,1,1,1,1,-1,-1,-1,-1
// TODO(b/241782273): Avoid retrying continuously until the frame is accepted by using a,1,1,1,1,-1,-1,-1,-1
// TODO(b/241902517): Add transfer functions since existing color filters may change the colors.,1,1,1,1,-1,-1,-1,-1
// TODO(b/243036513): Allow effects to be replaced.,1,1,1,1,-1,-1,-1,-1
// TODO(b/246315245): Add HDR support.,1,1,1,1,-1,-1,-1,-1
// TODO(b/254277605): remove lint suppression,1,1,1,1,-1,-1,-1,-1
// TODO(b/69792021): Support or emulate stop without position reset.,1,1,1,1,-1,-1,-1,-1
// TODO(b/77625596): Forward MediaDrm metrics to distinguish between L1 and L3 and to set,1,1,1,1,-1,-1,-1,-1
// TODO(bachinger): Incorrect masking. Skipped played prerolls not taken into account by masking,1,1,1,1,-1,-1,-1,-1
"// TODO(http://b/258246130): Use IntDef to select between tone mapping, HDR editing, and this.",1,1,1,1,-1,-1,-1,-1
// TODO(huangdarwin): Remove this checkNotNull after deprecated {@link #setContext(Context)},1,1,1,1,-1,-1,-1,-1
// TODO(insun) : Make showing bottomBar configurable. (ex. show_bottom_bar attribute).,1,1,1,1,-1,-1,-1,-1
// TODO(insun) : Make the audio item in main settings (settingsAdapater),1,1,1,1,-1,-1,-1,-1
// TODO(insun): Add setTrackNameProvider to use customized track name provider.,1,1,1,1,-1,-1,-1,-1
// TODO(insun): Notify specific uxState. Currently reuses legacy visibility listener for API,1,1,1,1,-1,-1,-1,-1
// TODO(internal b/142848015): Use removeCommand(int) when it's added.,1,1,1,1,-1,-1,-1,-1
// TODO(internal b/147657250): Enforce this limit on all read methods.,1,1,1,1,-1,-1,-1,-1
// TODO(internal b/160846312): Remove this suppress warnings and call onCurrentMediaItemChanged,1,1,1,1,-1,-1,-1,-1
// TODO(internal b/160846312): Remove warning suppression and mark item @Nullable once we depend,1,1,1,1,-1,-1,-1,-1
// TODO(internal b/161127201): discard samples written to the sample queue.,1,1,1,1,-1,-1,-1,-1
// TODO(internal b/161804035): Move to a single file.,1,1,1,1,-1,-1,-1,-1
// TODO(internal b/161804035): Use SpannedSubject when it's available in a dependency we can use,1,1,1,1,-1,-1,-1,-1
// TODO(internal b/161804035): Use TestUtils when it's available in a dependency we can use here.,1,1,1,1,-1,-1,-1,-1
// TODO(internal b/163107948): Support cases where DrmInitData are not in the manifest.,1,1,1,1,-1,-1,-1,-1
// TODO(internal b/171984212): Fix Tx3gDecoder to avoid overlapping spans of the same type.,1,1,1,1,-1,-1,-1,-1
// TODO(internal b/172331505) 30ms is roughly the time for one video frame. It is not rigorously,1,1,1,1,-1,-1,-1,-1
"// TODO(internal b/172331505) Make sure most resources are closed before throwing, and close()",1,1,1,1,-1,-1,-1,-1
// TODO(internal b/172331505): Implement support.,1,1,1,1,-1,-1,-1,-1
// TODO(internal b/174554082): assert sonic is non-null here and in getOutput.,1,1,1,1,-1,-1,-1,-1
// TODO(internal b/174661563): Add support for capturing subtitles on the output of the,1,1,1,1,-1,-1,-1,-1
// TODO(internal b/174661563): Remove the for-loop below to enable the text renderer when,1,1,1,1,-1,-1,-1,-1
// TODO(internal b/174737370): Output audio bytes as well.,1,1,0,1,-1,-1,-1,-1
"// TODO(internal b/175710547): Consider using MediaCodecInfo, but currently Robolectric (v4.5)",1,1,1,1,-1,-1,-1,-1
// TODO(internal b/181312195): Remove this when it's no longer needed once subtitles are decoded,1,1,1,1,-1,-1,-1,-1
// TODO(internal b/182261884): queue `onMediaItemTransition` event when the media item is,1,1,1,1,-1,-1,-1,-1
// TODO(internal b/193503588): Add tests to ensure the correct error codes are assigned under,1,1,1,1,-1,-1,-1,-1
"// TODO(internal b/234351617): Query supported channel masks directly once it's supported,",1,1,1,1,-1,-1,-1,-1
// TODO(internal b/77292509): Flushing occurs to activate a configuration (handled above) but,1,1,1,1,-1,-1,-1,-1
// TODO(internal: b/213153670) Handle dropped seek position.,1,1,1,1,-1,-1,-1,-1
// TODO(internal: b/26110951): Use org.junit.runners.Parameterized (and corresponding methods on,1,1,1,1,-1,-1,-1,-1
// TODO: && state.playbackState == Player.STATE_READY,0,1,1,1,-1,-1,-1,-1
// TODO: Access pattern encryption info directly once the Android SDK makes it visible.,1,1,1,1,-1,-1,-1,-1
// TODO: Actually prepare the extractors during preparation so that we don't need a,1,1,1,1,-1,-1,-1,-1
// TODO: Add API level check once [Internal ref: b/112142048] is fixed.,1,1,1,1,-1,-1,-1,-1
// TODO: Add additional audio MIME types. Also consider evaluating based on Format rather than,1,1,1,1,-1,-1,-1,-1
// TODO: Add an API check once [Internal ref: b/128835874] is fixed.,1,1,1,1,-1,-1,-1,-1
// TODO: Add other border/edge types when utilized.,1,1,1,1,-1,-1,-1,-1
// TODO: Add other fields,1,1,1,1,-1,-1,-1,-1
// TODO: Add other pen font styles when utilized.,1,1,1,1,-1,-1,-1,-1
// TODO: Add other pen offsets when utilized.,1,1,1,1,-1,-1,-1,-1
// TODO: Add other sizes when utilized.,1,1,1,1,-1,-1,-1,-1
"// TODO: Add support for ""Strings in quotes with spaces"".",1,1,1,1,-1,-1,-1,-1
// TODO: Add support for border color and types.,1,1,1,1,-1,-1,-1,-1
// TODO: Add support for column lock and count.,1,1,1,1,-1,-1,-1,-1
// TODO: Add support for delay commands.,1,1,1,1,-1,-1,-1,-1
// TODO: Add support for edge color.,1,1,1,1,-1,-1,-1,-1
// TODO: Add support for edge types.,1,1,1,1,-1,-1,-1,-1
// TODO: Add support for full justification.,1,1,1,1,-1,-1,-1,-1
// TODO: Add support for injecting the desired extractor list.,1,1,1,1,-1,-1,-1,-1
// TODO: Add support for other charsets.,1,1,1,1,-1,-1,-1,-1
// TODO: Add support for other font styles.,1,1,1,1,-1,-1,-1,-1
// TODO: Add support for other offsets.,1,1,1,1,-1,-1,-1,-1
// TODO: Add support for other pen sizes.,1,1,1,1,-1,-1,-1,-1
// TODO: Add support for other print directions.,1,1,1,1,-1,-1,-1,-1
// TODO: Add support for other scroll directions.,1,1,1,1,-1,-1,-1,-1
// TODO: Add support for right-to-left languages (i.e. where right would correspond to normal,1,1,1,1,-1,-1,-1,-1
// TODO: Add support for right-to-left languages (i.e. where start is on the right).,1,1,1,1,-1,-1,-1,-1
// TODO: Add support for text tags.,1,1,1,1,-1,-1,-1,-1
// TODO: Add support for the Alternative Minimum Color List or the full 64 RGB combinations.,1,1,1,1,-1,-1,-1,-1
// TODO: Add support for this command.,1,1,1,1,-1,-1,-1,-1
"// TODO: Add support for this when RubySpan supports parenthetical text. For now, just",1,1,1,1,-1,-1,-1,-1
// TODO: Add support for word wrap.,1,1,1,1,-1,-1,-1,-1
// TODO: Allow custom implementations of CastTimelineTracker.,1,1,1,1,-1,-1,-1,-1
// TODO: Allow customization of playlist resets handling.,1,1,1,1,-1,-1,-1,-1
// TODO: Allow customization of stuck playlists handling.,1,1,1,1,-1,-1,-1,-1
// TODO: Allow stream keys to specify video renditions to be retained.,1,1,1,1,-1,-1,-1,-1
// TODO: Annotate this and serverSideAdsLoaderState below with @OptIn when it can be applied to,1,1,1,1,-1,-1,-1,-1
// TODO: Avoid throwing if the DRM error is not preventing a read operation.,1,1,1,1,-1,-1,-1,-1
// TODO: Build video stream wrappers here.,1,1,1,1,-1,-1,-1,-1
// TODO: Change this to @Nullable DrmConfiguration once all the deprecated individual setters,1,1,1,1,-1,-1,-1,-1
// TODO: Change this to ClippingProperties once all the deprecated individual setters are,1,1,1,1,-1,-1,-1,-1
// TODO: Change this to LiveConfiguration once all the deprecated individual setters,1,1,1,1,-1,-1,-1,-1
// TODO: Clarify the requirements for implementing this interface [Internal ref: b/36250203].,1,1,1,1,-1,-1,-1,-1
// TODO: Consider adding support for parenthetical text to be used when rendering doesn't support,1,1,1,1,-1,-1,-1,-1
// TODO: Consider adding support for the following:,1,1,1,1,-1,-1,-1,-1
// TODO: Consider continuing even if writes to the sink fail.,1,1,1,1,-1,-1,-1,-1
// TODO: Consider exposing this and making parsePsshAtom public.,1,1,1,1,-1,-1,-1,-1
// TODO: Consider moving this into AdPlaybackState.,1,1,1,1,-1,-1,-1,-1
// TODO: Consider passing playback position into MetadataOutput. Calling,1,1,1,1,-1,-1,-1,-1
"// TODO: Consider reading the name elements of the tracks and, if present, incorporating them",1,1,1,1,-1,-1,-1,-1
// TODO: Consider replacing this with a Robolectric ShadowMediaDrm so we can use a real,1,1,1,1,-1,-1,-1,-1
// TODO: Create a Formats util class with common constants like this.,1,1,1,1,-1,-1,-1,-1
"// TODO: Decide what the allowed behavior should be for the next read, and assert it.",1,1,1,1,-1,-1,-1,-1
// TODO: Deduplicate with Mp4Extractor.,1,1,1,1,-1,-1,-1,-1
// TODO: Differentiate TIMELINE_CHANGE_REASON_PLAYLIST_CHANGED and,1,1,1,1,-1,-1,-1,-1
// TODO: Don't deduplicate variants by URL.,1,1,1,1,-1,-1,-1,-1
// TODO: Each renderer should return the maximum delay before which it wishes to be called,1,1,1,1,-1,-1,-1,-1
// TODO: Factor out code for optimizing the sniffing order across both factories.,1,1,1,1,-1,-1,-1,-1
// TODO: Fill remaining supported styles.,1,1,1,1,-1,-1,-1,-1
// TODO: Fill the cast timeline information with ProgressListener's duration updates.,1,1,1,1,-1,-1,-1,-1
// TODO: Find int for CodecProfileLevel.AVCLevel1b.,1,1,1,1,-1,-1,-1,-1
"// TODO: Find out what other errors need to be handled (if any), and whether each one relates to",1,1,1,1,-1,-1,-1,-1
// TODO: Fix rendering of first frame at stream transition.,1,1,1,1,-1,-1,-1,-1
// TODO: Handle encoder delay and padding in 3 bytes offset by xingBase + 213 bytes:,1,1,1,1,-1,-1,-1,-1
// TODO: Handle the skipped event so the ad can be marked as skipped rather than played.,1,1,1,1,-1,-1,-1,-1
// TODO: Ideally we should listen for audio route changes in order to detect when a,1,1,1,1,-1,-1,-1,-1
// TODO: Implement programConfigElement();,1,1,1,1,-1,-1,-1,-1
// TODO: Implement sniff() according to the Extractor interface documentation. For now sniff(),1,1,1,1,-1,-1,-1,-1
// TODO: Implement.,1,1,1,1,-1,-1,-1,-1
// TODO: Improve cross-playlist discontinuity adjustment.,1,1,1,1,-1,-1,-1,-1
// TODO: Investigate adding support for seeking during ads. This is complicated to do in,1,1,1,1,-1,-1,-1,-1
// TODO: Investigate reporting MediaPeriodId in renderer events.,1,1,1,1,-1,-1,-1,-1
// TODO: Keep sample metadata to allow restoring these chunks [internal b/159904763].,1,1,1,1,-1,-1,-1,-1
// TODO: Link to specification if available.,1,1,1,1,-1,-1,-1,-1
"// TODO: Make it possible for reader to consume the dataSource directly, so that it becomes",1,1,1,1,-1,-1,-1,-1
"// TODO: Make it possible for the reader to consume the dataSource directly, so that it becomes",1,1,1,1,-1,-1,-1,-1
// TODO: Make this class final when ExoDatabaseProvider is removed.,1,1,1,1,-1,-1,-1,-1
// TODO: Manifest formats for embedded tracks should also be passed here.,1,1,1,1,-1,-1,-1,-1
// TODO: Mark this final when ClippingProperties is deleted.,1,1,1,1,-1,-1,-1,-1
// TODO: Mark this final when PlaybackProperties is deleted.,1,1,1,1,-1,-1,-1,-1
// TODO: Mark this final when Subtitle is deleted.,1,1,1,1,-1,-1,-1,-1
// TODO: Merge this into setTimeline so that the queue gets updated as soon as the new timeline,1,1,1,1,-1,-1,-1,-1
// TODO: Move this class to `testutils` and add basic tests.,1,1,1,1,-1,-1,-1,-1
// TODO: Only call these methods if the player is in Started or Paused state.,1,1,1,1,-1,-1,-1,-1
// TODO: Parse AC-4 stream channel count.,1,1,1,1,-1,-1,-1,-1
// TODO: Parse and use character_codes.,1,1,1,1,-1,-1,-1,-1
// TODO: Prevent this array from growing indefinitely large by removing adjusters that are no,1,1,1,1,-1,-1,-1,-1
// TODO: Read other channel configuration,1,1,1,1,-1,-1,-1,-1
"// TODO: Read the MarginL, MarginR and MarginV values from the Style & Dialogue lines.",1,1,1,1,-1,-1,-1,-1
// TODO: Remove (and update above comments) once [Internal ref: b/147657250] is fixed.,1,1,1,1,-1,-1,-1,-1
// TODO: Remove @Nullable annotation when CronetEngineWrapper is deleted.,1,1,1,1,-1,-1,-1,-1
// TODO: Remove muxedAudioFormat and add a Rendition with a null uri to audios.,1,1,1,1,-1,-1,-1,-1
// TODO: Remove muxedCaptionFormats and add a Rendition with a null uri to closedCaptions.,1,1,1,1,-1,-1,-1,-1
// TODO: Remove once [Internal ref: b/171657375] is fixed.,1,1,1,1,-1,-1,-1,-1
// TODO: Remove once the SDK becomes stable.,1,1,1,1,-1,-1,-1,-1
// TODO: Remove this case and add a Rendition with a null uri to videos.,1,1,1,1,-1,-1,-1,-1
// TODO: Remove this hack once we have a proper fix for [Internal: b/71876314].,1,1,1,1,-1,-1,-1,-1
// TODO: Remove this temporary signaling once end-of-stream propagation for clips using content,1,1,1,1,-1,-1,-1,-1
// TODO: Remove when CronetEngineWrapper is deleted.,1,1,1,1,-1,-1,-1,-1
// TODO: Replace StringBuffer with StringBuilder once Java 9 is available.,1,1,1,1,-1,-1,-1,-1
"// TODO: Replace this assertion with a stricter one checking ""uriPositionOffset >= 0"", after",1,1,1,1,-1,-1,-1,-1
// TODO: Replace this timestamp with the actual frame release time.,1,1,1,1,-1,-1,-1,-1
// TODO: Replace this with an override of onMediaMetadataChanged.,1,1,1,1,-1,-1,-1,-1
// TODO: Replace window index with uid in reporting to get rid of this inefficient method and,1,1,1,1,-1,-1,-1,-1
// TODO: Replace with ControllerInfo#isTrusted() when it's unhidden [Internal: b/142835448].,1,1,1,1,-1,-1,-1,-1
// TODO: Reset state when the app instance changes [Internal ref: b/129672468].,1,1,1,1,-1,-1,-1,-1
"// TODO: Should be as below, once https://github.com/google/ExoPlayer/issues/2953 is fixed.",1,1,1,1,-1,-1,-1,-1
"// TODO: Should default to extent of parent as below in this case, but need to fix",1,1,1,1,-1,-1,-1,-1
"// TODO: Should default to top left as below in this case, but need to fix",1,1,1,1,-1,-1,-1,-1
// TODO: Solve coloring using the theme's ColorStateList.,1,1,1,1,-1,-1,-1,-1
// TODO: Solving https://github.com/google/ExoPlayer/issues/9672 will allow us to remove this,1,1,1,1,-1,-1,-1,-1
// TODO: Sparse tracks (e.g. ESMG) may prevent discarding in almost all cases because it,1,1,1,1,-1,-1,-1,-1
// TODO: Sparse tracks (e.g. ID3) may prevent discarding in almost all cases because it,1,1,1,1,-1,-1,-1,-1
// TODO: Split into discard (in discardBuffer) and format change (here and in skipData) steps.,1,1,1,1,-1,-1,-1,-1
// TODO: Split this to better describe which parts of the window might change. For example it,1,1,1,1,-1,-1,-1,-1
// TODO: Split up isDynamic into multiple fields to indicate which values may change. Then,1,1,1,1,-1,-1,-1,-1
// TODO: Store closed session IDs too?,0,1,1,1,-1,-1,-1,-1
// TODO: Support AggregationPacket mode.,1,1,1,1,-1,-1,-1,-1
// TODO: Support horizontal RTL modes.,1,1,1,1,-1,-1,-1,-1
// TODO: Support moving the pen location with a window properly.,1,1,1,1,-1,-1,-1,-1
// TODO: Support multiple traf boxes per track in a single moof.,1,1,1,1,-1,-1,-1,-1
// TODO: Support parsing of the key ids for version 1 PSSH atoms.,1,1,1,1,-1,-1,-1,-1
// TODO: Support shuffle mode.,1,1,1,1,-1,-1,-1,-1
// TODO: Support splicing to allow this. See [internal b/161130873].,1,1,1,1,-1,-1,-1,-1
// TODO: Support splicing to keep data from canceled chunk. See [internal b/161130873].,1,1,1,1,-1,-1,-1,-1
// TODO: Test more branches:,1,1,1,1,-1,-1,-1,-1
// TODO: There is a lot of overlap between Cea708Decoder.CueInfoBuilder and,1,1,1,1,-1,-1,-1,-1
// TODO: This can be set to the real mimeType if/when we work out what initializationData,1,1,1,1,-1,-1,-1,-1
// TODO: This is a temporary hack to avoid constantly refreshing the MPD in cases where,1,1,1,1,-1,-1,-1,-1
// TODO: This method is called repeatedly from ExoPlayerImplInternal.maybeUpdateLoadingPeriod,1,1,1,1,-1,-1,-1,-1
// TODO: This only catches errors that are set synchronously in prepareSource. To,1,1,1,1,-1,-1,-1,-1
// TODO: This shouldn't just update the output stream offset as long as there are still buffers,1,1,1,1,-1,-1,-1,-1
// TODO: Treat dropped buffers as skipped while we are joining an ongoing playback.,1,1,1,1,-1,-1,-1,-1
// TODO: Turn this into an assertion.,1,1,1,1,-1,-1,-1,-1
// TODO: Uncomment this to reject samples with unexpected timestamps. See,1,1,1,1,-1,-1,-1,-1
// TODO: Uncomment when [Internal: b/63092960] is fixed.,1,1,1,1,-1,-1,-1,-1
// TODO: Uncomment when https://bugs.chromium.org/p/chromium/issues/detail?id=711810 is fixed,1,1,1,1,-1,-1,-1,-1
// TODO: Update ShadowMediaCodec to consider the MediaFormat.KEY_MAX_INPUT_SIZE value passed,1,1,1,1,-1,-1,-1,-1
// TODO: Update this when capturedInteractions contains more than just input buffers.,1,1,1,1,-1,-1,-1,-1
// TODO: Update to retain all closed captions.,1,1,1,1,-1,-1,-1,-1
// TODO: Use Player.Listener.onEvents to know when a set of simultaneous callbacks finished.,1,1,1,1,-1,-1,-1,-1
// TODO: Use isWideAspectRatio in decoding.,1,1,1,1,-1,-1,-1,-1
// TODO: Use this or remove it.,1,1,1,1,-1,-1,-1,-1
// TODO: We shouldn't force render while we are joining an ongoing playback.,1,1,1,1,-1,-1,-1,-1
"// TODO: We're currently ignoring the top 5 marker bits, which should all be 1s according",1,1,1,1,-1,-1,-1,-1
// TODO: When the multivariant playlist does not de-duplicate variants by URL and allows,1,1,1,1,-1,-1,-1,-1
// TODO: check and fail if more than one content encoding is present.,1,1,0,1,-1,-1,-1,-1
// TODO: implement.,1,1,1,1,-1,-1,-1,-1
// TODO: remove this check once all the deprecated individual DRM setters are removed.,1,1,1,1,-1,-1,-1,-1
// TODO: support the extended address and style,1,1,1,1,-1,-1,-1,-1
// TODO: support the extended styles (i.e. backgrounds and transparencies),1,1,1,1,-1,-1,-1,-1
// Video editing errors (5xxx).,0,1,1,1,-1,-1,-1,-1
// hack of forcing presentationTimeUs to be >= 0.,1,1,1,1,-1,-1,-1,-1
"/**     * A hacky method that always throws {@code t} even if {@code t} is a checked exception, and is     * not declared to be thrown.     */",1,1,1,1,-1,-1,-1,-1
// Allow a maximum of one frame to be pending at a time to prevent frame dropping.// TODO(b/226330223): Investigate increasing this limit.,1,1,1,1,-1,-1,-1,-1
// Discarding not possible because a spliced-in chunk potentially removed sample metadata// from the previous chunks.// TODO: Keep sample metadata to allow restoring these chunks [internal b/159904763].,1,1,1,1,-1,-1,-1,-1
// Discarding not possible because we already read from the chunk.// TODO: Sparse tracks (e.g. ID3) may prevent discarding in almost all cases because it// means that most chunks have been read from already. See [internal b/161126666].,1,1,1,1,-1,-1,-1,-1
// Don't read into chunk that's going to be discarded.// TODO: Support splicing to allow this. See [internal b/161130873].,1,1,1,1,-1,-1,-1,-1
// Don't skip into chunk that's going to be discarded.// TODO: Support splicing to allow this. See [internal b/161130873].,1,1,1,1,-1,-1,-1,-1
// Grayscale transformation using the BT.2020 primary colors from// https://www.itu.int/dms_pubrec/itu-r/rec/bt/R-REC-BT.2020-2-201510-I!!PDF-E.pdf// TODO(b/241240659): Add HDR tests once infrastructure supports it.,1,1,1,1,-1,-1,-1,-1
"// Handles all RTSP seeking cases:// 1. Seek before the first RTP/UDP packet is received. The seek position is cached to be used// after retrying playback with RTP/TCP.// 2a. Normal RTSP seek: if no additional seek is requested after the first seek. Request RTSP// PAUSE and then PLAY at the seek position.// 2b. If additional seek is requested after the first seek, records the new seek position,// 2b.1. If RTSP PLAY (for the first seek) is already sent, the new seek position is used to// initiate another seek upon receiving PLAY response by invoking this method again.// 2b.2. If RTSP PLAY (for the first seek) has not been sent, the new seek position will be// used in the following PLAY request.// TODO(internal: b/213153670) Handle dropped seek position.",1,1,0,1,-1,-1,-1,-1
// In case if we pass max int value.// TODO optimization: defragmentation or binary search?,1,1,1,1,-1,-1,-1,-1
"// NOTE: There's no Android layout support for rubies, so this span currently doesn't extend any// styling superclasses (e.g. MetricAffectingSpan). The only way to render these rubies is to// extract the spans and do the layout manually.// TODO: Consider adding support for parenthetical text to be used when rendering doesn't support// rubies (e.g. HTML <rp> tag).",1,1,1,1,-1,-1,-1,-1
"// No transfer functions needed, because input and output are both optical colors.// TODO(b/241902517): Add transfer functions since existing color filters may change the colors.",1,1,1,1,-1,-1,-1,-1
// Player.Listener implementation.// TODO: Use Player.Listener.onEvents to know when a set of simultaneous callbacks finished.// This helps to assign exactly the same EventTime to all of them instead of having slightly// different real times.,1,1,1,1,-1,-1,-1,-1
// Read Lrs/Rrs pair// TODO: Read other channel configuration,1,1,1,1,-1,-1,-1,-1
"// Some OMX decoders don't correctly track their number of output buffers available, and get// stuck if too many frames are rendered without being processed, so limit the number of// pending frames to avoid getting stuck. This value is experimentally determined. See also// b/213455700, b/230097284, b/229978305, and b/245491744.// TODO(b/230097284): Add a maximum API check after we know which APIs will never use OMX.",1,1,1,1,-1,-1,-1,-1
// TODO(b/142097774): Handle streams where chroma channels are not stored at half width and// height compared to the luma channel. U and V planes are being stored at half width compared// to Y.,1,1,1,1,-1,-1,-1,-1
// TODO(b/151280453): Replace the hidden intent action with an official one.// Copied from AudioManager#VOLUME_CHANGED_ACTION,1,1,1,1,-1,-1,-1,-1
// TODO(b/160450903): Verify masking of buffering properties when behaviour in EPII is fully// covered.// assertThat(bufferedPositions[0]).isEqualTo(1000);// assertThat(totalBufferedDuration[0]).isEqualTo(0);,1,1,1,1,-1,-1,-1,-1
// TODO(b/160450903): Verify masking of buffering properties when behaviour in EPII is fully// covered.// assertThat(bufferedPositions[0]).isEqualTo(10_000);// assertThat(totalBufferedDuration[0]).isEqualTo(10_000 - positionMs[0]);,1,1,1,1,-1,-1,-1,-1
// TODO(b/160450903): Verify masking of buffering properties when behaviour in EPII is fully// covered.// assertThat(bufferedPositions[0]).isEqualTo(4000);// assertThat(totalBufferedDuration[0]).isEqualTo(4000);,1,1,1,1,-1,-1,-1,-1
"// TODO(b/178685617): Only set the PCM encoding for audio/raw, once we have a way to// simulate more realistic codec input/output formats in tests.",1,1,1,1,-1,-1,-1,-1
// TODO(b/198620566) Consider using ParsableBitArray.// For start of VP8 partition S=1 and PID=0 as per RFC7741 Section 4.2.,1,1,1,1,-1,-1,-1,-1
// TODO(b/198772621): Consider making the processor inactive and skipping it in the processor chain// when speed is 1.,1,1,1,1,-1,-1,-1,-1
"// TODO(b/201293185): Consider handling adjustments for sizes > GL_MAX_TEXTURE_SIZE// (ex. downscaling appropriately) in a texture processor instead of asserting incorrect// values.// For valid GL sizes, see:// https://www.khronos.org/registry/OpenGL-Refpages/es2.0/xhtml/glTexImage2D.xml",1,1,1,1,-1,-1,-1,-1
// TODO(b/204892224): Consider subtracting the first sample timestamp from the sample pipeline// buffer from all samples so that they are guaranteed to start from zero in the output file.,1,1,1,1,-1,-1,-1,-1
// TODO(b/210591626): Also update bitrate and other params once encoder configuration and// fallback are implemented.,1,1,1,1,-1,-1,-1,-1
// TODO(b/210591626): Also update bitrate etc. once encoder configuration and fallback are// implemented.,1,1,1,1,-1,-1,-1,-1
// TODO(b/210591626): Pick fallback MIME type using same strategy as for encoder// capabilities limitations.,1,1,1,1,-1,-1,-1,-1
// TODO(b/210593256): Remove overriding profile/level (before API 29) after switching to in-app// muxing.,1,1,1,1,-1,-1,-1,-1
// TODO(b/210593256): Set KEY_LATENCY to 2 to enable B-frame production after switching to// in-app muxing.,1,1,1,1,-1,-1,-1,-1
"// TODO(b/227624622): Add a test for HDR input after BitmapTestUtil can read HDR bitmaps, using// GlEffectWrapper to ensure usage of intermediate textures.",1,1,1,1,-1,-1,-1,-1
"// TODO(b/227625365): Delete this class and use a texture processor from the Transformer library,// once overlaying a bitmap and text is supported in Transformer.",1,1,1,1,-1,-1,-1,-1
// TODO(b/233577470): Call MediaSource.Factory.setDataSourceFactory on each value when it// exists on the interface.,1,1,1,1,-1,-1,-1,-1
"// TODO(b/237674316): Delay initialization of things requiring the colorInfo, to// configure based on the color info from the decoder output media format instead.",1,1,1,1,-1,-1,-1,-1
"// TODO(b/237674316): The container ColorInfo's transfer doesn't match the decoder output// MediaFormat, or we requested tone-mapping but it hasn't been applied. We should// reconfigure downstream components for this case instead.",1,1,1,1,-1,-1,-1,-1
"// TODO(b/238094555) Refactor into a BitrateProvider.// Assume medium motion factor.// 1080p60 -> 16.6Mbps, 720p30 -> 3.7Mbps.",1,1,1,1,-1,-1,-1,-1
// TODO(b/238302213): Handle timestamps restarting from 0 when applying effects to a playlist.// MediaPipe will fail if the timestamps are not monotonically increasing.// Also make sure that a MediaPipe graph producing additional frames only starts producing// frames for the next MediaItem after receiving the first frame of that MediaItem as input// to avoid MediaPipe producing extra frames after the last MediaItem has ended.,1,1,1,1,-1,-1,-1,-1
// TODO(b/241782273): Avoid retrying continuously until the frame is accepted by using a// currently non-existent MediaPipe API to be notified when MediaPipe has capacity to accept a// new frame.,1,1,1,1,-1,-1,-1,-1
// TODO(b/77625596): Forward MediaDrm metrics to distinguish between L1 and L3 and to set// the drm session id.,1,1,1,1,-1,-1,-1,-1
// TODO(huangdarwin): Remove this checkNotNull after deprecated {@link #setContext(Context)}// is removed.,1,1,1,1,-1,-1,-1,-1
// TODO(insun) : Make the audio item in main settings (settingsAdapater)// to be non-clickable.,1,1,1,1,-1,-1,-1,-1
// TODO(insun): Notify specific uxState. Currently reuses legacy visibility listener for API// compatibility.,1,1,1,1,-1,-1,-1,-1
// TODO(internal b/160846312): Remove this suppress warnings and call onCurrentMediaItemChanged// with a null item once we depend on media2 1.2.0.,1,1,1,1,-1,-1,-1,-1
// TODO(internal b/160846312): Remove warning suppression and mark item @Nullable once we depend// on media2 1.2.0.,1,1,1,1,-1,-1,-1,-1
// TODO(internal b/161804035): Use SpannedSubject when it's available in a dependency we can use// from here.,1,1,1,1,-1,-1,-1,-1
// TODO(internal b/172331505) 30ms is roughly the time for one video frame. It is not rigorously// chosen and will need fine tuning in the future.,1,1,1,1,-1,-1,-1,-1
"// TODO(internal b/172331505) Make sure most resources are closed before throwing, and close()// can be called again to close the resources that are still open.",1,1,1,1,-1,-1,-1,-1
// TODO(internal b/174661563): Add support for capturing subtitles on the output of the// SubtitleDecoder. And possibly Metadata too (for consistency).,1,1,1,1,-1,-1,-1,-1
// TODO(internal b/174661563): Remove the for-loop below to enable the text renderer when// subtitle output is not flaky.,1,1,1,1,-1,-1,-1,-1
"// TODO(internal b/175710547): Consider using MediaCodecInfo, but currently Robolectric (v4.5)// doesn't correctly implement MediaCodec#getCodecInfo() (getName() works).",1,1,1,1,-1,-1,-1,-1
// TODO(internal b/181312195): Remove this when it's no longer needed once subtitles are decoded// on the loading side of SampleQueue.,1,1,1,1,-1,-1,-1,-1
// TODO(internal b/182261884): queue `onMediaItemTransition` event when the media item is// repeated.,1,1,1,1,-1,-1,-1,-1
// TODO(internal b/193503588): Add tests to ensure the correct error codes are assigned under// different SDK versions.,1,1,1,1,-1,-1,-1,-1
"// TODO(internal b/234351617): Query supported channel masks directly once it's supported,// see also b/25994457.",0,1,1,1,-1,-1,-1,-1
"// TODO(internal b/77292509): Flushing occurs to activate a configuration (handled above) but// also when seeking within a stream. This implementation currently doesn't handle seek to start// (where we need to trim at the start again), nor seeks to non-zero positions before start// trimming has occurred (where we should set pendingTrimStartBytes to zero). These cases can be// fixed by trimming in queueInput based on timestamp, once that information is available.// Any data in the end buffer should no longer be output if we are playing from a different// position, so discard it and refill the buffer using new input.",1,1,1,1,-1,-1,-1,-1
// TODO(internal: b/26110951): Use org.junit.runners.Parameterized (and corresponding methods on// ExtractorAsserts) when it's supported by our testing infrastructure.,1,1,1,1,-1,-1,-1,-1
// TODO: && state.playbackState == Player.STATE_READY// && state.playbackSuppressionReason == PLAYBACK_SUPPRESSION_REASON_NONE,1,1,1,1,-1,-1,-1,-1
// TODO: Actually prepare the extractors during preparation so that we don't need a// placeholder. See https://github.com/google/ExoPlayer/issues/4727.,1,1,1,1,-1,-1,-1,-1
"// TODO: Add additional audio MIME types. Also consider evaluating based on Format rather than// just MIME type, since in some cases the property is true for a subset of the profiles// belonging to a single MIME type. If we do this, we should move the method to a different// class. See [Internal ref: http://go/exo-audio-format-random-access].",1,1,1,1,-1,-1,-1,-1
// TODO: Add support for border color and types.// TODO: Add support for word wrap.// TODO: Add support for other scroll directions.// TODO: Add support for other print directions.,0,1,1,1,-1,-1,-1,-1
// TODO: Add support for edge types.// TODO: Add support for other font styles.,0,1,1,1,-1,-1,-1,-1
// TODO: Add support for right-to-left languages (i.e. where right would correspond to normal// alignment).,1,1,1,1,-1,-1,-1,-1
// TODO: Add support for text tags.// TODO: Add support for other offsets.// TODO: Add support for other pen sizes.,0,1,1,1,-1,-1,-1,-1
// TODO: Add support for the Alternative Minimum Color List or the full 64 RGB combinations.// Return values based on the Minimum Color List,1,1,1,1,-1,-1,-1,-1
"// TODO: Add support for this when RubySpan supports parenthetical text. For now, just// fall through and delete the text.",1,1,1,1,-1,-1,-1,-1
// TODO: Allow customization of playlist resets handling.// The media sequence jumped backwards. The server has probably reset. We do not try// excluding in this case.,1,1,1,1,-1,-1,-1,-1
// TODO: Annotate this and serverSideAdsLoaderState below with @OptIn when it can be applied to// fields (needs http://r.android.com/2004032 to be released into a version of// androidx.annotation:annotation-experimental).,1,1,1,1,-1,-1,-1,-1
// TODO: Change this to @Nullable DrmConfiguration once all the deprecated individual setters// are removed.,1,1,1,1,-1,-1,-1,-1
// TODO: Change this to ClippingProperties once all the deprecated individual setters are// removed.,1,1,1,1,-1,-1,-1,-1
// TODO: Change this to LiveConfiguration once all the deprecated individual setters// are removed.,1,1,1,1,-1,-1,-1,-1
// TODO: Consider adding support for the following:// format.id// format.stereoMode// format.projectionData,1,1,1,1,-1,-1,-1,-1
// TODO: Consider passing playback position into MetadataOutput. Calling// player.getCurrentPosition() inside onMetadata will likely be non-deterministic// because renderer-thread != playback-thread.,1,1,1,1,-1,-1,-1,-1
"// TODO: Consider reading the name elements of the tracks and, if present, incorporating them// into the trackId passed when creating the formats.",1,1,1,1,-1,-1,-1,-1
// TODO: Consider replacing this with a Robolectric ShadowMediaDrm so we can use a real// FrameworkMediaDrm.,1,1,1,1,-1,-1,-1,-1
"// TODO: Decide what the allowed behavior should be for the next read, and assert it.// The DataSource.open() contract requires the returned length to equal the length in the// DataSpec if set. This is true even though the DataSource implementation may know that// fewer bytes will be read in this case.",1,1,1,1,-1,-1,-1,-1
"// TODO: Deduplicate with Mp4Extractor.// Zero the top three bytes of the array that we'll use to decode nal unit lengths, in case// they're only 1 or 2 bytes long.",1,1,1,1,-1,-1,-1,-1
// TODO: Differentiate TIMELINE_CHANGE_REASON_PLAYLIST_CHANGED and// TIMELINE_CHANGE_REASON_SOURCE_UPDATE [see internal: b/65152553].,0,1,1,1,-1,-1,-1,-1
// TODO: Each renderer should return the maximum delay before which it wishes to be called// again. The minimum of these values should then be used as the delay before the next// invocation of this method.,1,1,1,1,-1,-1,-1,-1
// TODO: Fill the cast timeline information with ProgressListener's duration updates.// See [Internal: b/65152553].,1,1,1,1,-1,-1,-1,-1
"// TODO: Find out what other errors need to be handled (if any), and whether each one relates to// a single ad, ad group or the whole timeline.",1,1,1,1,-1,-1,-1,-1
// TODO: Handle encoder delay and padding in 3 bytes offset by xingBase + 213 bytes:// delay = (frame.readUnsignedByte() << 4) + (frame.readUnsignedByte() >> 4);// padding = ((frame.readUnsignedByte() & 0x0F) << 8) + frame.readUnsignedByte();,1,1,1,1,-1,-1,-1,-1
// TODO: Implement sniff() according to the Extractor interface documentation. For now sniff()// can safely return true because we plan to use this class in an ExtractorFactory that returns// exactly one Extractor implementation.,1,1,1,1,-1,-1,-1,-1
"// TODO: Investigate adding support for seeking during ads. This is complicated to do in// general because the midroll ad preceding the seek destination must be played before the// content position can be played, if a different ad is playing at the moment.",1,1,1,1,-1,-1,-1,-1
"// TODO: Make it possible for reader to consume the dataSource directly, so that it becomes// unnecessary to copy the data through packetBuffer.",1,1,1,1,-1,-1,-1,-1
"// TODO: Make it possible for the reader to consume the dataSource directly, so that it becomes// unnecessary to copy the data through packetBuffer.",1,1,1,1,-1,-1,-1,-1
"// TODO: Merge this into setTimeline so that the queue gets updated as soon as the new timeline// is set, once all cases handled by ExoPlayerImplInternal.handleMediaSourceListInfoRefreshed// can be handled here.",1,1,1,1,-1,-1,-1,-1
// TODO: Parse and use character_codes.// Skip character_codes.,1,1,1,1,-1,-1,-1,-1
// TODO: Prevent this array from growing indefinitely large by removing adjusters that are no// longer required.,1,1,1,1,-1,-1,-1,-1
// TODO: Remove (and update above comments) once [Internal ref: b/147657250] is fixed.// Case 3.2.,1,1,1,1,-1,-1,-1,-1
// TODO: Remove this hack once we have a proper fix for [Internal: b/71876314].// Allow the position to jump if the first presentable input buffer has a timestamp that// differs significantly from what was expected.,1,1,1,1,-1,-1,-1,-1
// TODO: Remove this temporary signaling once end-of-stream propagation for clips using content// protection is fixed. See [Internal: b/153326944] for details.,1,1,1,1,-1,-1,-1,-1
"// TODO: Replace this assertion with a stricter one checking ""uriPositionOffset >= 0"", after// validating there are no violations in ExoPlayer and 1P apps.",1,1,1,1,-1,-1,-1,-1
// TODO: Replace this with an override of onMediaMetadataChanged.// Log metadata for at most one of the selected tracks.,1,1,1,1,-1,-1,-1,-1
// TODO: Replace window index with uid in reporting to get rid of this inefficient method and// the childIndex and firstWindowIndexInChild variables.,1,1,1,1,-1,-1,-1,-1
"// TODO: Should be as below, once https://github.com/google/ExoPlayer/issues/2953 is fixed.// assertEquals(10f / 100f, cue.position);// assertEquals(80f / 100f, cue.line);// assertEquals(1f, cue.size);",1,1,1,1,-1,-1,-1,-1
"// TODO: Should default to extent of parent as below in this case, but need to fix// https://github.com/google/ExoPlayer/issues/2953 first.// Extent is omitted. Default to extent of parent.// width = 1;// height = 1;",1,1,1,1,-1,-1,-1,-1
"// TODO: Should default to top left as below in this case, but need to fix// https://github.com/google/ExoPlayer/issues/2953 first.// Origin is omitted. Default to top left.// position = 0;// line = 0;",1,1,1,1,-1,-1,-1,-1
// TODO: Solving https://github.com/google/ExoPlayer/issues/9672 will allow us to remove this// hack of forcing presentationTimeUs to be >= 0.,1,1,1,1,-1,-1,-1,-1
// TODO: Sparse tracks (e.g. ESMG) may prevent discarding in almost all cases because it// means that most chunks have been read from already. See [internal b/161126666].,1,1,1,1,-1,-1,-1,-1
"// TODO: Split this to better describe which parts of the window might change. For example it// should be possible to individually determine whether the start and end positions of the// window may change relative to the underlying periods. For an example of where it's useful to// know that the end position is fixed whilst the start position may still change, see:// https://github.com/google/ExoPlayer/issues/4780.",1,1,1,1,-1,-1,-1,-1
// TODO: Split up isDynamic into multiple fields to indicate which values may change. Then// indicate that the duration may change until it's known. See [internal: b/69703223].,1,1,1,1,-1,-1,-1,-1
"// TODO: Support moving the pen location with a window properly.// Until we support proper pen locations, if we encounter a row that's different from the// previous one, we should append a new line. Otherwise, we'll see strings that should be// on new lines concatenated with the previous, resulting in 2 words being combined, as// well as potentially drawing beyond the width of the window/screen.",1,1,1,1,-1,-1,-1,-1
// TODO: Test more branches:// - Different sources for licenseServerUrl.// - Multiple acquisitions & releases for same keys -> multiple requests.// - Key denial.,1,1,1,1,-1,-1,-1,-1
// TODO: There is a lot of overlap between Cea708Decoder.CueInfoBuilder and// Cea608Decoder.CueBuilder which could be refactored into a separate class.,1,1,1,1,-1,-1,-1,-1
// TODO: This can be set to the real mimeType if/when we work out what initializationData// should be set to for this case.,1,1,1,1,-1,-1,-1,-1
"// TODO: This is a temporary hack to avoid constantly refreshing the MPD in cases where// minimumUpdatePeriod is set to 0. In such cases we shouldn't refresh unless there is// explicit signaling in the stream, according to:// http://azure.microsoft.com/blog/2014/09/13/dash-live-streaming-with-azure-media-service",1,1,1,1,-1,-1,-1,-1
"// TODO: This method is called repeatedly from ExoPlayerImplInternal.maybeUpdateLoadingPeriod// but if the timeline is not ready to provide the next period it can't return a non-null value// until the timeline is updated. Store whether the next timeline period is ready when the// timeline is updated, to avoid repeatedly checking the same timeline.",1,1,1,1,-1,-1,-1,-1
// TODO: This only catches errors that are set synchronously in prepareSource. To// capture async errors we'll need to poll maybeThrowSourceInfoRefreshError until the// first call to onSourceInfoRefreshed.,1,1,1,1,-1,-1,-1,-1
// TODO: This shouldn't just update the output stream offset as long as there are still buffers// of the previous stream in the decoder. It should also make sure to render the first frame of// the next stream if the playback position reached the new stream.,1,1,1,1,-1,-1,-1,-1
// TODO: Uncomment this to reject samples with unexpected timestamps. See// https://github.com/google/ExoPlayer/issues/7030.// /**// * The fraction of the chunk duration from which timestamps of samples loaded from within a// * chunk are allowed to deviate from the expected range.// */// private static final double MAX_TIMESTAMP_DEVIATION_FRACTION = 0.5;//// /**// * A minimum tolerance for sample timestamps in microseconds. Timestamps of samples loaded// * from within a chunk are always allowed to deviate up to this amount from the expected// * range.// */// private static final long MIN_TIMESTAMP_DEVIATION_TOLERANCE_US = 4_000_000;//// @Nullable private HlsMediaChunk sourceChunk;// private long sourceChunkLastSampleTimeUs;// private long minAllowedSampleTimeUs;// private long maxAllowedSampleTimeUs;,1,1,1,1,-1,-1,-1,-1
"// TODO: Uncomment this to reject samples with unexpected timestamps. See// https://github.com/google/ExoPlayer/issues/7030.// if (timeUs < minAllowedSampleTimeUs || timeUs > maxAllowedSampleTimeUs) {// Util.sneakyThrow(// new UnexpectedSampleTimestampException(// sourceChunk, sourceChunkLastSampleTimeUs, timeUs));// }// sourceChunkLastSampleTimeUs = timeUs;",1,1,1,1,-1,-1,-1,-1
"// TODO: Uncomment this to reject samples with unexpected timestamps. See// https://github.com/google/ExoPlayer/issues/7030.// sourceChunk = chunk;// sourceChunkLastSampleTimeUs = C.TIME_UNSET;// long allowedDeviationUs =// Math.max(// (long) ((chunk.endTimeUs - chunk.startTimeUs) * MAX_TIMESTAMP_DEVIATION_FRACTION),// MIN_TIMESTAMP_DEVIATION_TOLERANCE_US);// minAllowedSampleTimeUs = chunk.startTimeUs - allowedDeviationUs;// maxAllowedSampleTimeUs = chunk.endTimeUs + allowedDeviationUs;",1,1,1,1,-1,-1,-1,-1
// TODO: Uncomment when [Internal: b/63092960] is fixed.// else {// drmInitData = null;// },1,1,1,1,-1,-1,-1,-1
"// TODO: Uncomment when [Internal: b/63092960] is fixed.// else {// drmInitData = null;// }// If the atom type determines a MIME type, set it immediately.",1,1,1,1,-1,-1,-1,-1
"// TODO: Uncomment when https://bugs.chromium.org/p/chromium/issues/detail?id=711810 is fixed// (adjusting the code as necessary).// Force identity encoding unless gzip is allowed.// if (!dataSpec.isFlagSet(DataSpec.FLAG_ALLOW_GZIP)) {// requestBuilder.addHeader(""Accept-Encoding"", ""identity"");// }// Set the method and (if non-empty) the body.",1,1,1,1,-1,-1,-1,-1
// TODO: Update ShadowMediaCodec to consider the MediaFormat.KEY_MAX_INPUT_SIZE value passed// to configure() so we don't have to specify large buffers here.,1,1,1,1,-1,-1,-1,-1
"// TODO: We're currently ignoring the top 5 marker bits, which should all be 1s according// to the CEA-608 specification. We need to determine if the data should be handled// differently when that is not the case.",1,1,1,1,-1,-1,-1,-1
"// TODO: When the multivariant playlist does not de-duplicate variants by URL and allows// Renditions with null URLs, this method must be updated to calculate stream keys that are// compatible with those that may already be persisted for offline.",1,1,1,1,-1,-1,-1,-1
"// TODO: support the extended address and style// cc2 - 0|1|N|ATTRBTE|U// N is the next row down toggle, ATTRBTE is the 4-byte encoded attribute, and U is the// underline toggle.",1,1,1,1,-1,-1,-1,-1
// TODO: support the extended styles (i.e. backgrounds and transparencies)// A midrow control code advances the cursor.,1,1,1,1,-1,-1,-1,-1
"// TODO:// 1. When variants with the same URL are not de-duplicated, duplicates must not increment// trackIndex so as to avoid breaking stream keys that have been persisted for offline. All// duplicates should be copied if the first variant is copied, or discarded otherwise.// 2. When renditions with null URLs are permitted, they must not increment trackIndex so as to// avoid breaking stream keys that have been persisted for offline. All renitions with null// URLs should be copied. They may become unreachable if all variants that reference them are// removed, but this is OK.// 3. Renditions with URLs matching copied variants should always themselves be copied, even if// the corresponding stream key is omitted. Else we're throwing away information for no gain.",1,1,1,1,-1,-1,-1,-1
"// The PlayReady CDM does not support MediaCrypto.setMediaDrmSession, either as the old or new// session.// TODO: Add an API check once [Internal ref: b/128835874] is fixed.",1,1,1,1,-1,-1,-1,-1
"// They don't match, we create a new CryptoData.// TODO: Access pattern encryption info directly once the Android SDK makes it visible.// See [Internal ref: b/154248283].",1,1,1,1,-1,-1,-1,-1
// Unpack the PlaybackException.// TODO(b/190203080): Use error codes instead of the Exception's cause where possible.,1,1,1,1,-1,-1,-1,-1
"// We haven't received a timestamp for a while, so they probably aren't available for the// current audio route. Poll infrequently in case the route changes later.// TODO: Ideally we should listen for audio route changes in order to detect when a// timestamp becomes available again.",1,1,1,1,-1,-1,-1,-1
"// When tone-mapping HDR to SDR is enabled, assume we get BT.709 to avoid having the encoder// populate default color info, which depends on the resolution.// TODO(b/237674316): Get the color info from the decoder output media format instead.",1,1,1,1,-1,-1,-1,-1
/** * TODO Comment of HelloServiceImpl * * @author tony.chenl */,1,1,1,1,-1,-1,-1,-1
/** * TODO Comment of Image * * @author tony.chenl */,1,1,1,1,-1,-1,-1,-1
/** * TODO Comment of LayoutInstance * * @author jiajie.yujj @ 2010-11-29 ����09:53:44 */,1,1,1,1,-1,-1,-1,-1
/** * TODO Comment of PageInstance * * @author jiajie.yujj @ 2010-11-29 ����09:53:49 */,1,1,1,1,-1,-1,-1,-1
/** * TODO Comment of Person * * @author tony.chenl */,1,1,1,1,-1,-1,-1,-1
/** * TODO Comment of PersonInfoModel * * @author tony.chenl */,1,1,1,1,-1,-1,-1,-1
/** * TODO Comment of PersonStatus * * @author tony.chenl */,1,1,1,1,-1,-1,-1,-1
/** * TODO Comment of RegionEnum * * @author jiajie.yujj @ 2010-11-29 ����09:53:53 */,1,1,1,1,-1,-1,-1,-1
/** * TODO Comment of UserComponentParamModel * * @author jiajie.yujj @ 2010-11-29 ����09:54:04 */,1,1,1,1,-1,-1,-1,-1
/** * TODO Comment of WidgetInstance * * @author jiajie.yujj @ 2010-11-29 ����09:54:10 */,1,1,1,1,-1,-1,-1,-1
/** * 类OptionKey.java的实现描述：TODO 类实现描述 * * @author lei.yaol 2011-12-27 下午03:40:45 */,1,1,1,1,-1,-1,-1,-1
/** * 类OptionValue.java的实现描述：TODO 类实现描述 * * @author lei.yaol 2011-12-27 下午03:41:43 */,1,1,1,1,-1,-1,-1,-1
/** * 类RegionInstance.java的实现描述：TODO 类实现描述 * * @author jiajie.yujj 2010-12-25 下午07:24:11 */,1,0,1,1,-1,-1,-1,-1
/** * 类SegmentIntance.java的实现描述：TODO 类实现描述 * * @author jiajie.yujj 2010-12-25 下午07:18:37 */,1,0,1,1,-1,-1,-1,-1
/** * 类SerDeserTest.java的实现描述：TODO 类实现描述 * * @author lei.yaol 2011-12-27 下午03:44:18 */,1,0,1,1,-1,-1,-1,-1
/** * 类TempAttachMetaOption.java的实现描述：TODO 类实现描述 * * @author lei.yaol 2011-12-27 下午03:43:32 */,1,0,1,1,-1,-1,-1,-1
/** * 类Test.java的实现描述：TODO 类实现描述 * @author jieyu.ljy 2016年7月22日 下午12:39:17 */,1,1,1,1,-1,-1,-1,-1
// // TODO: verify,1,1,1,1,-1,-1,-1,-1
"// 4 bytes, 21 bits: 11110xxx 10xxxxxx 10xxxxxx 10xxxxxx",1,1,0,1,-1,-1,-1,-1
// FIXME: 序列化的时候会导致空指针。,1,1,0,1,-1,-1,-1,-1
// Hack:默认构造方法会调用这个方法，重写此方法使用反射还原部分关键属性,1,1,1,1,-1,-1,-1,-1
// TODO paymentType only cash back?,1,1,1,1,-1,-1,-1,-1
// TODO translator,1,1,1,1,-1,-1,-1,-1
// TODO 忽略 1970-01-01 之前的时间处理？,1,1,0,1,-1,-1,-1,-1
// TODO: verify,1,1,1,1,-1,-1,-1,-1
// assertFalse(Hibernate.isInitialized(payments));// TODO: verify,1,1,1,1,-1,-1,-1,-1
// if (lexer.token() != JSONToken.RBRACE)// TODO Auto-generated method stub,1,1,1,1,-1,-1,-1,-1
"// should force loading...// Set<Payment> payments = customer.getPayments();// /*// System.out.println(""--- JSON ---"");// System.out.println(json);// System.out.println(""--- /JSON ---"");// *///// assertTrue(Hibernate.isInitialized(payments));// // TODO: verify// assertNotNull(json);//// Map<?,?> stuff = mapper.readValue(json, Map.class);//// assertTrue(stuff.containsKey(""payments""));// assertTrue(stuff.containsKey(""orders""));// assertNull(stuff.get(""orderes""));",1,1,1,1,-1,-1,-1,-1
"// 超过 −9007199254740992 到 9007199254740992 区间使用字符串，如：""9007199254740993""// FIXME: 序列化的时候会导致空指针。",1,1,0,1,-1,-1,-1,-1
"/*        HTTP/1.1 200 OK        x-amz-id-2: ITnGT1y4RyTmXa3rPi4hklTXouTf0hccUjo0iCPjz6FnfIutBj3M7fPGlWO2SEWp        x-amz-request-id: 51991C342C575321        Date: Wed, 14 May 2014 02:11:22 GMT        Server: AmazonS3        Content-Length: ...       <?xml version=""1.0"" encoding=""UTF-8""?>       <AnalyticsConfiguration xmlns=""http://s3.amazonaws.com/doc/2006-03-01/"">          <Id>XXX</Id>          <Filter>            <And>              <Prefix>documents/</Prefix>              <Tag>                <Key>foo</Key>                <Value>bar</Value>              </Tag>            </And>          </Filter>          <StorageClassAnalysis>            <DataExport>              <OutputSchemaVersion>1</OutputSchemaVersion>              <Destination>                <S3BucketDestination>                  <Format>CSV</Format>                  <BucketAccountId>123456789</BucketAccountId>                  <Bucket>destination-bucket</Bucket>                  <Prefix>destination-prefix</Prefix>                </S3BucketDestination>              </Destination>            </DataExport>          </StorageClassAnalysis>       </AnalyticsConfiguration>    */",1,0,1,1,-1,-1,-1,-1
"/*        HTTP/1.1 200 OK        x-amz-id-2: Uuag1LuByRx9e6j5Onimru9pO4ZVKnJ2Qz7/C1NPcfTWAtRPfTaOFg==        x-amz-request-id: 656c76696e6727732072657175657374        Date: Tue, 20 Sep 2012 20:34:56 GMT        Content-Length: xxx        Connection: keep-alive        Server: AmazonS3       <InventoryConfiguration xmlns=""http://s3.amazonaws.com/doc/2006-03-01/"">          <Destination>             <S3BucketDestination>                <AccountId>A2OCNCIEQW9MSG</AccountId>                <Bucket>s3-object-inventory-list-gamma-us-east-1</Bucket>                <Format>CSV</Format>                <Prefix>string</Prefix>             </S3BucketDestination>          </Destination>          <IsEnabled>true</IsEnabled>          <Filter>             <Prefix>string</Prefix>          </Filter>          <Id>configId</Id>          <IncludedObjectVersions>All</IncludedObjectVersions>          <OptionalFields>             <Field>Size</Field>             <Field>LastModifiedDate</Field>             <Field>StorageClass</Field>             <Field>ETag</Field>             <Field>IsMultipartUploaded</Field>             <Field>ReplicationStatus</Field>          </OptionalFields>          <Schedule>             <Frequency>Daily</Frequency>          </Schedule>       </InventoryConfiguration>    */",0,1,1,1,-1,-1,-1,-1
"/*        TODO: NOTE: This method does a lot of work caching / retrieving states just to update the namespace.        This method should be removed for the sake of namespaces being lazily fetched from the keyed        state backend, or being set on the state directly.        */",1,1,1,1,-1,-1,-1,-1
/** * // todo: javadoc case Base class for {@link JdbcXaSinkFunction} tests. In addition to {@link * JdbcTestBase} init it initializes/closes helpers. */,1,1,1,1,-1,-1,-1,-1
"/** * <b>HACK:</b> Set to 21474835 seconds, Akka's maximum delay (Akka 2.4.20). The value cannot be * higher or an {@link IllegalArgumentException} will be thrown during an RPC. Check the private * method {@code checkMaxDelay()} in {@link akka.actor.LightArrayRevolverScheduler}. */",1,0,1,1,-1,-1,-1,-1
"/** * A service to retrieve transient binary large objects (BLOBs) which are deleted on the {@link * BlobServer} when they are retrieved. * * <p>These may include per-job BLOBs like files in the {@link * org.apache.flink.api.common.cache.DistributedCache}, for example. * * <p>Note: None of these BLOBs is highly available (HA). This case is covered by BLOBs in the * {@link PermanentBlobService}. * * <p>TODO: change API to not rely on local files but return {@link InputStream} objects */",1,1,0,1,-1,-1,-1,-1
/** * A special distribution which indicators the data distribution is the same as its input. ' * * <p>TODO This class can be removed once FLINK-21224 is finished. */,1,1,1,1,-1,-1,-1,-1
/** * A string identifier that encodes the serialization format used by the serializer. * * <p>TODO we might change this to a proper serialization format class in the future */,1,1,1,1,-1,-1,-1,-1
"/** * A synchronous {@link BufferFileReader} implementation. * * <p>This currently bypasses the I/O manager as it is the only synchronous implementation, which is * currently in use. * * <p>TODO Refactor I/O manager setup and refactor this into it */",1,1,1,1,-1,-1,-1,-1
"/** * A utility for reflection analysis on classes, to determine the return type of implementations of * transformation functions. * * <p>NOTES FOR USERS OF THIS CLASS: Automatic type extraction is a hacky business that depends on a * lot of variables such as generics, compiler, interfaces, etc. The type extraction fails regularly * with either {@link MissingTypeInfo} or hard exceptions. Whenever you use methods of this class, * make sure to provide a way to pass custom type information as a fallback. */",1,1,1,1,-1,-1,-1,-1
/** * A {@link TableSourceQueryOperation} with {@link FlinkStatistic} and qualifiedName. TODO this * class should be deleted after unique key in TableSchema is ready and setting catalog statistic to * TableSourceTable in DatabaseCalciteSchema is ready * * <p>This is only used for testing. */,1,1,1,1,-1,-1,-1,-1
"/** * Actually, the return value is just for saving checkSkipReadForFixLengthPart in the * mapFromPages, the cost is very small. * * <p>TODO so, we can remove this return value for simplifying interface. */",1,1,1,1,-1,-1,-1,-1
/** * An inbound {@link StreamObserver} which delegates requests to registered handlers. * * <p>Is only threadsafe if the outbound observer is threadsafe. * * <p>TODO: Handle when the client indicates completion or an error on the inbound stream and * there are pending requests. */,1,1,1,1,-1,-1,-1,-1
/** * Apply limit to calculate the parallelism. Here limit is the limit in query <code> * SELECT * FROM xxx LIMIT [limit]</code>. */,0,1,1,1,-1,-1,-1,-1
/** * Base class for exec Exchange. * * <p>TODO Remove this class once its functionality is replaced by ExecEdge. */,1,1,1,1,-1,-1,-1,-1
"/** * Cache of already accessed states. * * <p>In contrast to {@link #registeredOperatorStates} which may be repopulated with restored * state, this map is always empty at the beginning. * * <p>TODO this map should be moved to a base class once we have proper hierarchy for the * operator state backends. * * @see <a href=""https://issues.apache.org/jira/browse/FLINK-6849"">FLINK-6849</a> */",1,1,1,1,-1,-1,-1,-1
/** * Can the partition be reconnected. * * <p>Attention: this attribute is introduced temporally for * ResultPartitionType.PIPELINED_APPROXIMATE It will be removed afterwards: TODO: 1. Approximate * local recovery has its won failover strategy to restart the failed set of tasks instead of * restarting downstream of failed tasks depending on {@code * RestartPipelinedRegionFailoverStrategy} 2. FLINK-19895: Unify the life cycle of * ResultPartitionType Pipelined Family */,1,1,1,1,-1,-1,-1,-1
"/** * Checker for remember previousArgTypes. * * @deprecated TODO hack code, should modify calcite getRowType to pass operand types */",1,1,1,1,-1,-1,-1,-1
"/** * Checks if the given function has been implemented using a Java 8 lambda. If yes, a * LambdaExecutable is returned describing the method/constructor. Otherwise null. * * @throws TypeExtractionException lambda extraction is pretty hacky, it might fail for unknown *     JVM issues. */",1,1,1,1,-1,-1,-1,-1
/** * Convert {@link RowData} into {@link BinaryRowData}. TODO modify it to code gen. */,1,1,1,1,-1,-1,-1,-1
"/** * Creates or retrieves a partitioned state backed by this state backend. * * <p>TODO: NOTE: This method does a lot of work caching / retrieving states just to update the * namespace. This method should be removed for the sake of namespaces being lazily fetched from * the keyed state backend, or being set on the state directly. * * @param stateDescriptor The identifier for the state. This contains name and can create a *     default state value. * @param <N> The type of the namespace. * @param <S> The type of the state. * @return A new key/value state backed by this backend. * @throws Exception Exceptions may occur during initialization of the state and should be *     forwarded. */",1,1,1,1,-1,-1,-1,-1
/** * Enum for backwards compatibility. This gives a hint about the expected state type for which a * {@link StateMetaInfoSnapshot} should be deserialized. * * <p>TODO this can go away after we eventually drop backwards compatibility with all versions < * 5. */,1,1,1,1,-1,-1,-1,-1
/** * Get next row from iterator. Return null if iterator has no next. TODO Maybe copy is repeated. */,1,1,1,1,-1,-1,-1,-1
"/** * HTTP/1.1 200 OK x-amz-id-2: Uuag1LuByRx9e6j5Onimru9pO4ZVKnJ2Qz7/C1NPcfTWAtRPfTaOFg== * x-amz-request-id: 656c76696e6727732072657175657374 Date: Tue, 20 Sep 2012 20:34:56 GMT * Content-Length: xxx Connection: keep-alive Server: AmazonS3 * * <p><LifecycleConfiguration> <Rule> <ID>logs-rule</ID> <Prefix>logs/</Prefix> * <Status>Enabled</Status> <Filter> <Prefix>logs/</Prefix> <Tag> <Key>key1</Key> * <Value>value1</Value> </Tag> <And> <Prefix>logs/</Prefix> <Tag> <Key>key1</Key> * <Value>value1</Value> </Tag> <Tag> <Key>key1</Key> <Value>value1</Value> </Tag> </And> * </Filter> <Transition> <Days>30</Days> <StorageClass>STANDARD_IA</StorageClass> </Transition> * <Transition> <Days>90</Days> <StorageClass>GLACIER</StorageClass> </Transition> <Expiration> * <Days>365</Days> </Expiration> <NoncurrentVersionTransition> * <NoncurrentDays>7</NoncurrentDays> <StorageClass>STANDARD_IA</StorageClass> * </NoncurrentVersionTransition> <NoncurrentVersionTransition> * <NoncurrentDays>14</NoncurrentDays> <StorageClass>GLACIER</StorageClass> * </NoncurrentVersionTransition> <NoncurrentVersionExpiration> * <NoncurrentDays>365</NoncurrentDays> </NoncurrentVersionExpiration> </Rule> <Rule> * <ID>image-rule</ID> <Prefix>image/</Prefix> <Status>Enabled</Status> <Transition> * <Date>2012-12-31T00:00:00.000Z</Date> <StorageClass>GLACIER</StorageClass> </Transition> * <Expiration> <Date>2020-12-31T00:00:00.000Z</Date> </Expiration> * <AbortIncompleteMultipartUpload> <DaysAfterInitiation>10</DaysAfterInitiation> * </AbortIncompleteMultipartUpload> </Rule> </LifecycleConfiguration> */",0,1,1,1,-1,-1,-1,-1
/** * Hack utils for hive function. */,1,1,1,1,-1,-1,-1,-1
"/** * Hive {@link AggSqlFunction}. Override getFunction to clone function and invoke {@code * HiveUDAF#setArgumentTypesAndConstants}. Override SqlReturnTypeInference to invoke {@code * HiveUDAF#getHiveResultType} instead of {@code HiveUDAF#getResultType}. * * @deprecated TODO hack code, its logical should be integrated to AggSqlFunction */",1,1,1,1,-1,-1,-1,-1
"/** * Hive {@link TableSqlFunction}. Override getFunction to clone function and invoke {@code * HiveGenericUDTF#setArgumentTypesAndConstants}. Override SqlReturnTypeInference to invoke {@code * HiveGenericUDTF#getHiveResultType} instead of {@code HiveGenericUDTF#getResultType(Object[], * Class[])}. * * @deprecated TODO hack code, its logical should be integrated to TableSqlFunction */",1,1,1,1,-1,-1,-1,-1
/** * HiveParserRowResolver of outer query. This is used to resolve co-rrelated columns in Filter * TODO: this currently will only be able to resolve reference to parent query's column this * will not work for references to grand-parent column */,1,1,1,1,-1,-1,-1,-1
/** * IT case for HiveCatalog. TODO: move to flink-connector-hive-test end-to-end test module once it's * setup */,1,1,1,1,-1,-1,-1,-1
"/** * Indicates whether or not implementations of this class is writing to the raw keyed state * streams on snapshots, using {@link #snapshotState(StateSnapshotContext)}. If yes, subclasses * should override this method to return {@code true}. * * <p>Subclasses need to explicitly indicate the use of raw keyed state because, internally, the * {@link AbstractStreamOperator} may attempt to read from it as well to restore heap-based * timers and ultimately fail with read errors. By setting this flag to {@code true}, this * allows the {@link AbstractStreamOperator} to know that the data written in the raw keyed * states were not written by the timer services, and skips the timer restore attempt. * * <p>Please refer to FLINK-19741 for further details. * * <p>TODO: this method can be removed once all timers are moved to be managed by state * backends. * * @return flag indicating whether or not this operator is writing to raw keyed state via {@link *     #snapshotState(StateSnapshotContext)}. */",1,1,0,1,-1,-1,-1,-1
"/** * Interface for Hive simple udf, generic udf, and generic udtf. TODO: Note: this is only a * temporary interface for workaround when Flink type system and udf system rework is not finished. * Should adapt to Flink type system and Flink UDF framework later on. */",1,1,1,1,-1,-1,-1,-1
/** * Interface to deal with state snapshot and restore of state. TODO find better name? */,1,1,1,1,-1,-1,-1,-1
"/** * Loader to temporary files to final output path and meta store. According to overwrite, the loader * will delete the previous data. * * <p>This provide two interface to load: 1.{@link #loadPartition}: load temporary partitioned * files, if it is new partition, will create partition to meta store. 2.{@link #loadNonPartition}: * just rename all files to final output path. * * <p>TODO: src and dest may be on different FS. */",1,1,0,1,-1,-1,-1,-1
"/** * Mapping from artificial row index (generated by `nextLeftIndex`) into the left side `Row`. We * can not use List to accumulate Rows, because we need efficient deletes of the oldest rows. * * <p>TODO: this could be OrderedMultiMap[Jlong, Row] indexed by row's timestamp, to avoid full * map traversals (if we have lots of rows on the state that exceed `currentWatermark`). */",1,1,1,1,-1,-1,-1,-1
/** * Mapping from timestamp to right side `Row`. * * <p>TODO: having `rightState` as an OrderedMapState would allow us to avoid sorting cost once * per watermark */,1,1,1,1,-1,-1,-1,-1
/** * Obtains a DataInputStream in an thread that is not interrupted. This is a necessary hack * around the problem that the HDFS client is very sensitive to InterruptedExceptions. */,1,1,1,1,-1,-1,-1,-1
/** * Operator for batch limit. TODO support stopEarly. */,1,1,1,1,-1,-1,-1,-1
/** * Provides access to transient BLOB files stored at the {@link BlobServer}. * * <p>TODO: make this truly transient by returning file streams to a local copy with the remote * being removed upon retrieval and the local copy being deleted at the end of the stream. */,1,1,1,1,-1,-1,-1,-1
"/** * Serializes an XML document as text. * * <p>TODO: I'm sure there's a library call to do this, but I'm danged if I can find it. -- * jhyde, 2006/2/9. */",1,1,1,1,-1,-1,-1,-1
/** * Snapshots the timers to raw keyed state. * * <p><b>TODO:</b> This can be removed once heap-based timers are integrated with RocksDB * incremental snapshots. */,1,0,1,1,-1,-1,-1,-1
/** * Special optimized hashTable with key long. * * <p>See {@link LongHashPartition}. TODO add min max long filter and bloomFilter to spilled * partition. */,1,1,1,1,-1,-1,-1,-1
/** * TODO change this to the corresponding savepoint version to be written (e.g. {@link * FlinkVersion#v1_3} for 1.3) TODO and remove all @Ignore annotations on the writeSnapshot() * method to generate savepoints TODO Note: You should generate the savepoint based on the * release branch instead of the master. */,1,1,1,1,-1,-1,-1,-1
/** * TODO change this to the corresponding savepoint version to be written (e.g. {@link * FlinkVersion#v1_3} for 1.3) TODO and remove all @Ignore annotations on write*Snapshot() * methods to generate savepoints TODO Note: You should generate the savepoint based on the * release branch instead of the master. */,1,1,1,1,-1,-1,-1,-1
/** * TODO it might be replaced by the global IO executor on TaskManager level future. */,1,1,1,1,-1,-1,-1,-1
/** * TODO this method should be removed once the serializer map is removed. */,1,1,1,1,-1,-1,-1,-1
"/** * TODO this variant, which requires providing the serializers, TODO should actually be removed, * leaving only {@link #StateMetaInfoSnapshot(String, BackendStateType, Map, Map)}. TODO This is * still used by snapshot extracting methods (i.e. computeSnapshot() method of specific state * meta TODO info subclasses), and will be removed once all serializers have the * restoreSerializer() factory method implemented. */",1,1,1,1,-1,-1,-1,-1
"/** * TODO to generate savepoints for a specific Flink version / backend type, TODO change these * values accordingly, e.g. to generate for 1.3 with RocksDB, TODO set as (FlinkVersion.v1_3, * StateBackendLoader.ROCKSDB_STATE_BACKEND_NAME) TODO Note: You should generate the savepoint * based on the release branch instead of the master. */",1,1,1,1,-1,-1,-1,-1
"/** * TODO, replace it with main thread executor. */",1,1,1,1,-1,-1,-1,-1
"/** * TODO: NOTE: This method does a lot of work caching / retrieving states just to update the * namespace. This method should be removed for the sake of namespaces being lazily fetched from * the keyed state backend, or being set on the state directly. * * @see KeyedStateBackend */",1,1,1,1,-1,-1,-1,-1
/** * TODO: add javadoc. */,1,1,1,1,-1,-1,-1,-1
"/** * Test for the basic functionality of accumulators. We cannot test all different kinds of plans * here (iterative, etc.). * * <p>TODO Test conflict when different UDFs write to accumulator with same name but with different * type. The conflict will occur in JobManager while merging. */",1,1,1,1,-1,-1,-1,-1
"/** * The {@link JoinedRowResultFuture} is used to combine left {@link RowData} and right {@link * RowData} into {@link JoinedRowData}. * * <p>There are 3 phases in this collector. * * <ol> *   <li>accept lookup function return result and convert it into RowData, call it right result *   <li>project & filter the right result if there is a calc on the temporal table, see {@link *       AsyncLookupJoinWithCalcRunner#createFetcherResultFuture(Configuration)} *   <li>filter the result if a join condition exist, see {@link *       AsyncLookupJoinRunner#createFetcherResultFuture(Configuration)} *   <li>combine left input and the right result into a JoinedRowData, call it join result * </ol> * * <p>TODO: code generate a whole JoinedRowResultFuture in the future */",1,1,0,1,-1,-1,-1,-1
/** * This class has been copied from Calcite to backport the fix made during CALCITE-4394. * * <p>TODO Remove this class with Calcite 1.27 and replace the {@link SqlJsonObjectFunction} in the * {@link SqlJsonObjectFunctionWrapper} using the {@code VARCHAR_NOT_NULL} return type inference. */,1,1,1,1,-1,-1,-1,-1
/** * This class provides access to input streams that contain data of one state partition of a * partitionable state. * * <p>TODO use bounded stream that fail fast if the limit is exceeded on corrupted reads. */,1,1,1,1,-1,-1,-1,-1
/** * This helper function is needed to check that the temporary fix for FLINK-13063 can be * backwards compatible with the old chaining behavior by setting the ChainingStrategy manually. * TODO: remove after a proper fix for FLINK-13063 is in place that allows chaining. */,1,1,1,1,-1,-1,-1,-1
"/** * This is a small hack. Instead of spawning a custom thread to monitor {@link * NetworkBufferPool} usage, we are re-using {@link View#update()} method for this purpose. */",1,1,1,1,-1,-1,-1,-1
"/** * This is invoked without calling open(), so we need to call init() for * getNewAggregationBuffer(). TODO: re-evaluate how this will fit into Flink's new type * inference and udf system */",1,1,1,1,-1,-1,-1,-1
"/** * This method is copied from calcite, and modify it to not rely on Function. TODO * FlinkTableFunction need implement getElementType. */",1,1,1,1,-1,-1,-1,-1
/** * This test delegates to instances of {@link EventTimeWindowCheckpointingITCase} that have been * reconfigured to use local recovery. * * <p>TODO: This class must be refactored to properly extend {@link * EventTimeWindowCheckpointingITCase}. */,1,1,1,1,-1,-1,-1,-1
"/** * This test is to guard against the issue reported in FLINK-22001, where any exception from the * JobManager initialization was not forwarded to the user. * * <p>TODO: This test relies on an internal error. Replace it with a more robust approach. */",1,1,1,1,-1,-1,-1,-1
/** * This {@link ExecNode} represents a change of partitioning of the input elements for batch. * * <p>TODO Remove this class once FLINK-21224 is finished. */,1,1,1,1,-1,-1,-1,-1
/** * This {@link ExecNode} represents a change of partitioning of the input elements for stream. * * <p>TODO Remove this class once FLINK-21224 is finished. */,1,1,1,1,-1,-1,-1,-1
"/** * To simply the view releasing threading model, {@link * PipelinedApproximateSubpartition#releaseView()} is called only before creating a new view. * * <p>There is still one corner case when a downstream task fails continuously in a short period * of time then multiple netty worker threads can createReadView at the same time. TODO: This * problem will be solved in FLINK-19774 */",1,1,1,1,-1,-1,-1,-1
/** * Utility class for catalog testing. TODO: Move util methods to CatalogTest and remove this class */,1,1,1,1,-1,-1,-1,-1
/** * Variables used by LLAP daemons. * TODO: Eventually auto-populate this based on prefixes. The conf variables * will need to be renamed for this. */,1,1,1,1,-1,-1,-1,-1
"/** * Wraps H2 {@link XAResource} to: * * <ol> *   <li>reset <code>currentTransaction</code> field after a call to {@link XAResource#prepare *       prepare}. This allows to {@link XAResource#start start} a new transaction after preparing *       the current one. (see this <a *       href=""http://h2-database.66688.n3.nabble.com/Possible-XA-bug-and-fix-td3303095.html"">discussion</a>) *   <li>prevent {@link NullPointerException} when there is no active XA transaction in {@link *       XAResource#start start}, {@link XAResource#end end} (and throw appropriate {@link *       XAException} instead) * </ol> * * <p>These fixes are just enough to test Flink XA-related functionality. They aren't enough for * proper XA support. * * <p>TODO: fix the issue in the upstream. */",1,1,0,1,-1,-1,-1,-1
/** * javac hack for unchecking the checked exception. */,1,1,1,1,-1,-1,-1,-1
"/** * {@link TypeInformation} for {@link Instant}. * * <p>The different between Types.INSTANT is the TypeInformation holds a precision Reminder: * Conversion from DataType to TypeInformation (and back) exists in * TableSourceUtil.computeIndexMapping, which should be fixed after we remove Legacy TypeInformation * TODO: https://issues.apache.org/jira/browse/FLINK-14927 */",1,1,1,1,-1,-1,-1,-1
"/** * {@link TypeInformation} for {@link LocalDateTime}. * * <p>The difference between Types.LOCAL_DATE_TIME is this TypeInformation holds a precision * Reminder: Conversion from DateType to TypeInformation (and back) exists in * TableSourceUtil.computeIndexMapping, which should be fixed after we remove Legacy TypeInformation * TODO: https://issues.apache.org/jira/browse/FLINK-14927 */",1,1,1,1,-1,-1,-1,-1
"/** * {@link TypeInformation} for {@link Timestamp}. * * <p>The difference between Types.SQL_TIMESTAMP is this TypeInformation holds a precision Reminder: * Conversion from DateType to TypeInformation (and back) exists in * TableSourceUtil.computeIndexMapping, which should be fixed after we remove Legacy TypeInformation * TODO: https://issues.apache.org/jira/browse/FLINK-14927 */",1,1,1,1,-1,-1,-1,-1
"// (I know, seems like an unnecessary hack, since the JVM obviously can",1,1,1,1,-1,-1,-1,-1
// // TODO: Runtime support required. Each left tuple may be returned only once.,1,1,1,1,-1,-1,-1,-1
// // TODO: Runtime support required. Each right tuple may be returned only once.,1,1,1,1,-1,-1,-1,-1
// A hack to support legacy types. To be removed when we drop the legacy types.,1,1,1,1,-1,-1,-1,-1
// Create a testing job with a bounded legacy source in a bit hacky way.,1,1,1,1,-1,-1,-1,-1
"// Duration timeInterval, // TODO INTERVAL types not supported yet",1,1,1,1,-1,-1,-1,-1
"// Duration timeInterval, TODO TIMESTAMP WITH TIMEZONE not supported yet",1,1,1,1,-1,-1,-1,-1
// End of hack to make configuration testing possible,1,1,1,1,-1,-1,-1,-1
// FIXME jvs 9-Feb-2005:  Correlation should,1,1,1,1,-1,-1,-1,-1
// HACK: temporary hack to make the changelog state backend tests work with forced,1,1,1,1,-1,-1,-1,-1
// HACK: temporary hack to make the randomized changelog state backend tests work with forced,1,1,1,1,-1,-1,-1,-1
// Hack,1,1,1,1,-1,-1,-1,-1
// Hack to make configuration testing possible.,1,1,1,1,-1,-1,-1,-1
"// OffsetDateTime zonedDateTime, TODO TIMESTAMP WITH TIMEZONE not supported yet",1,1,1,1,-1,-1,-1,-1
"// Period dateTimeInteraval, // TODO INTERVAL types not supported yet",1,1,1,1,-1,-1,-1,-1
"// Period dateTimeInteraval, TODO TIMESTAMP WITH TIMEZONE not supported yet",1,1,1,1,-1,-1,-1,-1
"// TODO  use offset, better performance",1,1,1,1,-1,-1,-1,-1
"// TODO -   message from the master, and the source's trigger",1,1,1,1,-1,-1,-1,-1
"// TODO -   source's trigger message, but do a handshake in this task",1,1,1,1,-1,-1,-1,-1
"// TODO - in the next cleanup pass, we should try to remove the need to ""wrap unchecked""",1,1,1,1,-1,-1,-1,-1
// TODO - we need to see how to derive those. We should probably not,1,1,1,1,-1,-1,-1,-1
// TODO :: suggest failed task executor to stop itself,1,1,1,1,-1,-1,-1,-1
// TODO :: suggest old taskExecutor to stop itself,1,1,1,1,-1,-1,-1,-1
"// TODO Can get filter's config in the future RocksDB version, and build new filter use",1,1,1,1,-1,-1,-1,-1
"// TODO Currently, correlation in projection is not supported.",1,1,1,1,-1,-1,-1,-1
// TODO Directly serialize to Netty's buffer,1,1,0,1,-1,-1,-1,-1
// TODO Eliminate duplicate keys,1,1,1,1,-1,-1,-1,-1
"// TODO FLINK-25113 all this partition keys code should be pruned from the orc format,",1,1,1,1,-1,-1,-1,-1
"// TODO FLINK-25113 all this partition keys code should be pruned from the parquet format,",1,1,1,1,-1,-1,-1,-1
// TODO FLINK-4194 ADD SUPPORT FOR boolean isEndOfStream(T nextElement);,1,1,1,1,-1,-1,-1,-1
// TODO For some tests this could be a problem when querying too early if all,1,1,1,1,-1,-1,-1,-1
"// TODO If input is ordered, there is no need to use the heap.",1,1,1,1,-1,-1,-1,-1
"// TODO If the taskManager does not have enough resource, we",1,1,1,1,-1,-1,-1,-1
"// TODO MemoryManager needs to support flexible larger segment, so that the index area",1,1,1,1,-1,-1,-1,-1
// TODO Move the following 2 properties out of Configuration to a constant.,1,1,1,1,-1,-1,-1,-1
// TODO Note: You should generate the savepoint based on the release branch instead of the,1,1,1,1,-1,-1,-1,-1
// TODO Note: You should generate the snapshot based on the release branch instead of the,1,1,1,1,-1,-1,-1,-1
// TODO Refactor after removing the consumers from the intermediate result partitions,1,1,1,1,-1,-1,-1,-1
// TODO Reform AggsHandleFunction.getValue instead of use JoinedRowData. Multilayer,1,1,1,1,-1,-1,-1,-1
// TODO The job-submission web interface passes empty args (and thus empty,1,1,1,1,-1,-1,-1,-1
// TODO This could potentially have a bad performance impact as in the,1,1,1,1,-1,-1,-1,-1
// TODO This implementation should be updated once FLINK-21224 is finished.,1,1,1,1,-1,-1,-1,-1
// TODO This is a temporary fix for a problem during,1,1,1,1,-1,-1,-1,-1
// TODO Use UnaryUpdateTopNFunction after SortedMapState is merged,1,1,1,1,-1,-1,-1,-1
// TODO Use count down latches instead as a cleaner solution,1,1,1,1,-1,-1,-1,-1
// TODO Use timer with namespace to distinguish timers,1,1,1,1,-1,-1,-1,-1
// TODO We should use code generation for this.,1,1,1,1,-1,-1,-1,-1
// TODO a more proper retry strategy?,1,1,1,1,-1,-1,-1,-1
// TODO activate the sanity check once resolved,1,1,1,1,-1,-1,-1,-1
// TODO add create state method.,1,1,1,1,-1,-1,-1,-1
// TODO allow for more (user defined) compression formats + backwards compatibility story.,1,1,1,1,-1,-1,-1,-1
// TODO change the formula once FLINK-15532 resolved.,1,1,1,1,-1,-1,-1,-1
// TODO change this to CREATE_SNAPSHOT to (re)create binary snapshots,1,1,1,1,-1,-1,-1,-1
// TODO change this to PERFORM_SAVEPOINT to regenerate binary savepoints,1,1,1,1,-1,-1,-1,-1
// TODO change this to something proper,1,1,1,1,-1,-1,-1,-1
// TODO changing it would require corresponding path changes in flink-runtime-web,1,1,1,1,-1,-1,-1,-1
"// TODO clip for array,map,row types.",1,1,0,1,-1,-1,-1,-1
// TODO configure filters,1,1,1,1,-1,-1,-1,-1
"// TODO consider bulk loading the partitions and ""heapify"" keyGroupHeap once after all",1,1,1,1,-1,-1,-1,-1
"// TODO currently this does not support local state recovery, so we expect there is only",1,1,1,1,-1,-1,-1,-1
// TODO currently we does not handle this,1,1,1,1,-1,-1,-1,-1
// TODO do null filter in advance?,1,1,1,1,-1,-1,-1,-1
// TODO does not allow correlation condition in its inputs now,1,1,1,1,-1,-1,-1,-1
// TODO drop constants once SchemaValidator has been ported to flink-table-common,1,1,1,1,-1,-1,-1,-1
// TODO drop this line once we remove legacy types,1,1,1,1,-1,-1,-1,-1
// TODO enable this once gateway mode is in place,1,1,1,1,-1,-1,-1,-1
"// TODO erase the conversion class earlier when dropping legacy code, esp. FLINK-22321",1,1,1,1,-1,-1,-1,-1
// TODO from the newly registered typeSerializer instead of simply failing,1,1,1,1,-1,-1,-1,-1
"// TODO hack, use the current input reset the buffer value.",1,1,1,1,-1,-1,-1,-1
// TODO how to handle this?,1,1,1,1,-1,-1,-1,-1
"// TODO if we want to support async writes, this call could trigger a callback to the",1,1,1,1,-1,-1,-1,-1
// TODO implement shrinking as well?,1,1,1,1,-1,-1,-1,-1
// TODO increase this to newer version to create and test snapshot migration for newer versions,1,1,1,1,-1,-1,-1,-1
// TODO just replace comparator to equaliser,1,1,1,1,-1,-1,-1,-1
// TODO jvs 10-Oct-2005:  get rid of this workaround once,1,1,1,1,-1,-1,-1,-1
// TODO jvs 11-Dec-2008:  make this local to performUnconditionalRewrites,1,1,1,1,-1,-1,-1,-1
// TODO jvs 12-Feb-2005:  proper type name formatting,1,1,1,1,-1,-1,-1,-1
// TODO jvs 25-Apr-2006:  reuse bulk of,1,1,1,1,-1,-1,-1,-1
// TODO jvs 26-May-2006:  Use SqlTypeFamily instead; it exists,1,1,1,1,-1,-1,-1,-1
// TODO make KvStateSerializer key-group aware to save this round trip and key-group,1,1,1,1,-1,-1,-1,-1
// TODO make this class immutable once we drop this method,1,1,1,1,-1,-1,-1,-1
// TODO make this configurable,1,1,1,1,-1,-1,-1,-1
// TODO maybe filterOrTransform only for k/v states,1,1,1,1,-1,-1,-1,-1
// TODO move this class to org.apache.flink.table.runtime.typeutils,1,1,1,1,-1,-1,-1,-1
"// TODO once FLINK-21224 [Remove BatchExecExchange and StreamExecExchange, and replace their",1,1,1,1,-1,-1,-1,-1
// TODO planner ignores the precision,1,1,1,1,-1,-1,-1,-1
// TODO planner supports only milliseconds precision,1,1,1,1,-1,-1,-1,-1
// TODO planner supports up to TIME(3),1,1,1,1,-1,-1,-1,-1
// TODO refactor it.,1,1,0,1,-1,-1,-1,-1
// TODO remove this once heap-based timers are working with RocksDB incremental snapshots!,1,1,1,1,-1,-1,-1,-1
// TODO remove this once it is supported in CEP library,1,1,1,1,-1,-1,-1,-1
// TODO remove this while ResolvedSchema supports fieldNullables,1,1,1,1,-1,-1,-1,-1
// TODO rewrite based on operator id,1,1,1,1,-1,-1,-1,-1
"// TODO should add a validation, while StreamTableSource is in flink-table-api-java-bridge",1,1,1,1,-1,-1,-1,-1
"// TODO since we only support a single named state in raw, this could be",1,1,1,1,-1,-1,-1,-1
// TODO support RANK and DENSE_RANK,1,1,1,1,-1,-1,-1,-1
// TODO support after FLINK-11898 is merged,1,1,1,1,-1,-1,-1,-1
// TODO support it,1,1,1,1,-1,-1,-1,-1
// TODO support other join type,1,1,1,1,-1,-1,-1,-1
// TODO support precision of 9,1,1,1,1,-1,-1,-1,-1
// TODO supports correlation variable with OR,1,1,1,1,-1,-1,-1,-1
// TODO supports more AggregateCalls,1,1,1,1,-1,-1,-1,-1
// TODO supports more aggCalls (currently only supports COUNT),1,1,1,1,-1,-1,-1,-1
// TODO test Conflict resolution:,1,1,1,1,-1,-1,-1,-1
"// TODO the 'NO_OF_RETRIES' is useless for current RestartPipelinedRegionStrategy,",1,1,1,1,-1,-1,-1,-1
// TODO the following two methods might be not so efficient,1,1,1,1,-1,-1,-1,-1
"// TODO the keySerializer field should be removed, once all serializers have the",1,1,1,1,-1,-1,-1,-1
// TODO the shuffle between join and agg can be removed,1,1,1,1,-1,-1,-1,-1
"// TODO this REST path is inappropriately set due to legacy design reasons, and ideally should",1,1,1,1,-1,-1,-1,-1
// TODO this could be aware of keyGroupPrefixBytes and write only,1,1,1,1,-1,-1,-1,-1
// TODO this could be aware of keyGroupPrefixBytes and write only one,1,1,1,1,-1,-1,-1,-1
// TODO this could be aware of keyGroupPrefixBytes and write only one byte,1,1,1,1,-1,-1,-1,-1
// TODO this could be aware of keyGroupPrefixBytes and write only one byte if,1,1,1,1,-1,-1,-1,-1
"// TODO this implementation is not very effective,",1,1,1,1,-1,-1,-1,-1
// TODO this metric is kept for compatibility purposes; should remove in the,1,1,1,1,-1,-1,-1,-1
"// TODO this sanity check should be here, but is prevented by an incorrect test (pending",1,1,1,1,-1,-1,-1,-1
// TODO this will go away once all serializers have the restoreSerializer() factory method,1,1,1,1,-1,-1,-1,-1
"// TODO type factory strips the precision, for literals we can be more lenient",1,1,1,1,-1,-1,-1,-1
"// TODO use CharSequence.compare(...,...) after migrating to Java 11",1,1,1,1,-1,-1,-1,-1
// TODO use classloader of catalog manager in the,1,1,1,1,-1,-1,-1,-1
// TODO use strict capacity limit until FLINK-15532 resolved,1,1,1,1,-1,-1,-1,-1
// TODO use the default shuffle mode of batch runtime mode once FLINK-23470 is implemented,1,1,1,1,-1,-1,-1,-1
// TODO validate implementation class of structured types when converting from LogicalType,1,1,1,1,-1,-1,-1,-1
// TODO we can possibly optimize it to use the nullability of the field,1,1,1,1,-1,-1,-1,-1
// TODO we cannot test null here as PojoComparator has no support for null keys,1,1,1,1,-1,-1,-1,-1
"// TODO we implement the simple way of supporting the current functionality, mimicking",1,1,1,1,-1,-1,-1,-1
// TODO we should get an Avro record here instead of a nested row.,1,1,1,1,-1,-1,-1,-1
"// TODO when eager state registration is in place, we can try to get a",1,1,1,1,-1,-1,-1,-1
"// TODO with eager registration in place, these checks should be moved to restore()",1,1,1,1,-1,-1,-1,-1
"// TODO with eager state registration in place, check here for",1,1,1,1,-1,-1,-1,-1
"// TODO with eager state registration in place, check here for serializer migration",1,1,1,1,-1,-1,-1,-1
"// TODO, call triggerCheckpoint directly after removing timer thread",1,1,1,1,-1,-1,-1,-1
"// TODO, if you want to make select ... from (values(...) as foo(...) work,",1,1,1,1,-1,-1,-1,-1
// TODO. The processing timers' performance can be further improved.,1,1,1,1,-1,-1,-1,-1
// TODO:  eventually should assert(operandTypeInference != null),1,1,1,1,-1,-1,-1,-1
// TODO: 1) Expand to other functions as needed 2) What about types other than primitive.,1,1,1,1,-1,-1,-1,-1
// TODO: 1) How to handle collisions? 2) Should we be cloning ColumnInfo or not?,1,1,1,1,-1,-1,-1,-1
// TODO: 3/13/17 we have to have another event in order to clean up,1,1,1,1,-1,-1,-1,-1
// TODO: Abort in-flight state requests. Flag this processBundleInstructionId as a fail.,1,1,1,1,-1,-1,-1,-1
"// TODO: Add sampling for unsplittable files. Right now, only compressed text files are",1,1,1,1,-1,-1,-1,-1
"// TODO: At present, for a bounded scenario, the occurrence of final checkpoint is not a",1,1,1,1,-1,-1,-1,-1
// TODO: Because these fields have polluted this API class.,1,1,1,1,-1,-1,-1,-1
// TODO: Cast Function in Calcite have a bug where it infer type on cast throws,1,1,1,1,-1,-1,-1,-1
// TODO: Comments in RexShuttle.visitCall() mention other,1,1,1,1,-1,-1,-1,-1
// TODO: Consider notifying nested state backend about checkpoint abortion (FLINK-25850),1,1,1,1,-1,-1,-1,-1
"// TODO: Currently if some tasks is finished, we would rescale the",1,1,1,1,-1,-1,-1,-1
"// TODO: Currently, if one of the partition sends an end-of-stream signal the fetcher",1,1,0,1,-1,-1,-1,-1
// TODO: Decide which side to spill and which to block!,1,1,1,1,-1,-1,-1,-1
// TODO: Distinguish between job termination which should free all slots and a loss of,1,1,1,1,-1,-1,-1,-1
// TODO: Do we need to check the end of stream if reaching the end watermark,1,1,1,1,-1,-1,-1,-1
// TODO: Do we still need this catch branch?,1,1,1,1,-1,-1,-1,-1
// TODO: Does HQL allows expressions as aggregate args or can it only be projections from,1,1,1,1,-1,-1,-1,-1
// TODO: Don't expand the list every time. Maybe keep an expanded,1,1,1,1,-1,-1,-1,-1
// TODO: EventTimeTumblingGroupWindow should sort the stream on event time,1,1,1,1,-1,-1,-1,-1
// TODO: FLINK-17525 support millisecond and nanosecond,1,1,1,1,-1,-1,-1,-1
// TODO: FLINK-20562,1,1,1,1,-1,-1,-1,-1
// TODO: FLINK-25857 add metric later,1,1,1,1,-1,-1,-1,-1
// TODO: FLINK-8585 handle readonly and other non array based buffers more efficiently,1,1,1,1,-1,-1,-1,-1
// TODO: Filter invalid requests from the resource manager by using the,1,1,1,1,-1,-1,-1,-1
// TODO: Fix this,1,1,1,1,-1,-1,-1,-1
// TODO: For now only support sampling on up to two columns,1,1,1,1,-1,-1,-1,-1
// TODO: For what do we need this???,1,1,1,1,-1,-1,-1,-1
// TODO: Handle removed partitions.,1,1,1,1,-1,-1,-1,-1
// TODO: Have to put in the support for AS clause,1,1,1,1,-1,-1,-1,-1
// TODO: Improve performance by having an index on the instanceId,1,1,1,1,-1,-1,-1,-1
// TODO: Introduce user jar analyzer to determine user jar whether contains the python,1,1,1,1,-1,-1,-1,-1
// TODO: Make use of this config to configure fetch size,1,1,1,1,-1,-1,-1,-1
// TODO: Maybe it's also ok to skip this check in case that we cannot check the leader,1,1,1,1,-1,-1,-1,-1
// TODO: Maybe it's better to return an Acknowledge here to notify the JM about the,1,1,1,1,-1,-1,-1,-1
"// TODO: Once the old code has been ditched, remove the explicit TaskManager query",1,1,1,1,-1,-1,-1,-1
// TODO: Pass config value from user program and do overriding here.,1,1,0,1,-1,-1,-1,-1
"// TODO: Perhaps we should do this for all functions, not just +,-",1,1,1,1,-1,-1,-1,-1
// TODO: Print the column comment until FLINK-18958 is fixed,1,1,0,1,-1,-1,-1,-1
// TODO: Push down watermark strategy to source scan,1,1,1,1,-1,-1,-1,-1
// TODO: Put these fields into RowtimeValidator once it is also ported into table-common.,1,1,1,1,-1,-1,-1,-1
// TODO: Refactor this and do in a more object oriented manner,1,1,1,1,-1,-1,-1,-1
// TODO: Remove once the Yarn proxy can forward all REST verbs,1,1,1,1,-1,-1,-1,-1
// TODO: Requiring a GenericUDAFEvaluator means we only support hive UDAFs. Need to avoid this,1,1,1,1,-1,-1,-1,-1
// TODO: Should this be allowed to access for finished tasks?,1,1,1,1,-1,-1,-1,-1
// TODO: Should we use grpbyExprNDesc.getTypeInfo()? what if expr is UDF,1,1,1,1,-1,-1,-1,-1
// TODO: Support batches invoking.,1,1,1,1,-1,-1,-1,-1
// TODO: That we still have to call something like this is a crime against humanity,1,1,1,1,-1,-1,-1,-1
// TODO: The best solution is to support NaN in expression reduction.,1,1,1,1,-1,-1,-1,-1
// TODO: The retry logic should be removed once the StreamTask lifecycle has been fixed (see,1,1,1,1,-1,-1,-1,-1
// TODO: This can waste slots if the max parallelism for slot sharing groups is not equal,1,1,1,1,-1,-1,-1,-1
// TODO: This class could be extended to parse exclude-pattern from a optional text files in,1,1,1,1,-1,-1,-1,-1
// TODO: This code is almost identical to the ClusterClientServiceLoader and its default,1,1,1,1,-1,-1,-1,-1
// TODO: This is fraught with peril.,1,1,1,1,-1,-1,-1,-1
// TODO: This method needs a leader session ID,1,1,1,1,-1,-1,-1,-1
// TODO: Try to get rid of checking nullability of executionAttemptID because false value of,1,1,1,1,-1,-1,-1,-1
// TODO: Verify if we need to use ConstantObjectInspector to unwrap data,1,1,1,1,-1,-1,-1,-1
// TODO: We can't convert BINARY data type to,1,1,1,1,-1,-1,-1,-1
// TODO: We can't convert VARBINARY(n) data type to,1,1,1,1,-1,-1,-1,-1
"// TODO: We could find a different from branch for the union, that might have an",1,1,1,1,-1,-1,-1,-1
// TODO: We need move to trash when auto-purge is false.,1,1,1,1,-1,-1,-1,-1
// TODO: [FLINK-12398] Support partitioned view in catalog API,1,1,1,1,-1,-1,-1,-1
// TODO: add back timestamptz and time types.,1,1,1,1,-1,-1,-1,-1
// TODO: add back timestamptz once planner supports timestamp with timezone,1,1,1,1,-1,-1,-1,-1
// TODO: add method to UDFBridge to say if it is a cast func,1,1,1,1,-1,-1,-1,-1
// TODO: add other precision types here in the future,1,1,1,1,-1,-1,-1,-1
"// TODO: and return it as part of requestMetricQueryServiceAddresses. Moreover,",1,1,1,1,-1,-1,-1,-1
// TODO: backward compat for Hive <= 0.12. Can be removed later.,1,1,1,1,-1,-1,-1,-1
"// TODO: better yet, we can do it outside the constructor",1,1,1,1,-1,-1,-1,-1
// TODO: but other operators do not copy this input field.....,1,1,1,1,-1,-1,-1,-1
"// TODO: check view references, too",1,1,1,1,-1,-1,-1,-1
"// TODO: checking 2 children is useless, compare already does that.",1,1,1,1,-1,-1,-1,-1
// TODO: choose a set of primary key,1,1,1,1,-1,-1,-1,-1
// TODO: cleanup this,1,1,1,1,-1,-1,-1,-1
// TODO: combine key projection and build side conversion to code gen.,1,1,1,1,-1,-1,-1,-1
// TODO: consider situations where numberOfPartitions != consumerParallelism,1,1,1,1,-1,-1,-1,-1
"// TODO: copy is not need when state backend is rocksdb,",1,1,1,1,-1,-1,-1,-1
// TODO: could this logic be moved to the user of #setTransitiveChainedTaskConfigs() ?,1,1,1,1,-1,-1,-1,-1
// TODO: create immutable copies of all maps,1,1,1,1,-1,-1,-1,-1
// TODO: do real implicit collation here,1,1,1,1,-1,-1,-1,-1
// TODO: do we need to get to child?,1,1,1,1,-1,-1,-1,-1
// TODO: does arg need type cast?,1,1,1,1,-1,-1,-1,-1
// TODO: don't do this because older version UDF only supports 2 args,1,1,1,1,-1,-1,-1,-1
// TODO: excludeCols may be possible to remove using the same technique.,1,1,1,1,-1,-1,-1,-1
// TODO: extract method,1,1,1,1,-1,-1,-1,-1
// TODO: fix this shit,1,1,1,1,-1,-1,-1,-1
// TODO: handle GenericCatalogPartition,1,1,1,1,-1,-1,-1,-1
// TODO: handle watermark and constraints,1,1,1,1,-1,-1,-1,-1
// TODO: have this thread emit the records for tracking backpressure,1,1,1,1,-1,-1,-1,-1
"// TODO: heap state backend do not copy key currently,",1,1,1,1,-1,-1,-1,-1
"// TODO: hive doesn't break here, so we copy what's below here",1,1,1,1,-1,-1,-1,-1
// TODO: how to decide this?,1,1,1,1,-1,-1,-1,-1
// TODO: ideally this only needs to be called if the result,1,1,1,1,-1,-1,-1,-1
"// TODO: if a side of the union has 2 columns with the same name, noone on the higher",1,1,1,1,-1,-1,-1,-1
// TODO: if we add tests for FLIP-27 sources we might need to adjust,1,1,1,1,-1,-1,-1,-1
// TODO: implement its own streamFactory.,1,1,1,1,-1,-1,-1,-1
// TODO: in the future we may also need to check if the target file exists.,1,1,1,1,-1,-1,-1,-1
"// TODO: in these methods, do we really need to deepcopy?",1,1,1,1,-1,-1,-1,-1
// TODO: investigate whether this has impact on Flink streaming job with,1,1,1,1,-1,-1,-1,-1
// TODO: is Decimal an exact numeric or approximate numeric?,1,1,1,1,-1,-1,-1,-1
// TODO: isAvailable() can be a costly operation (checking volatile). If one of,1,1,1,1,-1,-1,-1,-1
"// TODO: isUpsertSource(), isSourceChangeEventsDuplicate()",1,1,0,1,-1,-1,-1,-1
// TODO: main thread needs to create job or CLI fails with:,1,1,1,1,-1,-1,-1,-1
"// TODO: make aliases unique, otherwise needless rewriting takes place",1,1,1,1,-1,-1,-1,-1
"// TODO: may append something more meaningful than a timestamp, like query ID",1,1,1,1,-1,-1,-1,-1
// TODO: merge the ExecutionContext into the SessionContext.,1,1,1,1,-1,-1,-1,-1
// TODO: need to support overriding hive version,1,1,1,1,-1,-1,-1,-1
// TODO: not start enumerator until readers are ready?,1,1,1,1,-1,-1,-1,-1
// TODO: null cannot be a constant argument at the moment. This test will make more sense,1,1,1,1,-1,-1,-1,-1
// TODO: optimization here could be to work with slices and not byte arrays,1,1,1,1,-1,-1,-1,-1
// TODO: push projection into underlying input format that supports it,1,1,1,1,-1,-1,-1,-1
// TODO: read compression config from configuration,1,1,0,1,-1,-1,-1,-1
"// TODO: refactor this into TableSourceTable, once legacy TableSource is removed",1,1,1,1,-1,-1,-1,-1
// TODO: refresh watermark while idle,1,1,1,1,-1,-1,-1,-1
// TODO: remove the workaround after Kafka dependency is bumped to 2.3.0+,1,1,1,1,-1,-1,-1,-1
"// TODO: remove this and use the original code when it's moved to accessible, dependable module",1,1,1,1,-1,-1,-1,-1
// TODO: remove this line after CURATOR-645 is resolved,1,1,1,1,-1,-1,-1,-1
// TODO: return createNullLiteral(literal);,1,1,1,1,-1,-1,-1,-1
// TODO: rewriting the logic of those walkers to use opQueue,1,1,1,1,-1,-1,-1,-1
// TODO: seek not supported by compressed streams. Will throw exception,1,1,1,1,-1,-1,-1,-1
// TODO: server use user main method to generate job graph,1,1,1,1,-1,-1,-1,-1
// TODO: should check SqlOperator first and ideally shouldn't be using,1,1,1,1,-1,-1,-1,-1
// TODO: should the input be constructed inside the `OperatorChain` class?,1,1,1,1,-1,-1,-1,-1
// TODO: show the task name in the log,1,1,1,1,-1,-1,-1,-1
// TODO: somehow merge metrics from all active producers?,1,1,1,1,-1,-1,-1,-1
// TODO: support (UN)ARCHIVE PARTITION,1,1,1,1,-1,-1,-1,-1
"// TODO: support ALTER CLUSTERED BY, SKEWED, STORED AS DIRECTORIES, column constraints",1,1,1,1,-1,-1,-1,-1
"// TODO: support ALTER TABLE/PARTITION TOUCH, PROTECTION, COMPACT, CONCATENATE, UPDATE COLUMNS",1,1,1,1,-1,-1,-1,-1
"// TODO: support CLUSTERED BY, SKEWED BY, STORED BY, col constraints",1,1,1,1,-1,-1,-1,-1
"// TODO: support EXCHANGE PARTITION, RECOVER PARTITIONS",1,1,1,1,-1,-1,-1,-1
"// TODO: support IGNORE PROTECTION, PURGE",1,1,1,1,-1,-1,-1,-1
"// TODO: support RowData natively in Python, then we can eliminate the redundant",1,1,1,1,-1,-1,-1,-1
// TODO: support SEMI/ANTI join later,1,1,1,1,-1,-1,-1,-1
// TODO: support SHOW TABLES IN 'db_name' 'regex_pattern',1,1,1,1,-1,-1,-1,-1
// TODO: support column comments,1,1,1,1,-1,-1,-1,-1
// TODO: support describe partition and columns,1,1,1,1,-1,-1,-1,-1
// TODO: support higher precision,1,1,1,1,-1,-1,-1,-1
"// TODO: support nested lookup keys in the future,",1,1,1,1,-1,-1,-1,-1
// TODO: support nested projection push down in transpose,1,1,1,1,-1,-1,-1,-1
"// TODO: support partition properties, for now assume they're same as table properties",1,1,1,1,-1,-1,-1,-1
// TODO: support setting the permission without following links,1,1,1,1,-1,-1,-1,-1
"// TODO: support this, need to create a func to create an array with fields within",1,1,1,1,-1,-1,-1,-1
"// TODO: the exception message should be ""no value defined""",1,1,1,1,-1,-1,-1,-1
"// TODO: the return type of TO_TIMESTAMP should be TIMESTAMP(9),",1,1,1,1,-1,-1,-1,-1
// TODO: there's a potential problem here if some table uses external schema like,1,1,1,1,-1,-1,-1,-1
// TODO: this can overwrite the mapping. Should this be allowed?,1,1,1,1,-1,-1,-1,-1
"// TODO: this code assumes that writing a serializer is threadsafe, we",1,1,1,1,-1,-1,-1,-1
"// TODO: this error handling can be removed in future,",1,1,1,1,-1,-1,-1,-1
// TODO: this is not an extensive test of updateBinaryRepresentation(),1,1,1,1,-1,-1,-1,-1
// TODO: this is not valid. Function names for built-in UDFs are specified in,1,1,1,1,-1,-1,-1,-1
// TODO: this method may change after the ownership PR,1,1,1,1,-1,-1,-1,-1
// TODO: this needs to be removed; see TestReplicationScenarios* comments.,1,1,1,1,-1,-1,-1,-1
// TODO: track previous readers splits till checkpoint,1,1,1,1,-1,-1,-1,-1
// TODO: treat EndOfPartitionEvent as a special CheckpointBarrier?,0,1,1,1,-1,-1,-1,-1
// TODO: tweak the tests when FLINK-13604 is fixed.,1,1,1,1,-1,-1,-1,-1
// TODO: type conversion,1,1,1,1,-1,-1,-1,-1
// TODO: unhack,1,1,0,1,-1,-1,-1,-1
// TODO: update the classloader in CatalogManager.,1,1,1,1,-1,-1,-1,-1
// TODO: use :latest again once,1,1,1,1,-1,-1,-1,-1
// TODO: was it important that this is a LinkedHashMap,1,1,1,1,-1,-1,-1,-1
"// TODO: we can't declare the TINYINT as NOT NULL, because CSV connector will",1,1,1,1,-1,-1,-1,-1
"// TODO: we could remember if it's unsupported and stop sending calls; although, it might",1,1,1,1,-1,-1,-1,-1
"// TODO: we don't have to explicitly retain the valid TaskManagers, e.g. letting it",1,1,1,1,-1,-1,-1,-1
"// TODO: we need a way to tell whether a function is built-in, for now just return false so that",1,1,1,1,-1,-1,-1,-1
// TODO: we should consider how to calculate the splits according to minNumSplits in the,1,1,1,1,-1,-1,-1,-1
// TODO: what to do with ProcessingTimeServiceAware?,1,1,1,1,-1,-1,-1,-1
"// TODO: when SELECT appears as a value sub-query, should be using",1,1,1,1,-1,-1,-1,-1
"// TODO: when stop with savepoint is available, replace this code with it (with stop",1,1,1,1,-1,-1,-1,-1
// TODO: will this also fix windowing? try,1,1,1,1,-1,-1,-1,-1
// TODO: wrap accumulator,1,1,1,1,-1,-1,-1,-1
// The following 2 lines are exactly what MySQL does TODO: why do we do,1,1,1,1,-1,-1,-1,-1
"// This is hackery, but having hive-common depend on standalone-metastore is really bad",1,1,1,1,-1,-1,-1,-1
// This is sort of hack.,1,1,1,1,-1,-1,-1,-1
// Todo: Replace the Map based approach with a better approach,1,1,1,1,-1,-1,-1,-1
// We have a nested setcolref. Process that and start from scratch TODO: use,1,1,1,1,-1,-1,-1,-1
// a hack to make legacy types possible until we drop them,1,1,1,1,-1,-1,-1,-1
// case SESSION_END: // TODO: ?,1,1,1,1,-1,-1,-1,-1
"// consume all remaining keys (hack to prevent remaining inputs during iterations, lets",1,1,1,1,-1,-1,-1,-1
// debugging FLINK-22889 (TODO: remove after resolved),1,1,1,1,-1,-1,-1,-1
// generic hack: cast the writer to generic Object type so we can use it,1,1,1,1,-1,-1,-1,-1
// hack: assume 100k loops (should be expensive enough),1,1,1,1,-1,-1,-1,-1
// hack: assume 1k loops (much cheaper than the streamed variant!),1,1,1,1,-1,-1,-1,-1
"// has been initialized. This is accomplished via a mockito hack in TestSingleInputGate,",1,1,1,1,-1,-1,-1,-1
// it is a hacky but efficient solution to keep the object creation overhead low but still,1,1,1,1,-1,-1,-1,-1
// need one more mail to unblock possible yield() in close() method (todo: wait with,1,1,1,1,-1,-1,-1,-1
// popular case but that's kinda hacky. Let's not do it for now.,1,1,1,1,-1,-1,-1,-1
// temporary hack to support the optimizer plan preview,1,1,1,1,-1,-1,-1,-1
// this is a hack for now to handle the group by case,1,1,1,1,-1,-1,-1,-1
"// this timeout is sort of hack, see comments in isJobTerminated for explanation",1,1,1,1,-1,-1,-1,-1
// todo here we were seeing this problem:,1,1,1,1,-1,-1,-1,-1
"// todo replace below with joda-time, which supports timezone",1,1,1,1,-1,-1,-1,-1
// todo: FLIP-27 sources,1,1,0,1,-1,-1,-1,-1
// todo: add StateChangelogWriter.append() version without a keygroup,1,1,1,1,-1,-1,-1,-1
// todo: add new metric (FLINK-24402),1,1,1,1,-1,-1,-1,-1
// todo: chain sources,1,1,1,1,-1,-1,-1,-1
// todo: checking for suppression if there are more exceptions during cleanup,1,1,1,1,-1,-1,-1,-1
// todo: consider moving this loop into MailboxProcessor (return boolean,1,1,1,1,-1,-1,-1,-1
// todo: consider restructuring channel state and,1,1,1,1,-1,-1,-1,-1
// todo: consider using CheckpointStreamFactory / CheckpointStorageWorkerView,1,1,1,1,-1,-1,-1,-1
// todo: enable check in FLINK-23035,1,1,1,1,-1,-1,-1,-1
// todo: nested LV,1,1,0,1,-1,-1,-1,-1
// todo: remove after fixing FLINK-22889,1,1,1,1,-1,-1,-1,-1
// todo: revisit/review,1,1,0,1,-1,-1,-1,-1
// todo: support changing ttl (FLINK-23143),1,1,1,1,-1,-1,-1,-1
// todo: support state migration (in FLINK-23143),1,1,1,1,-1,-1,-1,-1
// todo: test without close,1,1,1,1,-1,-1,-1,-1
"/**     * <b>HACK:</b> Set to 21474835 seconds, Akka's maximum delay (Akka 2.4.20). The value cannot be     * higher or an {@link IllegalArgumentException} will be thrown during an RPC. Check the private     * method {@code checkMaxDelay()} in {@link akka.actor.LightArrayRevolverScheduler}.     */",1,0,1,1,-1,-1,-1,-1
/**     * A special distribution which indicators the data distribution is the same as its input. '     *     * <p>TODO This class can be removed once FLINK-21224 is finished.     */,1,1,1,1,-1,-1,-1,-1
/**     * A string identifier that encodes the serialization format used by the serializer.     *     * <p>TODO we might change this to a proper serialization format class in the future     */,1,1,1,1,-1,-1,-1,-1
"/**     * Actually, the return value is just for saving checkSkipReadForFixLengthPart in the     * mapFromPages, the cost is very small.     *     * <p>TODO so, we can remove this return value for simplifying interface.     */",1,1,1,1,-1,-1,-1,-1
/**     * An inbound {@link StreamObserver} which delegates requests to registered handlers.     *     * <p>Is only threadsafe if the outbound observer is threadsafe.     *     * <p>TODO: Handle when the client indicates completion or an error on the inbound stream and     * there are pending requests.     */,1,1,1,1,-1,-1,-1,-1
"/**     * Cache of already accessed states.     *     * <p>In contrast to {@link #registeredOperatorStates} which may be repopulated with restored     * state, this map is always empty at the beginning.     *     * <p>TODO this map should be moved to a base class once we have proper hierarchy for the     * operator state backends.     *     * @see <a href=""https://issues.apache.org/jira/browse/FLINK-6849"">FLINK-6849</a>     */",1,1,1,1,-1,-1,-1,-1
/**     * Can the partition be reconnected.     *     * <p>Attention: this attribute is introduced temporally for     * ResultPartitionType.PIPELINED_APPROXIMATE It will be removed afterwards: TODO: 1. Approximate     * local recovery has its won failover strategy to restart the failed set of tasks instead of     * restarting downstream of failed tasks depending on {@code     * RestartPipelinedRegionFailoverStrategy} 2. FLINK-19895: Unify the life cycle of     * ResultPartitionType Pipelined Family     */,1,1,1,1,-1,-1,-1,-1
"/**     * Checker for remember previousArgTypes.     *     * @deprecated TODO hack code, should modify calcite getRowType to pass operand types     */",1,1,1,1,-1,-1,-1,-1
"/**     * Checks if the given function has been implemented using a Java 8 lambda. If yes, a     * LambdaExecutable is returned describing the method/constructor. Otherwise null.     *     * @throws TypeExtractionException lambda extraction is pretty hacky, it might fail for unknown     *     JVM issues.     */",1,1,1,1,-1,-1,-1,-1
/**     * Convert {@link RowData} into {@link BinaryRowData}. TODO modify it to code gen.     */,1,1,1,1,-1,-1,-1,-1
"/**     * Creates or retrieves a partitioned state backed by this state backend.     *     * <p>TODO: NOTE: This method does a lot of work caching / retrieving states just to update the     * namespace. This method should be removed for the sake of namespaces being lazily fetched from     * the keyed state backend, or being set on the state directly.     *     * @param stateDescriptor The identifier for the state. This contains name and can create a     *     default state value.     * @param <N> The type of the namespace.     * @param <S> The type of the state.     * @return A new key/value state backed by this backend.     * @throws Exception Exceptions may occur during initialization of the state and should be     *     forwarded.     */",1,1,1,1,-1,-1,-1,-1
/**     * Enum for backwards compatibility. This gives a hint about the expected state type for which a     * {@link StateMetaInfoSnapshot} should be deserialized.     *     * <p>TODO this can go away after we eventually drop backwards compatibility with all versions <     * 5.     */,1,1,1,1,-1,-1,-1,-1
/**     * Get next row from iterator. Return null if iterator has no next. TODO Maybe copy is repeated.     */,1,1,1,1,-1,-1,-1,-1
/**     * HiveParserRowResolver of outer query. This is used to resolve co-rrelated columns in Filter     * TODO: this currently will only be able to resolve reference to parent query's column this     * will not work for references to grand-parent column     */,1,1,1,1,-1,-1,-1,-1
"/**     * Indicates whether or not implementations of this class is writing to the raw keyed state     * streams on snapshots, using {@link #snapshotState(StateSnapshotContext)}. If yes, subclasses     * should override this method to return {@code true}.     *     * <p>Subclasses need to explicitly indicate the use of raw keyed state because, internally, the     * {@link AbstractStreamOperator} may attempt to read from it as well to restore heap-based     * timers and ultimately fail with read errors. By setting this flag to {@code true}, this     * allows the {@link AbstractStreamOperator} to know that the data written in the raw keyed     * states were not written by the timer services, and skips the timer restore attempt.     *     * <p>Please refer to FLINK-19741 for further details.     *     * <p>TODO: this method can be removed once all timers are moved to be managed by state     * backends.     *     * @return flag indicating whether or not this operator is writing to raw keyed state via {@link     *     #snapshotState(StateSnapshotContext)}.     */",1,1,1,1,-1,-1,-1,-1
"/**     * Mapping from artificial row index (generated by `nextLeftIndex`) into the left side `Row`. We     * can not use List to accumulate Rows, because we need efficient deletes of the oldest rows.     *     * <p>TODO: this could be OrderedMultiMap[Jlong, Row] indexed by row's timestamp, to avoid full     * map traversals (if we have lots of rows on the state that exceed `currentWatermark`).     */",1,1,1,1,-1,-1,-1,-1
/**     * Mapping from timestamp to right side `Row`.     *     * <p>TODO: having `rightState` as an OrderedMapState would allow us to avoid sorting cost once     * per watermark     */,1,1,1,1,-1,-1,-1,-1
/**     * Obtains a DataInputStream in an thread that is not interrupted. This is a necessary hack     * around the problem that the HDFS client is very sensitive to InterruptedExceptions.     */,1,1,1,1,-1,-1,-1,-1
"/**     * Serializes an XML document as text.     *     * <p>TODO: I'm sure there's a library call to do this, but I'm danged if I can find it. --     * jhyde, 2006/2/9.     */",1,1,1,1,-1,-1,-1,-1
/**     * Snapshots the timers to raw keyed state.     *     * <p><b>TODO:</b> This can be removed once heap-based timers are integrated with RocksDB     * incremental snapshots.     */,1,0,1,1,-1,-1,-1,-1
/**     * TODO change this to the corresponding savepoint version to be written (e.g. {@link     * FlinkVersion#v1_3} for 1.3) TODO and remove all @Ignore annotations on the writeSnapshot()     * method to generate savepoints TODO Note: You should generate the savepoint based on the     * release branch instead of the master.     */,1,1,1,1,-1,-1,-1,-1
/**     * TODO change this to the corresponding savepoint version to be written (e.g. {@link     * FlinkVersion#v1_3} for 1.3) TODO and remove all @Ignore annotations on write*Snapshot()     * methods to generate savepoints TODO Note: You should generate the savepoint based on the     * release branch instead of the master.     */,1,1,1,1,-1,-1,-1,-1
/**     * TODO it might be replaced by the global IO executor on TaskManager level future.     */,1,1,1,1,-1,-1,-1,-1
/**     * TODO this method should be removed once the serializer map is removed.     */,1,1,1,1,-1,-1,-1,-1
"/**     * TODO this variant, which requires providing the serializers, TODO should actually be removed,     * leaving only {@link #StateMetaInfoSnapshot(String, BackendStateType, Map, Map)}. TODO This is     * still used by snapshot extracting methods (i.e. computeSnapshot() method of specific state     * meta TODO info subclasses), and will be removed once all serializers have the     * restoreSerializer() factory method implemented.     */",1,1,1,1,-1,-1,-1,-1
"/**     * TODO to generate savepoints for a specific Flink version / backend type, TODO change these     * values accordingly, e.g. to generate for 1.3 with RocksDB, TODO set as (FlinkVersion.v1_3,     * StateBackendLoader.ROCKSDB_STATE_BACKEND_NAME) TODO Note: You should generate the savepoint     * based on the release branch instead of the master.     */",1,1,1,1,-1,-1,-1,-1
"/**     * TODO, replace it with main thread executor.     */",1,1,1,1,-1,-1,-1,-1
"/**     * TODO: NOTE: This method does a lot of work caching / retrieving states just to update the     * namespace. This method should be removed for the sake of namespaces being lazily fetched from     * the keyed state backend, or being set on the state directly.     *     * @see KeyedStateBackend     */",1,1,1,1,-1,-1,-1,-1
"/**     * The {@link JoinedRowResultFuture} is used to combine left {@link RowData} and right {@link     * RowData} into {@link JoinedRowData}.     *     * <p>There are 3 phases in this collector.     *     * <ol>     *   <li>accept lookup function return result and convert it into RowData, call it right result     *   <li>project & filter the right result if there is a calc on the temporal table, see {@link     *       AsyncLookupJoinWithCalcRunner#createFetcherResultFuture(Configuration)}     *   <li>filter the result if a join condition exist, see {@link     *       AsyncLookupJoinRunner#createFetcherResultFuture(Configuration)}     *   <li>combine left input and the right result into a JoinedRowData, call it join result     * </ol>     *     * <p>TODO: code generate a whole JoinedRowResultFuture in the future     */",1,1,0,1,-1,-1,-1,-1
/**     * This helper function is needed to check that the temporary fix for FLINK-13063 can be     * backwards compatible with the old chaining behavior by setting the ChainingStrategy manually.     * TODO: remove after a proper fix for FLINK-13063 is in place that allows chaining.     */,1,1,1,1,-1,-1,-1,-1
"/**     * This is a small hack. Instead of spawning a custom thread to monitor {@link     * NetworkBufferPool} usage, we are re-using {@link View#update()} method for this purpose.     */",1,1,1,1,-1,-1,-1,-1
"/**     * This is invoked without calling open(), so we need to call init() for     * getNewAggregationBuffer(). TODO: re-evaluate how this will fit into Flink's new type     * inference and udf system     */",1,1,1,1,-1,-1,-1,-1
"/**     * This method is copied from calcite, and modify it to not rely on Function. TODO     * FlinkTableFunction need implement getElementType.     */",1,1,1,1,-1,-1,-1,-1
"/**     * This test is to guard against the issue reported in FLINK-22001, where any exception from the     * JobManager initialization was not forwarded to the user.     *     * <p>TODO: This test relies on an internal error. Replace it with a more robust approach.     */",1,1,1,1,-1,-1,-1,-1
"/**     * To simply the view releasing threading model, {@link     * PipelinedApproximateSubpartition#releaseView()} is called only before creating a new view.     *     * <p>There is still one corner case when a downstream task fails continuously in a short period     * of time then multiple netty worker threads can createReadView at the same time. TODO: This     * problem will be solved in FLINK-19774     */",1,1,1,1,-1,-1,-1,-1
/**     * Variables used by LLAP daemons.     * TODO: Eventually auto-populate this based on prefixes. The conf variables     * will need to be renamed for this.     */,1,1,1,1,-1,-1,-1,-1
/**     * javac hack for unchecking the checked exception.     */,1,1,1,1,-1,-1,-1,-1
"// ------------------------------------------------------------------------// finally, start the infinite shard discovery and consumer launching loop;// we will escape from this loop only when shutdownFetcher() or stopWithError() is called// TODO: have this thread emit the records for tracking backpressure",1,1,1,1,-1,-1,-1,-1
// --------------------------------------------------------------// End of hack to make configuration testing possible// --------------------------------------------------------------,1,1,1,1,-1,-1,-1,-1
"// --------------------------------------------------------------// Hack to make configuration testing possible.//// The code in this block should never be used outside of tests.// Having a way to inject a builder we can assert the builder in// the test. We can not assert everything though, e.g. it is not// possible to assert flushing on checkpoint, as it is configured// on the sink itself.// --------------------------------------------------------------",1,1,1,1,-1,-1,-1,-1
// 2. Convert Agg Fn args and type of args to Calcite// TODO: Does HQL allows expressions as aggregate args or can it only be projections from// child?,1,1,1,1,-1,-1,-1,-1
// 9. In case this HiveParserQB corresponds to subquery then modify its RR to point to// subquery alias// TODO: cleanup this,1,1,1,1,-1,-1,-1,-1
"// @SuppressWarnings(""unused"")// private static final class LeftAntiJoin<I1, I2> extends JoinOperator<I1, I2, I1> {//// protected LeftAntiJoin(DataSet<I1> input1, DataSet<I2> input2, Keys<I1> keys1, Keys<I2>// keys2, JoinHint hint) {// super(input1, input2, keys1, keys2, input1.getType(), hint);// }//// @Override// protected Operator<I1> translateToDataFlow(Operator<I1> input1, Operator<I2> input2) {// throw new UnsupportedOperationException(""LeftAntiJoin operator currently not supported."");// }// }// @SuppressWarnings(""unused"")// private static final class RightAntiJoin<I1, I2> extends JoinOperator<I1, I2, I2> {//// protected RightAntiJoin(DataSet<I1> input1, DataSet<I2> input2, Keys<I1> keys1, Keys<I2>// keys2, JoinHint hint) {// super(input1, input2, keys1, keys2, input2.getType(), hint);// }//// @Override// protected Operator<I2> translateToDataFlow(Operator<I1> input1, Operator<I2> input2) {// throw new UnsupportedOperationException(""RightAntiJoin operator currently not supported."");// }// }// @SuppressWarnings(""unused"")// private static final class LeftSemiJoin<I1, I2> extends EquiJoin<I1, I2, I1> {//// protected LeftSemiJoin(DataSet<I1> input1, DataSet<I2> input2, Keys<I1> keys1, Keys<I2>// keys2, JoinHint hint) {// super(input1, input2, keys1, keys2, new LeftSemiJoinFunction<I1, I2>(), input1.getType(),// hint);// }//// @Override// protected Operator<I1> translateToDataFlow(Operator<I1> input1, Operator<I2> input2) {// // TODO: Runtime support required. Each left tuple may be returned only once.// // 	     Special exec strategy (runtime + optimizer) based on hash join required.// // 		 Either no duplicates of right side in HT or left tuples removed from HT after first// match.// throw new UnsupportedOperationException(""LeftSemiJoin operator currently not supported."");// }// }// @SuppressWarnings(""unused"")// private static final class RightSemiJoin<I1, I2> extends EquiJoin<I1, I2, I2> {//// protected RightSemiJoin(DataSet<I1> input1, DataSet<I2> input2, Keys<I1> keys1, Keys<I2>// keys2, JoinHint hint) {// super(input1, input2, keys1, keys2, new RightSemiJoinFunction<I1, I2>(), input2.getType(),// hint);// }//// @Override// protected Operator<I2> translateToDataFlow(Operator<I1> input1, Operator<I2> input2) {// // TODO: Runtime support required. Each right tuple may be returned only once.// // 	     Special exec strategy (runtime + optimizer) based on hash join required.// // 		 Either no duplicates of left side in HT or right tuples removed from HT after first// match.// throw new UnsupportedOperationException(""RightSemiJoin operator currently not supported."");// }// }",1,1,0,1,-1,-1,-1,-1
"// As FLINK-15512 introduce a new mechanism to calculate the cache capacity,// the relationship of write_buffer_manager_capacity and cache_capacity has changed to:// write_buffer_manager_capacity / cache_capacity = 2 * writeBufferRatio / (3 -// writeBufferRatio)// we should ensure the sum of write buffer manager capacity and high priority pool less// than cache capacity.// TODO change the formula once FLINK-15532 resolved.",1,1,0,1,-1,-1,-1,-1
"// At first we go and read  the block info containing the recordCount, the// accumulatedRecordCount// and the firstRecordStart offset in the current block. This is written at the end of// the block and// is of fixed size, currently 3 * Long.SIZE.// TODO: seek not supported by compressed streams. Will throw exception",1,1,1,1,-1,-1,-1,-1
// By pass the re-commit if source file not exists.// TODO: in the future we may also need to check if the target file exists.,1,1,1,1,-1,-1,-1,-1
// Constants for schema derivation// TODO drop constants once SchemaValidator has been ported to flink-table-common,1,1,1,1,-1,-1,-1,-1
"// Duration timeInterval, // TODO INTERVAL types not supported yet// OffsetDateTime zonedDateTime, TODO TIMESTAMP WITH TIMEZONE not supported yet",1,1,1,1,-1,-1,-1,-1
"// Duration timeInterval, TODO TIMESTAMP WITH TIMEZONE not supported yet// OffsetDateTime zonedDateTime, TODO TIMESTAMP WITH TIMEZONE not supported yet",1,1,1,1,-1,-1,-1,-1
// FIXME jvs 9-Feb-2005:  Correlation should// be illegal in these sub-queries.  Same goes for// any non-lateral SELECT in the FROM list.,1,1,0,1,-1,-1,-1,-1
"// FLINK QUICK FIX// we do not use this logic right now// switch (f.getKind()) {// case TUMBLE_START:// case HOP_START:// case SESSION_START:// case SESSION_END: // TODO: ?// return e;// case TUMBLE_END:// return rexBuilder.makeCall(// SqlStdOperatorTable.PLUS, e,// ((RexCall) groupCall).operands.get(1));// case HOP_END:// return rexBuilder.makeCall(// SqlStdOperatorTable.PLUS, e,// ((RexCall) groupCall).operands.get(2));// default:// throw new AssertionError(""unknown: "" + f);// }",1,1,1,1,-1,-1,-1,-1
// FLINK-6918: Retry cancel with savepoint message in case that StreamTasks were not running// TODO: The retry logic should be removed once the StreamTask lifecycle has been fixed (see// FLINK-4714),1,1,1,1,-1,-1,-1,-1
"// First, look up the column from the source against which * is to be resolved.// We'd later translated this into the column from proper input, if it's valid.// TODO: excludeCols may be possible to remove using the same technique.",1,1,1,1,-1,-1,-1,-1
"// Follow hive's rules for type inference as oppose to Calcite's// for return type.// TODO: Perhaps we should do this for all functions, not just +,-",1,1,1,1,-1,-1,-1,-1
"// For the union reader to work, we need to start notifications *after* the union reader// has been initialized. This is accomplished via a mockito hack in TestSingleInputGate,// which checks forwards existing notifications on registerListener calls.",1,1,1,1,-1,-1,-1,-1
// HACK: temporary hack to make the changelog state backend tests work with forced// full snapshots. This option should be removed once changelog state backend supports forced// full snapshots,1,1,1,1,-1,-1,-1,-1
// HACK: temporary hack to make the randomized changelog state backend tests work with forced// full snapshots. This option should be removed once changelog state backend supports forced// full snapshots,1,1,1,1,-1,-1,-1,-1
"// If any of the children contains null, then return a null// this is a hack for now to handle the group by case",1,1,1,1,-1,-1,-1,-1
"// If input (GBY) is different than the source of columns, find the// same column in input.// TODO: This is fraught with peril.",1,1,1,1,-1,-1,-1,-1
"// If the drop has to fail on non-existent partitions, we cannot batch expressions.// That is because we actually have to check each separate expression for existence.// We could do a small optimization for the case where expr has all columns and all// operators are equality, if we assume those would always match one partition (which// may not be true with legacy, non-normalized column values). This is probably a// popular case but that's kinda hacky. Let's not do it for now.",1,1,0,1,-1,-1,-1,-1
"// If the produced partition has multiple consumers registered, we// need to request the one matching our sub task index.// TODO Refactor after removing the consumers from the intermediate result partitions",1,1,1,1,-1,-1,-1,-1
"// If this Project has correlated reference, produce the correlated variables in the new// output.// TODO Currently, correlation in projection is not supported.",1,1,1,1,-1,-1,-1,-1
"// It is OK to use UTC, we just want get the epoch days// TODO  use offset, better performance",1,1,1,1,-1,-1,-1,-1
"// Not really sure how to refer to this (or if we can).// TODO: We could find a different from branch for the union, that might have an// alias? Or we could add an alias here to refer to, but that might break other// branches.",1,1,1,1,-1,-1,-1,-1
// Note that this logic may drop some of the tables of the database// even if the drop database fail for any reason// TODO: Fix this,1,1,1,1,-1,-1,-1,-1
// Returns the GenericUDAFEvaluator for the aggregation. This is called once for each GroupBy// aggregation.// TODO: Requiring a GenericUDAFEvaluator means we only support hive UDAFs. Need to avoid this// to support flink UDAFs.,1,1,1,1,-1,-1,-1,-1
"// Some walkers extending DefaultGraphWalker e.g. ForwardWalker// do not use opQueue and rely uniquely in the toWalk structure,// thus we store the results produced by the dispatcher here// TODO: rewriting the logic of those walkers to use opQueue",1,1,1,1,-1,-1,-1,-1
"// TODO - in the next cleanup pass, we should try to remove the need to ""wrap unchecked""// here",1,1,1,1,-1,-1,-1,-1
"// TODO - we need to see how to derive those. We should probably not// encode this in the// TODO -   source's trigger message, but do a handshake in this task// between the trigger// TODO -   message from the master, and the source's trigger// notification",1,1,1,1,-1,-1,-1,-1
"// TODO Can get filter's config in the future RocksDB version, and build new filter use// existing config.",1,1,1,1,-1,-1,-1,-1
"// TODO FLINK-25113 all this partition keys code should be pruned from the orc format,// because now FileSystemTableSource uses FileInfoExtractorBulkFormat for reading partition// keys.",1,1,1,1,-1,-1,-1,-1
"// TODO FLINK-25113 all this partition keys code should be pruned from the parquet format,// because now FileSystemTableSource uses FileInfoExtractorBulkFormat for reading partition// keys.",1,1,1,1,-1,-1,-1,-1
// TODO For some tests this could be a problem when querying too early if all// resources were released,1,1,1,1,-1,-1,-1,-1
"// TODO If the taskManager does not have enough resource, we// may endlessly allocate slot on it until the next heartbeat.",1,1,1,1,-1,-1,-1,-1
"// TODO MemoryManager needs to support flexible larger segment, so that the index area// of the// build side is placed on a segment to avoid the overhead of addressing.",1,1,1,1,-1,-1,-1,-1
// TODO Reform AggsHandleFunction.getValue instead of use JoinedRowData. Multilayer// JoinedRowData is slow.,1,1,1,1,-1,-1,-1,-1
// TODO The job-submission web interface passes empty args (and thus empty// paths) to compute the preview graph. The following is a workaround for// this situation and we should fix this.// comment (Stephan Ewen) this should be no longer relevant with the current Java/Scala// APIs.,1,1,1,1,-1,-1,-1,-1
// TODO This is a temporary fix for a problem during// ZooKeeperCompletedCheckpointStore#shutdown:// Disposal is issued in another async thread and the shutdown proceeds to close the// I/O Executor pool.// This leads to RejectedExecutionException once the async deletes are triggered by// ZK. We need to// wait for all pending ZK deletes before closing the I/O Executor pool. We can// simply call #run()// because we are already in the async ZK thread that disposes the handles.,1,1,1,1,-1,-1,-1,-1
// TODO change this to CREATE_SNAPSHOT to (re)create binary snapshots// TODO Note: You should generate the snapshot based on the release branch instead of the// master.,1,1,1,1,-1,-1,-1,-1
// TODO change this to PERFORM_SAVEPOINT to regenerate binary savepoints// TODO Note: You should generate the savepoint based on the release branch instead of the// master.,1,1,1,1,-1,-1,-1,-1
// TODO configure filters// configure selected fields,1,1,0,1,-1,-1,-1,-1
"// TODO consider bulk loading the partitions and ""heapify"" keyGroupHeap once after all// elements are inserted.",1,1,1,1,-1,-1,-1,-1
"// TODO currently this does not support local state recovery, so we expect there is only// one handle.",1,1,1,1,-1,-1,-1,-1
"// TODO does not allow correlation condition in its inputs now// If correlation conditions in correlate inputs reference to correlate outputs// variable,// that should not be supported, e.g.// SELECT * FROM outer_table l WHERE l.c IN (// SELECT f1 FROM (// SELECT * FROM inner_table r WHERE r.d IN (SELECT x.i FROM x WHERE x.j = l.b)) t,// LATERAL TABLE(table_func(t.f)) AS T(f1)// ))// other cases should be supported, e.g.// SELECT * FROM outer_table l WHERE l.c IN (// SELECT f1 FROM (// SELECT * FROM inner_table r WHERE r.d IN (SELECT x.i FROM x WHERE x.j = r.e)) t,// LATERAL TABLE(table_func(t.f)) AS T(f1)// ))",1,1,1,1,-1,-1,-1,-1
"// TODO enable this once gateway mode is in place// HelpFormatter formatter = new HelpFormatter();// formatter.setLeftPadding(5);// formatter.setWidth(80);//// System.out.println(""\nIn future versions: Mode \""gateway\"" mode connects to the SQL// gateway for submission."");// System.out.println(""\n  Syntax: gateway [OPTIONS]"");// formatter.setSyntaxPrefix(""  \""gateway\"" mode options:"");// formatter.printHelp("" "", GATEWAY_MODE_CLIENT_OPTIONS);//// System.out.println();",1,1,1,1,-1,-1,-1,-1
// TODO jvs 10-Oct-2005:  get rid of this workaround once// leastRestrictive can handle all cases,1,1,1,1,-1,-1,-1,-1
// TODO jvs 11-Dec-2008:  make this local to performUnconditionalRewrites// if it's OK to expand the signature of that method.,1,1,1,1,-1,-1,-1,-1
"// TODO jvs 25-Apr-2006:  reuse bulk of// DiffTestCase.diffTestLog here; besides newline// insensitivity, it can report on the line// at which the first diff occurs, which is useful// for largish snippets",1,1,1,1,-1,-1,-1,-1
// TODO jvs 26-May-2006:  Use SqlTypeFamily instead; it exists// for exactly this purpose (to avoid the confusion which results// from overloading SqlTypeName).,1,1,1,1,-1,-1,-1,-1
// TODO make KvStateSerializer key-group aware to save this round trip and key-group// computation,1,1,1,1,-1,-1,-1,-1
// TODO move this class to org.apache.flink.table.runtime.typeutils// after we dropped the legacy ListView/MapView logic,1,1,1,1,-1,-1,-1,-1
"// TODO once FLINK-21224 [Remove BatchExecExchange and StreamExecExchange, and replace their// functionality with ExecEdge] is finished, we should remove the following validation.",1,1,1,1,-1,-1,-1,-1
"// TODO planner ignores the precision// day precision, should actually be 1",1,1,1,1,-1,-1,-1,-1
// TODO planner supports only milliseconds precision// convert to total millis,1,1,1,1,-1,-1,-1,-1
// TODO supports correlation variable with OR// return call.op.getKind() != SqlKind.OR || !result.contains(null);,1,1,1,1,-1,-1,-1,-1
// TODO supports more aggCalls (currently only supports COUNT)// Some aggregate functions (e.g. COUNT) have the special property that they can return a// non-null result without any input. We need to make sure we return a result in this case.,1,1,1,1,-1,-1,-1,-1
"// TODO the 'NO_OF_RETRIES' is useless for current RestartPipelinedRegionStrategy,// for this ContinuousFileProcessingCheckpointITCase, using// RestartPipelinedRegionStrategy would result in endless running.",1,1,1,1,-1,-1,-1,-1
// TODO the following two methods might be not so efficient// optimize them with MemorySegment if needed,1,1,1,1,-1,-1,-1,-1
"// TODO the keySerializer field should be removed, once all serializers have the// restoreSerializer() method implemented",1,1,1,1,-1,-1,-1,-1
"// TODO this REST path is inappropriately set due to legacy design reasons, and ideally should// be '/config';// TODO changing it would require corresponding path changes in flink-runtime-web",1,1,1,1,-1,-1,-1,-1
// TODO this could be aware of keyGroupPrefixBytes and write only one byte if// possible,1,1,1,1,-1,-1,-1,-1
// TODO this could be aware of keyGroupPrefixBytes and write only one byte// if possible,1,1,1,1,-1,-1,-1,-1
// TODO this could be aware of keyGroupPrefixBytes and write only one// byte if possible,1,1,1,1,-1,-1,-1,-1
// TODO this could be aware of keyGroupPrefixBytes and write only// one byte if possible,1,1,1,1,-1,-1,-1,-1
"// TODO this implementation is not very effective,// optimize this with MemorySegment if needed",1,1,1,1,-1,-1,-1,-1
// TODO this metric is kept for compatibility purposes; should remove in the// future,1,1,1,1,-1,-1,-1,-1
"// TODO this sanity check should be here, but is prevented by an incorrect test (pending// validation)// TODO see WindowOperatorTest.testCleanupTimerWithEmptyFoldingStateForSessionWindows()// TODO activate the sanity check once resolved// else if (windowState != null) {// throw new IllegalStateException(// ""The window uses a merging assigner, but the window state is not mergeable."");// }",1,1,1,1,-1,-1,-1,-1
// TODO this will go away once all serializers have the restoreSerializer() factory method// properly implemented.,1,1,1,1,-1,-1,-1,-1
"// TODO type factory strips the precision, for literals we can be more lenient// already// Moreover conversion from long supports precision up to TIME(3) planner does not// support higher// precisions",1,1,1,1,-1,-1,-1,-1
// TODO validate implementation class of structured types when converting from LogicalType// to DataType,1,1,1,1,-1,-1,-1,-1
"// TODO we implement the simple way of supporting the current functionality, mimicking// keyed state// because this should be reworked in FLINK-9376 and then we should have a common// algorithm over// StateMetaInfoSnapshot that avoids this code duplication.",1,1,1,1,-1,-1,-1,-1
// TODO we should get an Avro record here instead of a nested row.// This should be fixed with FLIP-136,1,1,1,1,-1,-1,-1,-1
"// TODO with eager state registration in place, check here for serializer migration// strategies",1,1,1,1,-1,-1,-1,-1
"// TODO with eager state registration in place, check here for// typeSerializer migration strategies",1,1,1,1,-1,-1,-1,-1
"// TODO, call triggerCheckpoint directly after removing timer thread// for now, execute the trigger in timer thread to avoid competition",1,1,1,1,-1,-1,-1,-1
"// TODO, if you want to make select ... from (values(...) as foo(...) work,// you need to parse this list of columns names and build it into the table",1,1,1,1,-1,-1,-1,-1
"// TODO// This is sort of hack.// Currently different execution environment will have different behaviors// when fetching a finished job status.// For example, standalone session cluster will return a normal FINISHED,// while mini cluster will throw IllegalStateException,// and yarn per job will throw ApplicationNotFoundException.// We have to assume that job has finished in this case.// Change this when these behaviors are unified.",1,1,1,1,-1,-1,-1,-1
// TODO:  eventually should assert(operandTypeInference != null)// instead; for now just eat it,1,1,1,1,-1,-1,-1,-1
"// TODO: At present, for a bounded scenario, the occurrence of final checkpoint is not a// deterministic event, so// we do not need to verify this matter. After the final checkpoint becomes ready in the// future,// the verification of ""end of input"" would be restored.",1,1,1,1,-1,-1,-1,-1
// TODO: Cast Function in Calcite have a bug where it infer type on cast throws// an exception,1,1,1,1,-1,-1,-1,-1
"// TODO: Currently if some tasks is finished, we would rescale the// remaining state. A better solution would be not touch the non-empty// subtask state and only fix the empty ones.",1,1,1,1,-1,-1,-1,-1
// TODO: Distinguish between job termination which should free all slots and a loss of// leadership which should keep the slots,1,1,1,1,-1,-1,-1,-1
"// TODO: Do we need to check the end of stream if reaching the end watermark// TODO: Currently, if one of the partition sends an end-of-stream signal the fetcher// stops running.// The current ""ending of stream"" logic in KafkaFetcher a bit strange: if any partition// has a record// signaled as ""END_OF_STREAM"", the fetcher will stop running. Notice that the signal is// coming from// the deserializer, which means from Kafka data itself. But it is possible that other// topics// and partitions still have data to read. Finishing reading Partition0 can not// guarantee that Partition1// also finishes.",1,1,1,1,-1,-1,-1,-1
// TODO: Don't expand the list every time. Maybe keep an expanded// version of each expression -- select lists and identifiers -- in// the validator.,1,1,1,1,-1,-1,-1,-1
"// TODO: EventTimeTumblingGroupWindow should sort the stream on event time// before applying the  windowing logic. Otherwise, this would be the same as a// ProcessingTimeTumblingGroupWindow",1,1,1,1,-1,-1,-1,-1
// TODO: FLINK-25857 add metric later// let the user configure a strategy for failing and apply it here,1,1,1,1,-1,-1,-1,-1
// TODO: FLINK-8585 handle readonly and other non array based buffers more efficiently// without data copy,1,1,1,1,-1,-1,-1,-1
// TODO: Filter invalid requests from the resource manager by using the// instance/registration Id,1,1,1,1,-1,-1,-1,-1
// TODO: For now only support sampling on up to two columns// Need to change it to list of columns,1,1,1,1,-1,-1,-1,-1
"// TODO: Introduce user jar analyzer to determine user jar whether contains the python// function or not. If user jar contains python function, manually add the python// dependencies",1,1,1,1,-1,-1,-1,-1
// TODO: Maybe it's better to return an Acknowledge here to notify the JM about the// success/failure with an Exception,1,1,1,1,-1,-1,-1,-1
"// TODO: Once the old code has been ditched, remove the explicit TaskManager query// service discovery// TODO: and return it as part of requestMetricQueryServiceAddresses. Moreover,// change the MetricStore such that// TODO: we don't have to explicitly retain the valid TaskManagers, e.g. letting it// be a cache with expiry time",1,1,1,1,-1,-1,-1,-1
// TODO: Put these fields into RowtimeValidator once it is also ported into table-common.// TODO: Because these fields have polluted this API class.,1,1,1,1,-1,-1,-1,-1
// TODO: This class could be extended to parse exclude-pattern from a optional text files in// the plugin directories.,1,1,1,1,-1,-1,-1,-1
// TODO: This code is almost identical to the ClusterClientServiceLoader and its default// implementation.// The reason of this duplication is the package structure which does not allow for the// ExecutorServiceLoader// to know about the ClusterClientServiceLoader. Remove duplication when package structure has// improved.,1,1,1,1,-1,-1,-1,-1
// TODO: Try to get rid of checking nullability of executionAttemptID because false value of// isPreFlightFailure should guarantee that executionAttemptID is always not null.,1,1,1,1,-1,-1,-1,-1
// TODO: We can't convert VARBINARY(n) data type to// PrimitiveArrayTypeInfo.BYTE_PRIMITIVE_ARRAY_TYPE_INFO in// LegacyTypeInfoDataTypeConverter when n is smaller// than Integer.MAX_VALUE,1,1,1,1,-1,-1,-1,-1
"// TODO: add back timestamptz and time types.// Flink currently doesn't support converting time's precision, with the following error// TableException: Unsupported conversion from data type 'TIME(6)' (conversion class:// java.sql.Time)// to type information. Only data types that originated from type information fully support a// reverse conversion.",1,1,1,1,-1,-1,-1,-1
"// TODO: ideally this only needs to be called if the result// type will also change. However, since that requires// support from type inference rules to tell whether a rule// decides return type based on input types, for now all// operators will be recreated with new type if any operand// changed, unless the operator has ""built-in"" type.",1,1,1,1,-1,-1,-1,-1
"// TODO: if a side of the union has 2 columns with the same name, noone on the higher// level can refer to them. We could change the alias in the original node.",1,1,1,1,-1,-1,-1,-1
// TODO: if we add tests for FLIP-27 sources we might need to adjust// this condition,1,1,1,1,-1,-1,-1,-1
"// TODO: isAvailable() can be a costly operation (checking volatile). If one of// the input is constantly available and another is not, we will be checking this// volatile// once per every record. This might be optimized to only check once per processed// NetworkBuffer",1,1,1,1,-1,-1,-1,-1
"// TODO: main thread needs to create job or CLI fails with:// ""The program didn't contain a Flink job. Perhaps you forgot to call execute() on the// execution environment.""",1,1,1,1,-1,-1,-1,-1
// TODO: merge the ExecutionContext into the SessionContext.// Members that should be reused in the same session.,1,1,1,1,-1,-1,-1,-1
// TODO: null cannot be a constant argument at the moment. This test will make more sense// when that changes.,1,1,1,1,-1,-1,-1,-1
"// TODO: remove this line after CURATOR-645 is resolved// CURATOR-645 covers a bug in the LeaderLatch implementation that causes a race// condition if a child node, participating in the leader election, is removed too// fast. This results in a different code branch being executed which triggers a// reset of the LeaderLatch instead of re-collecting the children to determine the// next leader.// The issue occurs because LeaderLatch#checkLeadership is not executed// transactionally, i.e. retrieving the children and setting up the watcher for the// predecessor is not done atomically. This leads to the race condition where a// children (the previous leader's node) is removed before setting up the watcher// which results in an invalid handling of the situation using reset.// Adding some sleep here (simulating the leader actually doing something) will// reduce the risk of falling into the race condition because it will give the// concurrently running LeaderLatch instances more time to set up the watchers// properly.",1,1,1,1,-1,-1,-1,-1
"// TODO: support EXCHANGE PARTITION, RECOVER PARTITIONS// TODO: support (UN)ARCHIVE PARTITION",1,1,1,1,-1,-1,-1,-1
"// TODO: support RowData natively in Python, then we can eliminate the redundant// serialize/deserialize",1,1,1,1,-1,-1,-1,-1
"// TODO: support nested lookup keys in the future,// currently we only support top-level lookup keys",1,1,1,1,-1,-1,-1,-1
// TODO: support nested projection push down in transpose// add the used column RexInputRef and names into list,1,1,1,1,-1,-1,-1,-1
"// TODO: support this, need to create a func to create an array with fields within// the origin array?",1,1,1,1,-1,-1,-1,-1
"// TODO: the return type of TO_TIMESTAMP should be TIMESTAMP(9),// but we keep TIMESTAMP(3) now because we did not support TIMESTAMP(9) as time attribute.// See: https://issues.apache.org/jira/browse/FLINK-14925",1,1,1,1,-1,-1,-1,-1
"// TODO: there's a potential problem here if some table uses external schema like// Avro, with a very large type name. It seems like the view does not derive the// SerDe from the table, so it won't be able to just get the type from the// deserializer// like the table does; we won't be able to properly store the type in the RDBMS// metastore. Not sure if these large cols could be in resultSchema. Ignore this for// now",1,1,1,1,-1,-1,-1,-1
"// TODO: this error handling can be removed in future,// once we find a common way to handle OOM errors in netty threads.// Here we enrich it to propagate better OOM message to the receiver// if it happens in a netty thread.",1,1,1,1,-1,-1,-1,-1
// TODO: this is not an extensive test of updateBinaryRepresentation()// and should be extended!,1,1,1,1,-1,-1,-1,-1
"// TODO: this is not valid. Function names for built-in UDFs are specified in// FunctionRegistry, and only happen to match annotations. For user UDFs, the// name is what user specifies at creation time (annotation can be absent,// different, or duplicate some other function).",1,1,1,1,-1,-1,-1,-1
// TODO: use :latest again once// https://github.com/GoogleCloudPlatform/cloud-sdk-docker/issues/225 is resolved.,1,1,1,1,-1,-1,-1,-1
"// TODO: we could remember if it's unsupported and stop sending calls; although, it might// be a bad idea for HS2+standalone metastore that could be updated with support.// Maybe we should just remember this for some time.",1,1,1,1,-1,-1,-1,-1
"// TODO: we need a way to tell whether a function is built-in, for now just return false so that// the unparser will quote them",1,1,1,1,-1,-1,-1,-1
// TODO: we should consider how to calculate the splits according to minNumSplits in the// future.,1,1,1,1,-1,-1,-1,-1
"// TODO: when SELECT appears as a value sub-query, should be using// something other than unknownType for targetRowType",1,1,1,1,-1,-1,-1,-1
"// TODO: when stop with savepoint is available, replace this code with it (with stop// with savepoint// there won't be any pending transactions)",1,1,1,1,-1,-1,-1,-1
// The data types used in Derby are list at// http://db.apache.org/derby/docs/10.14/ref/crefsqlj31068.html// TODO: We can't convert BINARY data type to// PrimitiveArrayTypeInfo.BYTE_PRIMITIVE_ARRAY_TYPE_INFO in// LegacyTypeInfoDataTypeConverter.,1,1,1,1,-1,-1,-1,-1
// The data types used in Mysql are list at:// https://dev.mysql.com/doc/refman/8.0/en/data-types.html// TODO: We can't convert BINARY data type to// PrimitiveArrayTypeInfo.BYTE_PRIMITIVE_ARRAY_TYPE_INFO in// LegacyTypeInfoDataTypeConverter.,1,1,1,1,-1,-1,-1,-1
// The data types used in PostgreSQL are list at:// https://www.postgresql.org/docs/12/datatype.html// TODO: We can't convert BINARY data type to// PrimitiveArrayTypeInfo.BYTE_PRIMITIVE_ARRAY_TYPE_INFO in// LegacyTypeInfoDataTypeConverter.,1,1,1,1,-1,-1,-1,-1
// The following 2 lines are exactly what MySQL does TODO: why do we do// this?,1,1,1,1,-1,-1,-1,-1
// The generated sort is used for generating the comparator among partitions.// So here not care the ASC or DESC for the grouping fields.// TODO just replace comparator to equaliser,1,1,1,1,-1,-1,-1,-1
"// The notification might come from the same thread. For the initial writes this// might happen before the reader has set its reference to the view, because// creating the queue and the initial notification happen in the same method call.// This can be resolved by separating the creation of the view and allowing// notifications.// TODO This could potentially have a bad performance impact as in the// worst case (network consumes faster than the producer) each buffer// will trigger a separate event loop task being scheduled.",1,1,0,1,-1,-1,-1,-1
"// This is copied from PlannerTypeUtils in flink-table-runtime that we shouldn't depend on// TODO: remove this and use the original code when it's moved to accessible, dependable module",1,1,1,1,-1,-1,-1,-1
"// This is hackery, but having hive-common depend on standalone-metastore is really bad// because it will pull all of the metastore code into every module.  We need to check that// we aren't using the standalone metastore.  If we are, we should treat it the same as a// remote metastore situation.",1,1,1,1,-1,-1,-1,-1
"// This lock and closed flag are introduced to workaround KAFKA-6635. Because the bug is only// fixed in// Kafka 2.3.0, we need this workaround before Kafka dependency is bumped to 2.3.0 to avoid// deadlock// between a transaction committing / aborting thread and a producer closing thread.// TODO: remove the workaround after Kafka dependency is bumped to 2.3.0+",1,1,1,1,-1,-1,-1,-1
"// Two cases of timers here:// (1) future/now timers(processingTimestamp >= currentTimestamp): delay the firing of the// timer by 1 ms to align the semantics with watermark. A watermark T says we// won't see elements in the future with a timestamp smaller or equal to T. Without this// 1ms delay, if we had fired the timer for T at the timestamp T, it would be possible// that we would process another record for timestamp == T in the same millisecond, but// after the timer for the timsetamp T has already been fired.// (2) past timers(processingTimestamp < currentTimestamp): do not need to delay the firing// because currentTimestamp is larger than processingTimestamp pluses the 1ms offset.// TODO. The processing timers' performance can be further improved.// see FLINK-23690 and https://github.com/apache/flink/pull/16744",1,1,0,1,-1,-1,-1,-1
"// Use the current return type when creating a new call, for// operators with return type built into the operator// definition, and with no type inference rules, such as// cast function with less than 2 operands.// TODO: Comments in RexShuttle.visitCall() mention other// types in this category. Need to resolve those together// and preferably in the base class RexShuttle.",1,1,1,1,-1,-1,-1,-1
// Wait to allow input to end up in the output.// TODO Use count down latches instead as a cleaner solution,1,1,1,1,-1,-1,-1,-1
// We have a nested setcolref. Process that and start from scratch TODO: use// stack?,1,1,1,1,-1,-1,-1,-1
// both sides contain more than one value// TODO: Decide which side to spill and which to block!,1,1,1,1,-1,-1,-1,-1
// config Optimizer parameters// TODO use the default shuffle mode of batch runtime mode once FLINK-23470 is implemented,1,1,0,1,-1,-1,-1,-1
"// consume all remaining keys (hack to prevent remaining inputs during iterations, lets// get rid of this soon)",1,1,1,1,-1,-1,-1,-1
// csv currently is using Time.valueOf() to parse time string// TODO: FLINK-17525 support millisecond and nanosecond// get number of milliseconds of the day,1,1,1,1,-1,-1,-1,-1
"// currently, waiting for changelog availability is reported as busy// todo: add new metric (FLINK-24402)",1,1,1,1,-1,-1,-1,-1
"// disabling sampling for unsplittable files since the logic below assumes splitability.// TODO: Add sampling for unsplittable files. Right now, only compressed text files are// affected by this limitation.",1,1,1,1,-1,-1,-1,-1
"// end up here if its the first time access after execution for the// provided state name; check compatibility of restored state, if any// TODO with eager registration in place, these checks should be moved to restore()",1,1,1,1,-1,-1,-1,-1
// flatten AND// TODO: don't do this because older version UDF only supports 2 args,1,1,1,1,-1,-1,-1,-1
// flatten OR// TODO: don't do this because older version UDF only supports 2 args,1,1,1,1,-1,-1,-1,-1
// function call or not.// TODO: investigate whether this has impact on Flink streaming job with// windows,1,1,1,1,-1,-1,-1,-1
// generic hack: cast the writer to generic Object type so we can use it// with multiplexed records and watermarks,1,1,1,1,-1,-1,-1,-1
"// hash conflicts, the bucket is occupied by another key// TODO test Conflict resolution:// now:    +1 +1 +1... cache friendly but more conflict, so we set factor to 0.5// other1: +1 +2 +3... less conflict, factor can be 0.75// other2: Secondary hashCode... less and less conflict, but need compute hash again",1,1,1,1,-1,-1,-1,-1
"// indices of fields to be returned, with projection applied (if any)// TODO: push projection into underlying input format that supports it",1,1,1,1,-1,-1,-1,-1
"// must fail now if the previous typeSerializer cannot be restored because// there is no typeSerializer// capable of reading previous state// TODO when eager state registration is in place, we can try to get a// convert deserializer// TODO from the newly registered typeSerializer instead of simply failing// here",1,1,1,1,-1,-1,-1,-1
// need one more mail to unblock possible yield() in close() method (todo: wait with// timeout in yield),1,1,1,1,-1,-1,-1,-1
"// neither exists - that can be a sign of// - (1) a serious problem (file system loss of data)// - (2) a recovery of a savepoint that is some time old and the users// removed the files in the meantime.// TODO how to handle this?// We probably need an option for users whether this should log,// or result in an exception or unrecoverable exception",1,1,1,1,-1,-1,-1,-1
"// only accept StreamTableSource and LookupableTableSource here// TODO should add a validation, while StreamTableSource is in flink-table-api-java-bridge// module now",1,1,1,1,-1,-1,-1,-1
"// only support precisions for DECIMAL, TIMESTAMP_WITHOUT_TIME_ZONE,// TIMESTAMP_WITH_LOCAL_TIME_ZONE// still consider precision for others (e.g. TIME).// TODO: add other precision types here in the future",1,1,1,1,-1,-1,-1,-1
// other operators or functions// TODO: should check SqlOperator first and ideally shouldn't be using// ExprNodeGenericFuncDesc at all,1,1,1,1,-1,-1,-1,-1
// reset the default based current row// NOTE: Special methods customized for LeadLagAggFunction.// TODO refactor it.,1,1,1,1,-1,-1,-1,-1
// set r.convertedParameters// TODO: type conversion,1,1,0,1,-1,-1,-1,-1
// the permission of the target file will be set to be the same as the// symlink// TODO: support setting the permission without following links,1,1,1,1,-1,-1,-1,-1
// this is a bit verbose because we're manually handling input1 and input2// TODO: extract method,1,1,1,1,-1,-1,-1,-1
// this replaces the effective serializer by a LongSerializer// it is a hacky but efficient solution to keep the object creation overhead low but still// be compatible with the corresponding SqlTimestampTypeInfo,1,1,1,1,-1,-1,-1,-1
// todo here we were seeing this problem:// https://github.com/netty/netty/issues/4357 if we do a get().// this is why we now simply wait a bit so that everything is// shut down and then we check,1,1,1,1,-1,-1,-1,-1
// todo: add StateChangelogWriter.append() version without a keygroup// when all callers and implementers are merged (FLINK-21356 or later),1,1,1,1,-1,-1,-1,-1
// todo: consider using CheckpointStreamFactory / CheckpointStorageWorkerView// Considerations:// 0. need for checkpointId in the current API to resolve the location// option a: pass checkpointId (race condition?)// option b: pass location (race condition?)// option c: add FsCheckpointStorageAccess.createSharedStateStream// 1. different settings for materialized/changelog (e.g. timeouts)// 2. re-use closeAndGetHandle// 3. re-use in-memory handles (.metadata)// 4. handle in-memory handles duplication,1,1,1,1,-1,-1,-1,-1
// todo: enable check in FLINK-23035// Preconditions.checkArgument(keyGroup >= 0);,1,1,1,1,-1,-1,-1,-1
// todo: support state migration (in FLINK-23143)// This method is currently called both on recovery and on user access.// So keyValueStatesByName may contain an entry for user-requested state which will// prevent state migration (in contrast to other backends).,1,1,1,1,-1,-1,-1,-1
"// unsupported case1. (NOT) EXISTS with uncorrelation// e.g. SELECT * FROM x, y WHERE x.c = y.f AND EXISTS (SELECT * FROM z)// SemiJoin may be push to both Join's left and Join's right.// TODO currently we does not handle this",1,1,1,1,-1,-1,-1,-1
"// users should not be able to actually close the stream, it is closed by the system.// TODO if we want to support async writes, this call could trigger a callback to the// snapshot context that a handle is available.",1,1,1,1,-1,-1,-1,-1
// we cannot check the job leader id so let's fail// TODO: Maybe it's also ok to skip this check in case that we cannot check the leader// id,1,1,1,1,-1,-1,-1,-1
// we don't delete existing timer since it may delete timer for data processing// TODO Use timer with namespace to distinguish timers,1,1,1,1,-1,-1,-1,-1
"// we have to copy input field// TODO: copy is not need when state backend is rocksdb,// improve this in future// TODO: but other operators do not copy this input field.....",1,1,1,1,-1,-1,-1,-1
// we have to skip the first byte indicating null user value// TODO: optimization here could be to work with slices and not byte arrays// and copy slice sub-array only when needed,1,1,1,1,-1,-1,-1,-1
"// we need to to this in the constructor, i.e. in the synchronous part of the snapshot// TODO: better yet, we can do it outside the constructor",1,1,1,1,-1,-1,-1,-1
// write job graph to tmp file and add it to local resource// TODO: server use user main method to generate job graph,1,1,1,1,-1,-1,-1,-1
// write the k/v-state// TODO this could be aware of keyGroupPrefixBytes and write only one// byte if possible,1,1,1,1,-1,-1,-1,-1
// write the kev-state// TODO this could be aware of keyGroupPrefixBytes and write only one// byte if possible,1,1,1,1,-1,-1,-1,-1
/*                 * TODO(cpovirk): it would be nice to create an input Map and use                 * the copy constructor here and in the other tests                 */,1,1,1,1,-1,-1,-1,-1
"/*               * requireNonNull is safe because we've initialized these if               * !GENERATE_CANCELLATION_CAUSES.               *               * TODO(cpovirk): Maybe it would be cleaner to define a CancellationSupplier interface               * with two implementations, one that contains causeless Cancellation instances and               * the other of which creates new Cancellation instances each time it's called? Yet               * another alternative is to fill in a non-null value for each of the fields no matter               * what and to just not use it if !GENERATE_CANCELLATION_CAUSES.               */",1,1,1,1,-1,-1,-1,-1
"/*             * StandardDescendingMap uses lowerEntry(), and TreeMap.lowerEntry() deliberately             * produces immutable entries.             *             * TODO(cpovirk): Consider making StandardDescendingMap return a ForwardingEntry that             * supports setValue().             */",1,1,1,1,-1,-1,-1,-1
/*             * TODO(cpovirk): Replace these two statements with one (`N element =             * requireNonNull(top.next())`) once our checker supports it.             *             * (The problem is likely             * https://github.com/jspecify/nullness-checker-for-checker-framework/blob/61aafa4ae52594830cfc2d61c8b113009dbdb045/src/main/java/com/google/jspecify/nullness/NullSpecAnnotatedTypeFactory.java#L896)             */,1,1,1,1,-1,-1,-1,-1
"/*             * requireNonNull is safe because we read and write `delegate` under synchronization.             *             * TODO(cpovirk): To avoid having to check for null, replace `delegate` with a singleton             * `Supplier` that always throws an exception.             */",1,1,1,1,-1,-1,-1,-1
"/*           * TODO(cpovirk): can we just ""return;"" here? Or, can we remove this if() entirely? If           * not, add tests to demonstrate the problem with each approach           */",1,1,1,1,-1,-1,-1,-1
"/*         * The cast is safe because onlyOnRight contains all the keys of right.         *         * TODO(cpovirk): Consider checking onlyOnRight.containsKey instead of right.containsKey.         * That could change behavior if the input maps use different equivalence relations (and so         * a key that appears once in `right` might appear multiple times in `left`). We don't         * guarantee behavior in that case, anyway, and the current behavior is likely undesirable.         * So that's either a reason to feel free to change it or a reason to not bother thinking         * further about this.         */",1,1,1,1,-1,-1,-1,-1
"/*         * requireNonNull is generally safe: If cancel succeeded, then this Future was still         * pending, so its `state` field hasn't been nulled out yet.         *         * OK, it's technically possible for this to fail in the presence of unsafe publishing, as         * discussed in the comments in TimeoutFuture. TODO(cpovirk): Maybe check for null before         * calling recordOutputCancellation?         */",1,1,1,1,-1,-1,-1,-1
"/*       * Static final fields are presumed to be fastest, based on our experience with       * UnsignedBytesBenchmark. TODO(cpovirk): benchmark this       */",1,1,1,1,-1,-1,-1,-1
"/*       * TODO(benyu): should we include Object for interface? Also, CharSequence[] and Object[] for       * String[]?       *       */",1,1,1,1,-1,-1,-1,-1
"/*       * TODO(cpovirk): Consider removing @CheckForNull here, as we've done with the other methods'       * errorMessageTemplate parameters: It it unlikely that callers intend for their string       * template to be null (though we do handle that case gracefully at runtime). I've left this       * one as it is because one of our users has defined a wrapper API around Preconditions,       * declaring a checkState method that accepts a possibly null template. So we'd need to update       * that user first.       */",1,1,1,1,-1,-1,-1,-1
"/*       * TODO(cpovirk): Do we really want to log this if we called setException(throwable) and it       * returned true? This was intentional (CL 46470009), but it seems odd compared to how we       * normally handle Error.       *       * Similarly, do we really want to log the same Error more than once?       */",1,1,1,1,-1,-1,-1,-1
"/*       * TODO(cpovirk): This is a bit stronger than super.expectMissing(), which permits a <key,       * someOtherValue> pair.       */",1,1,1,1,-1,-1,-1,-1
"/*       * TODO(cpovirk): consider no longer running these equivalent() tests on every Equivalence,       * since the Equivalence base type now implements this logic itself       */",1,1,1,1,-1,-1,-1,-1
"/*       * TODO: Iterate over many array sizes and all possible operation lists,       * performing adds and removes in different ways.       */",1,1,1,1,-1,-1,-1,-1
"/*       * TODO: When given an ImmutableList that's a sublist, copy the referenced       * portion of the array into a new array to save space?       */",1,1,1,1,-1,-1,-1,-1
"/*       * The future no longer needs to interrupt this task, so it no longer needs a reference to it.       *       * TODO(cpovirk): It might be nice for our InterruptibleTask subclasses to null out their       *  `callable` fields automatically. That would make it less important for us to null out the       * reference to `task` here (though it's still nice to do so in case our reference to the       * executor keeps it alive). Ideally, nulling out `callable` would be the responsibility of       * InterruptibleTask itself so that its other subclasses also benefit. (Handling `callable` in       * InterruptibleTask itself might also eliminate some of the existing boilerplate for, e.g.,       * pendingToString().)       */",1,1,1,1,-1,-1,-1,-1
"/*       * We'll call the user callback or collect the values only when all inputs complete,       * regardless of whether some failed. This lets us avoid calling expensive methods like       * Future.get() when we don't need to (specifically, for whenAllComplete().call*()), and it       * lets all futures share the same listener.       *       * We store `localFutures` inside the listener because `this.futures` might be nulled out by       * the time the listener runs for the final future -- at which point we need to check all       * inputs for exceptions *if* we're collecting values. If we're not, then the listener doesn't       * need access to the futures again, so we can just pass `null`.       *       * TODO(b/112550045): Allocating a single, cheaper listener is (I think) only an optimization.       * If we make some other optimizations, this one will no longer be necessary. The optimization       * could actually hurt in some cases, as it forces us to keep all inputs in memory until the       * final input completes.       */",1,1,0,1,-1,-1,-1,-1
"/*       * requireNonNull is safe because the key came from propertyNames...       *       * ...except that it's possible for users to insert a string key with a non-string value, and       * in that case, getProperty *will* return null.       *       * TODO(b/192002623): Handle that case: Either:       *       * - Skip non-string keys and values entirely, as proposed in the linked bug.       *       * - Throw ClassCastException instead of NullPointerException, as documented in the current       *   Javadoc. (Note that we can't necessarily ""just"" change our call to `getProperty` to `get`       *   because `get` does not consult the default properties.)       */",1,1,1,1,-1,-1,-1,-1
"/*       * requireNonNull is safe because:       *       * - This is a TrustedFuture, so tryInternalFastPathGetFailure will in fact return the failure       *   cause if this Future has failed.       *       * - And this future *has* failed: This method is called only from handleException (through       *   getOrInitSeenExceptions). handleException tried to call setException and failed, so       *   either this Future was cancelled (which we ruled out with the isCancelled check above),       *   or it had already failed. (It couldn't have completed *successfully* or even had       *   setFuture called on it: Neither of those can happen until we've finished processing all       *   the completed inputs. And we're still processing at least one input, the one that       *   triggered handleException.)       *       * TODO(cpovirk): Think about whether we could/should use Verify to check the return value of       * addCausalChain.       */",1,1,0,1,-1,-1,-1,-1
"/*     * Adapted from Hacker's Delight, Figure 11-1.     *     * Using DoubleUtils.bigToDouble, getting a double approximation of x is extremely fast, and     * then we can get a double approximation of the square root. Then, we iteratively improve this     * guess with an application of Newton's method, which sets guess := (guess + (x / guess)) / 2.     * This iteration has the following two properties:     *     * a) every iteration (except potentially the first) has guess >= floor(sqrt(x)). This is     * because guess' is the arithmetic mean of guess and x / guess, sqrt(x) is the geometric mean,     * and the arithmetic mean is always higher than the geometric mean.     *     * b) this iteration converges to floor(sqrt(x)). In fact, the number of correct digits doubles     * with each iteration, so this algorithm takes O(log(digits)) iterations.     *     * We start out with a double-precision approximation, which may be higher or lower than the     * true value. Therefore, we perform at least one Newton iteration to get a guess that's     * definitely >= floor(sqrt(x)), and then continue the iteration until we reach a fixed point.     */",1,1,0,1,-1,-1,-1,-1
"/*     * Based on Hacker's Delight Fig. 11-5, the two-table-lookup, branch-free implementation.     *     * The key idea is that based on the number of leading zeros (equivalently, floor(log2(x))), we     * can narrow the possible floor(log10(x)) values to two. For example, if floor(log2(x)) is 6,     * then 64 <= x < 128, so floor(log10(x)) is either 1 or 2.     */",1,1,0,1,-1,-1,-1,-1
"/*     * TODO(cpovirk): Clear interrupt status here? We currently don't, which means that an interrupt     * before, during, or after runInterruptibly() (unless it produced an InterruptedException     * caught above) can linger and affect listeners.     */",1,1,1,1,-1,-1,-1,-1
/*     * TODO(cpovirk): Consider optimizing iterator() to catch IOOBE instead of doing bounds checks.     *     * TODO(cpovirk): Consider the UnsignedBytes pattern if it performs faster and doesn't cause     * AOSP grief.     */,1,1,1,1,-1,-1,-1,-1
"/*     * TODO(cpovirk): Should whenAllComplete().call*() log errors, too? Currently, it doesn't call     * handleException() at all.     */",1,1,1,1,-1,-1,-1,-1
"/*     * TODO(cpovirk): Why couldn't I get this to work with PermissionCollection and implies(), as     * used by ClassPathTest?     */",1,1,1,1,-1,-1,-1,-1
"/*     * TODO(cpovirk): `return (V) removedValue` once our checker permits that.     *     * (We promoted a class of warnings into errors because sometimes they indicate real problems.     * But now we need to ""undo"" some instance of spurious errors, as discussed in     * https://github.com/jspecify/checker-framework/issues/8.)     */",1,1,1,1,-1,-1,-1,-1
"/*     * TODO(cpovirk): move ForwardingTestCase somewhere common, and use it to     * test the forwarded methods     */",1,1,1,1,-1,-1,-1,-1
/*     * TODO(cpovirk): the Map tests duplicate most of this effort by using a     * CollectionTestSuiteBuilder on values(). It would be nice to avoid that     */,1,1,1,1,-1,-1,-1,-1
/*     * TODO(fry): Consider copying variables (like evictsBySize) from outer class into this class.     * It will require more memory but will reduce indirection.     */,1,1,1,1,-1,-1,-1,-1
"/*     * TODO(jlevy): Support only one of rowKey / columnKey being empty? If we     * do, when columnKeys is empty but rowKeys isn't, rowKeyList() can contain     * elements but rowKeySet() will be empty and containsRow() won't     * acknowledge them.     */",1,1,1,1,-1,-1,-1,-1
"/*     * TODO(kevinb): If we strongly reference the value and aren't loading, we needn't wrap the     * value. This could save ~8 bytes per entry.     */",1,1,1,1,-1,-1,-1,-1
"/*     * TODO(kevinb): consider whether this ""optimization"" is worthwhile. Users with SortedSets tend     * to know they are SortedSets and probably would not call this method.     */",1,1,1,1,-1,-1,-1,-1
"/*     * TODO(kevinb): when the dust settles, see if we still need this or can     * just default to DEFAULT_CAPACITY.     */",1,1,1,1,-1,-1,-1,-1
/*     * TODO(lowasser): consider checking for ImmutableAsList here     * TODO(lowasser): consider checking for Multiset here     */,0,1,1,1,-1,-1,-1,-1
"/*     * TODO(user): Put a warning in the javadoc about tiny fpp values, since the resulting size     * is proportional to -log(p), but there is not much of a point after all, e.g.     * optimalM(1000, 0.0000000000000001) = 76680 which is less than 10kb. Who cares!     */",1,1,1,1,-1,-1,-1,-1
"/*     * The entrySet() of ConcurrentHashMap, unlike that of other Map     * implementations, supports add() under JDK8. This seems problematic, but I     * didn't see that discussed in the review, which included many other     * changes: http://goo.gl/okTTdr     *     * TODO(cpovirk): decide what the best long-term action here is: force users     * to suppress (as we do now), stop testing entrySet().add() at all, make     * entrySet().add() tests tolerant of either behavior, introduce a map     * feature for entrySet() that supports add(), or something else     */",1,1,1,1,-1,-1,-1,-1
"/*     * We always hold the mutex when calling this. TODO(cpovirk): Is that important? Perhaps we need     * to guarantee that each call to reserveEarliestAvailable, etc. sees a value >= the previous?     * Also, is it OK that we don't hold the mutex when sleeping?     */",1,1,1,1,-1,-1,-1,-1
"/*   * LegacyConverter violates the contract of Converter by allowing its doForward and doBackward   * methods to accept null. We could avoid having unchecked casts in Converter.java itself if we   * could perform a cast to LegacyConverter, but we can't because it's an internal-only class.   *   * TODO(cpovirk): So make it part of the open-source build, albeit package-private there?   *   * So we use uncheckedCastNullableTToT here. This is a weird usage of that method: The method is   * documented as being for use with type parameters that have parametric nullness. But Converter's   * type parameters do not. Still, we use it here so that we can suppress a warning at a smaller   * level than the whole method but without performing a runtime null check. That way, we can still   * pass null inputs to LegacyConverter, and it can violate the contract of Converter.   *   * TODO(cpovirk): Could this be simplified if we modified implementations of LegacyConverter to   * override methods (probably called ""unsafeDoForward"" and ""unsafeDoBackward"") with the same   * signatures as the methods below, rather than overriding the same doForward and doBackward   * methods as implementations of normal converters do?   *   * But no matter what we do, it's worth remembering that the resulting code is going to be unsound   * in the presence of LegacyConverter, at least in the case of users who view the converter as a   * Function<A, B> or who call convertAll (and for any checkers that apply @PolyNull-like semantics   * to Converter.convert). So maybe we don't want to think too hard about how to prevent our   * checkers from issuing errors related to LegacyConverter, since it turns out that   * LegacyConverter does violate the assumptions we make elsewhere.   */",1,1,1,1,-1,-1,-1,-1
"/*   * TODO(cpovirk): Change to Comparator<? super B> to permit Comparator<@Nullable ...> and   * Comparator<SupertypeOfB>? What we have here matches the immutable collections, but those also   * expose a public Builder constructor that accepts ""? super."" So maybe we should do *that*   * instead.   */",1,1,1,1,-1,-1,-1,-1
/*   * TODO(cpovirk): Is there any way for us to support TypeParameter instances for type parameters   * that have nullable bounds? See discussion on the other overload of this method.   */,1,1,1,1,-1,-1,-1,-1
"/*   * TODO(cpovirk): Is there any way for us to support TypeParameter instances for type parameters   * that have nullable bounds? Unfortunately, if we change the parameter to TypeParameter<? extends   * @Nullable X>, then users might pass a TypeParameter<Y>, where Y is a subtype of X, while still   * passing a TypeToken<X>. This would be invalid. Maybe we could accept a TypeParameter<@PolyNull   * X> if we support such a thing? It would be weird or misleading for users to be able to pass   * `new TypeParameter<@Nullable T>() {}` and have it act as a plain `TypeParameter<T>`, but   * hopefully no one would do that, anyway. See also the comment on TypeParameter itself.   *   * TODO(cpovirk): Elaborate on this / merge with other comment?   */",1,1,1,1,-1,-1,-1,-1
"/*   * TODO(cpovirk): It would be great to run all these tests (including class unloading) in an   * environment that forces Futures.getChecked to its fallback WeakSetValidator. One awful way of   * doing so would be to derive a separate test library by using remove_from_jar to strip out   * ClassValueValidator.   *   * Fortunately, we get pretty good coverage ""by accident"": We run all these tests against the   * *backport*, where ClassValueValidator is not present.   */",1,1,1,1,-1,-1,-1,-1
"/*   * TODO(cpovirk): These docs sometimes say ""map"" and sometimes say ""range map."" Pick one, or at   * least decide on a policy for when to use which.   */",1,1,1,1,-1,-1,-1,-1
"/*   * TODO(cpovirk): Use FutureSubject once it's part of core Truth. But be wary of using it when I'm   * really testing a Future implementation (e.g., in the case of immediate*Future()). But it's OK   * to use in the case of the majority of Futures that are AbstractFutures.   */",1,1,1,1,-1,-1,-1,-1
"/*   * TODO(cpovirk): consider higher-level APIs here (say, assertNoRecordsLogged(),   * getOnlyRecordLogged(), getAndClearLogRecords()...)   *   * TODO(cpovirk): consider renaming this method to reflect that it takes a snapshot (and/or return   * an ImmutableList)   */",1,1,1,1,-1,-1,-1,-1
/*   * TODO(cpovirk): eliminate duplication between these tests and those in LegacyMapMakerTests and   * anywhere else   */,1,1,1,1,-1,-1,-1,-1
"/*   * TODO(cpovirk): if we start to override indexOf/lastIndexOf under GWT, we'll want some way to   * override subList to return an ImmutableSortedAsList for better performance. Right now, I'm not   * sure there's any performance hit from our failure to override subListUnchecked under GWT   */",1,1,1,1,-1,-1,-1,-1
"/*   * TODO(cpovirk): make ""too small"" and ""too large"" elements available for better navigation   * testing. At that point, we may be able to eliminate the ""hole"" tests, which would mean that   * ContiguousSet's tests would no longer need to suppress them.   */",1,1,1,1,-1,-1,-1,-1
/*   * TODO(cpovirk): maybe pass around TestFuture instances instead of   * ListenableFuture instances   */,1,1,1,1,-1,-1,-1,-1
/*   * TODO(cpovirk): more testing of subSet/headSet/tailSet/descendingSet? and/or generate derived   * suites?   */,1,1,1,1,-1,-1,-1,-1
/*   * TODO(cpovirk): move this to c.g.c.testing if we allow for c.g.c.annotations dependencies so   * that it can be GWTified?   */,1,1,1,1,-1,-1,-1,-1
"/*   * TODO(cpovirk): or we could make HOLES_FORBIDDEN a feature. Or we could declare that   * implementations are permitted to throw IAE if a hole is requested, and we could update   * test*Hole to permit IAE. (But might this ignore genuine bugs?) But see the TODO above   * testLower, which could make this all unnecessary   */",1,1,1,1,-1,-1,-1,-1
"/*   * TODO(cpovirk): remove and removeExactly currently accept null inputs only   * if occurrences == 0. This satisfies both NullPointerTester and   * CollectionRemoveTester.testRemove_nullAllowed, but it's not clear that it's   * a good policy, especially because, in order for the test to pass, the   * parameter must be misleadingly annotated as @Nullable. I suspect that   * we'll want to remove @Nullable, add an eager checkNotNull, and loosen up   * testRemove_nullAllowed.   */",1,1,1,1,-1,-1,-1,-1
"/*   * TODO(cpovirk): surely we can find a less ugly solution than a class that accepts 3 parameters,   * exposes as many getters, does work in the constructor, and has both a superclass and a subclass   */",1,1,1,1,-1,-1,-1,-1
"/*   * TODO(jlevy): Add factory methods taking an Enum class, instead of an   * iterable, to specify the allowed row keys and/or column keys. Note that   * custom serialization logic is needed to support different enum sizes during   * serialization and deserialization.   */",1,1,1,1,-1,-1,-1,-1
"/*   * TODO(jlevy): Consider adding headTable, tailTable, and subTable methods,   * which return a Table view with rows keys in a given range. Create a   * RowSortedTable subinterface with the revised methods?   */",1,1,1,1,-1,-1,-1,-1
"/*   * TODO(jlevy): Consider creating a merge() method, similar to putAll() but   * copying non-null values only.   */",1,1,1,1,-1,-1,-1,-1
"/*   * TODO(jlevy): Decide whether entrySet() should return entries with an equals() method that   * calls the comparator to compare the two keys. If that change is made,   * AbstractMultiset.equals() can simply check whether two multisets have equal entry sets.   */",1,1,1,1,-1,-1,-1,-1
/*   * TODO(kevinb): Confirm that ImmutableSortedMap is faster to construct and   * uses less memory than TreeMap; then say so in the class Javadoc.   */,1,1,1,1,-1,-1,-1,-1
"/*   * TODO(kevinb): evaluate the trade-offs of going bimorphic to save these two fields from most   * instances. Note that the instances that would get smaller are the right set to care about   * optimizing, because the rest have the option of calling `trimmed`.   */",1,1,1,1,-1,-1,-1,-1
"/*   * TODO(kevinb): should we copy this javadoc to each concrete class, so that   * classes like LinkedHashMultimap that need to say something different are   * still able to {@inheritDoc} all the way from Multimap?   */",1,1,1,1,-1,-1,-1,-1
/*   * TODO(lowasser): figure out if we can convert this to a concurrent AtomicReference-based   * collector without breaking j2cl?   */,1,1,1,1,-1,-1,-1,-1
"/*   * TODO(user): FutureChecker interface for these to be static methods on? If so, refer to it in   * the (static-method) Futures.getChecked documentation   */",1,1,1,1,-1,-1,-1,-1
"/*   * TODO: Make this a drop-in replacement for j.u. versions, actually drop them in, and test the   * world. Figure out what sort of space-time tradeoff we're actually going to get here with the   * *Map variants. This class is particularly hard to benchmark, because the benefit is not only in   * less allocation, but also having the GC do less work to scan the heap because of fewer   * references, which is particularly hard to quantify.   */",1,1,1,1,-1,-1,-1,-1
"/*   * TODO: add VERY_LARGE, noting that we currently assume that the fourth   * sample element is not in any collection   */",1,1,1,1,-1,-1,-1,-1
"/*   * TODO: consider adding MultisetFeatures.SUPPORTS_SET_COUNT. Currently we   * assume that using setCount() to increase the count is permitted iff add()   * is permitted and similarly for decrease/remove(). We assume that a   * setCount() no-op is permitted if either add() or remove() is permitted,   * though we also allow it to ""succeed"" if neither is permitted.   */",1,1,1,1,-1,-1,-1,-1
"/*   * TODO: if we're testing a list, we could check indexOf(). (Doing it in   * AbstractListTester isn't enough because many tests that run on lists don't   * extends AbstractListTester.) We could also iterate over all elements to   * verify absence   */",1,1,1,1,-1,-1,-1,-1
"/*   * TODO: improve this and other implementations and move out of this framework   * for wider use   *   * TODO: could we incorporate the overriding logic from AbstractListTester, by   * examining whether the features include KNOWN_ORDER?   */",1,1,1,1,-1,-1,-1,-1
"/*   * TODO: perform all List tests on subList(), but beware infinite recursion   */",1,1,1,1,-1,-1,-1,-1
/*   * TODO: test that unmodifiable multisets either throw UOE or return false   * when both are valid options. Currently we test the UOE cases and the   * return-false cases but not their intersection   */,1,1,1,1,-1,-1,-1,-1
"/*   * This test hangs (or maybe is just *very* slow) under Android.   *   * TODO(b/218700094): Ideally, get this to pass under Android. Failing that, convince ourselves   * that the test isn't exposing a real problem with InterruptibleTask, one that could matter in   * prod.   */",1,1,1,1,-1,-1,-1,-1
"/*   * Under Android, MyError propagates up and fails the test?   *   * TODO(b/218700094): Does this matter to prod users, or is it just a feature of our testing   * environment? If the latter, maybe write a custom Executor that avoids failing the test when it   * sees an Error?   */",1,1,1,1,-1,-1,-1,-1
"/* * A nullable bound would let users create a TypeParameter instance for a parameter with a nullable * bound. However, it would also let them create `new TypeParameter<@Nullable T>() {}`, which * wouldn't behave as users might expect. Additionally, it's not clear how the TypeToken API could * support even a ""normal"" `TypeParameter<T>` when `<T>` has a nullable bound. (See the discussion * on TypeToken.where.) So, in the interest of failing fast and encouraging the user to switch to a * non-null bound if possible, let's require a non-null bound here. * * TODO(cpovirk): Elaborate on ""wouldn't behave as users might expect."" */",1,1,0,1,-1,-1,-1,-1
"/* * Some of the annotations below were added after we released our separate * com.google.guava:listenablefuture:1.0 artifact. (For more on that artifact, see * https://github.com/google/guava/releases/tag/v27.0) This means that the copy of ListenableFuture * in com.google.guava:guava differs from the ""frozen"" copy in the listenablefuture artifact. This * could in principle cause problems for some users. Still, we expect that the benefits of the * nullness annotations in particular will outweigh the costs. (And it's worth noting that we have * released multiple ListenableFuture.class files that are not byte-for-byte compatible even from * the beginning, thanks to using different `-source -target` values for compiling our `-jre` and * `-android` ""flavors."") * * (We could consider releasing a listenablefuture:1.0.1 someday. But we would want to look into how * that affects users, especially users of the Android Gradle Plugin, since the plugin developers * put in a special hack for us: https://issuetracker.google.com/issues/131431257) */",1,1,0,1,-1,-1,-1,-1
/* * TODO(cpovirk): consider renaming this class in light of our now running it * under JDK7 */,1,1,1,1,-1,-1,-1,-1
/* TODO: verify that the Collection is also synchronized? */,1,1,1,1,-1,-1,-1,-1
/* TODO: verify that the Map is also synchronized? */,1,1,1,1,-1,-1,-1,-1
/* TODO: verify that the Set is also synchronized? */,1,1,1,1,-1,-1,-1,-1
"/** * A class for arithmetic on values of type {@code BigInteger}. * * <p>The implementations of many methods in this class are based on material from Henry S. Warren, * Jr.'s <i>Hacker's Delight</i>, (Addison Wesley, 2002). * * <p>Similar functionality for {@code int} and for {@code long} can be found in {@link IntMath} and * {@link LongMath} respectively. * * @author Louis Wasserman * @since 11.0 */",1,0,1,1,-1,-1,-1,-1
"/** * A dummy superclass to support GWT serialization of the element type of a {@link Range}. The GWT * supersource for this class contains a field of type {@code C}. * * <p>For details about this hack, see {@code GwtSerializationDependencies}, which takes the same * approach but with a subclass rather than a superclass. * * <p>TODO(cpovirk): Consider applying this subclass approach to our other types. */",1,1,1,1,-1,-1,-1,-1
"/** * A dummy superclass to support GWT serialization of the element type of an {@link * ImmutableMultiset}. The GWT supersource for this class contains a field of type {@code E}. * * <p>For details about this hack, see {@code GwtSerializationDependencies}, which takes the same * approach but with a subclass rather than a superclass. * * <p>TODO(cpovirk): Consider applying this subclass approach to our other types. * * <p>For {@code ImmutableMultiset} in particular, I ran into a problem with the {@code * GwtSerializationDependencies} approach: When autogenerating a serializer for the new class, GWT * tries to refer to our dummy serializer for the superclass, * ImmutableMultiset_CustomFieldSerializer. But that type has no methods (since it's never actually * used). We could probably fix the problem by adding dummy methods to that class, but that is * starting to sound harder than taking the superclass approach, which I've been coming to like, * anyway, since it doesn't require us to declare dummy methods (though occasionally constructors) * and make types non-final. */",1,1,1,1,-1,-1,-1,-1
"/** * A dummy superclass to support GWT serialization of the element types of a {@link * LinkedHashMultimap}. The GWT supersource for this class contains a field for each type. * * <p>For details about this hack, see {@code GwtSerializationDependencies}, which takes the same * approach but with a subclass rather than a superclass. * * <p>TODO(cpovirk): Consider applying this subclass approach to our other types. */",1,1,1,1,-1,-1,-1,-1
"/** * A dummy superclass to support GWT serialization of the element types of a {@link HashMultimap}. * The GWT supersource for this class contains a field for each type. * * <p>For details about this hack, see {@code GwtSerializationDependencies}, which takes the same * approach but with a subclass rather than a superclass. * * <p>TODO(cpovirk): Consider applying this subclass approach to our other types. */",1,1,1,1,-1,-1,-1,-1
"/** * A dummy superclass to support GWT serialization of the element types of an {@link * ArrayListMultimap}. The GWT supersource for this class contains a field for each type. * * <p>For details about this hack, see {@code GwtSerializationDependencies}, which takes the same * approach but with a subclass rather than a superclass. * * <p>TODO(cpovirk): Consider applying this subclass approach to our other types. */",1,1,1,1,-1,-1,-1,-1
"/** * Abstract base class for testing implementations of {@link Graph} interface. Graph instances * created for testing should have Integer node and String edge objects. * * <p>Test cases that should be handled similarly in any graph implementation are included in this * class. For example, testing that {@code nodes()} method returns the set of the nodes in the * graph. The following test cases are left for the subclasses to handle: * * <ul> *   <li>Test cases related to whether the graph is directed or undirected. *   <li>Test cases related to the specific implementation of the {@link Graph} interface. * </ul> * * TODO(user): Make this class generic (using <N, E>) for all node and edge types. * TODO(user): Differentiate between directed and undirected edge strings. */",1,1,0,1,-1,-1,-1,-1
"/** * Abstract base class for testing implementations of {@link Network} interface. Network instances * created for testing should have Integer node and String edge objects. * * <p>Test cases that should be handled similarly in any graph implementation are included in this * class. For example, testing that {@code nodes()} method returns the set of the nodes in the * graph. The following test cases are left for the subclasses to handle: * * <ul> *   <li>Test cases related to whether the graph is directed, undirected, mutable, or immutable. *   <li>Test cases related to the specific implementation of the {@link Network} interface. * </ul> * * TODO(user): Make this class generic (using <N, E>) for all node and edge types. * TODO(user): Differentiate between directed and undirected edge strings. */",1,1,0,1,-1,-1,-1,-1
"/** * All of the infrastructure of split and splitToString is identical, so we do one test of * splitToString. All other cases should be covered by testing of split. * * <p>TODO(user): It would be good to make all the relevant tests run on both split and * splitToString automatically. */",1,0,1,1,-1,-1,-1,-1
/** * An immutable sorted set with one or more elements. TODO(jlevy): Consider separate class for a * single-element sorted set. * * @author Jared Levy * @author Louis Wasserman */,1,1,1,1,-1,-1,-1,-1
"/** * An immutable well-formed internet domain name, such as {@code com} or {@code foo.co.uk}. Only * syntactic analysis is performed; no DNS lookups or other network interactions take place. Thus * there is no guarantee that the domain actually exists on the internet. * * <p>One common use of this class is to determine whether a given string is likely to represent an * addressable domain on the web -- that is, for a candidate string {@code ""xxx""}, might browsing to * {@code ""http://xxx/""} result in a webpage being displayed? In the past, this test was frequently * done by determining whether the domain ended with a {@linkplain #isPublicSuffix() public suffix} * but was not itself a public suffix. However, this test is no longer accurate. There are many * domains which are both public suffixes and addressable as hosts; {@code ""uk.com""} is one example. * Using the subset of public suffixes that are {@linkplain #isRegistrySuffix() registry suffixes}, * one can get a better result, as only a few registry suffixes are addressable. However, the most * useful test to determine if a domain is a plausible web host is {@link #hasPublicSuffix()}. This * will return {@code true} for many domains which (currently) are not hosts, such as {@code ""com""}, * but given that any public suffix may become a host without warning, it is better to err on the * side of permissiveness and thus avoid spurious rejection of valid sites. Of course, to actually * determine addressability of any host, clients of this class will need to perform their own DNS * lookups. * * <p>During construction, names are normalized in two ways: * * <ol> *   <li>ASCII uppercase characters are converted to lowercase. *   <li>Unicode dot separators other than the ASCII period ({@code '.'}) are converted to the ASCII *       period. * </ol> * * <p>The normalized values will be returned from {@link #toString()} and {@link #parts()}, and will * be reflected in the result of {@link #equals(Object)}. * * <p><a href=""http://en.wikipedia.org/wiki/Internationalized_domain_name"">Internationalized domain * names</a> such as {@code 网络.cn} are supported, as are the equivalent <a * href=""http://en.wikipedia.org/wiki/Internationalized_domain_name"">IDNA Punycode-encoded</a> * versions. * * @author Catherine Berry * @since 5.0 */",1,1,0,1,-1,-1,-1,-1
/** * Base class for map testers. * * <p>TODO: see how much of this is actually needed once Map testers are written. (It was cloned * from AbstractCollectionTester.) * * @param <K> the key type of the map to be tested. * @param <V> the value type of the map to be tested. * @author George van den Driessche */,1,1,1,1,-1,-1,-1,-1
"/** * Coerces an IPv6 address into an IPv4 address. * * <p>HACK: As long as applications continue to use IPv4 addresses for indexing into tables, * accounting, et cetera, it may be necessary to <b>coerce</b> IPv6 addresses into IPv4 addresses. * This method does so by hashing 64 bits of the IPv6 address into {@code 224.0.0.0/3} (64 bits * into 29 bits): * * <ul> *   <li>If the IPv6 address contains an embedded IPv4 address, the function hashes that. *   <li>Otherwise, it hashes the upper 64 bits of the IPv6 address. * </ul> * * <p>A ""coerced"" IPv4 address is equivalent to itself. * * <p>NOTE: This method is failsafe for security purposes: ALL IPv6 addresses (except localhost * (::1)) are hashed to avoid the security risk associated with extracting an embedded IPv4 * address that might permit elevated privileges. * * @param ip {@link InetAddress} to ""coerce"" * @return {@link Inet4Address} represented ""coerced"" address * @since 7.0 */",1,1,1,1,-1,-1,-1,-1
"/** * Creates a new container containing the given elements. TODO: would be nice to figure out how to * use E... or E[] as a parameter type, but this doesn't seem to work because Java creates an * array of the erased type. */",1,1,1,1,-1,-1,-1,-1
/** * GWT emulated version of {@link ImmutableList}. TODO(cpovirk): more doc * * @author Hayward Chan */,1,1,1,1,-1,-1,-1,-1
/** * GWT emulated version of {@link com.google.common.collect.ImmutableList}. TODO(cpovirk): more doc * * @author Hayward Chan */,1,1,1,1,-1,-1,-1,-1
"/** * Invocation handler to work around a compatibility problem between Java 7 and Java 8. * * <p>Java 8 introduced a new method {@code getAnnotatedBounds()} in the {@link TypeVariable} * interface, whose return type {@code AnnotatedType[]} is also new in Java 8. That means that we * cannot implement that interface in source code in a way that will compile on both Java 7 and * Java 8. If we include the {@code getAnnotatedBounds()} method then its return type means it * won't compile on Java 7, while if we don't include the method then the compiler will complain * that an abstract method is unimplemented. So instead we use a dynamic proxy to get an * implementation. If the method being called on the {@code TypeVariable} instance has the same * name as one of the public methods of {@link TypeVariableImpl}, the proxy calls the same method * on its instance of {@code TypeVariableImpl}. Otherwise it throws {@link * UnsupportedOperationException}; this should only apply to {@code getAnnotatedBounds()}. This * does mean that users on Java 8 who obtain an instance of {@code TypeVariable} from {@link * TypeResolver#resolveType} will not be able to call {@code getAnnotatedBounds()} on it, but that * should hopefully be rare. * * <p>TODO(b/147144588): We are currently also missing the methods inherited from {@link * AnnotatedElement}, which {@code TypeVariable} began to extend only in Java 8. Those methods * refer only to types present in Java 7, so we could implement them in {@code TypeVariableImpl} * today. (We could probably then make {@code TypeVariableImpl} implement {@code AnnotatedElement} * so that we get partial compile-time checking.) * * <p>This workaround should be removed at a distant future time when we no longer support Java * versions earlier than 8. */",1,0,1,1,-1,-1,-1,-1
/** * Reserializes the sets created by another test set generator. * * <p>TODO: make CollectionTestSuiteBuilder test reserialized collections * * @author Jesse Wilson */,1,1,1,1,-1,-1,-1,-1
"/** * Returns the ancestor of the current domain at the given number of levels ""higher"" (rightward) * in the subdomain list. The number of levels must be non-negative, and less than {@code N-1}, * where {@code N} is the number of parts in the domain. * * <p>TODO: Reasonable candidate for addition to public API. */",1,1,1,1,-1,-1,-1,-1
/** * Returns {@code true} if the MinMax heap structure holds. This is only used in testing. * * <p>TODO(kevinb): move to the test class? */,1,0,1,1,-1,-1,-1,-1
/** * Skeleton implementation of {@link HashFunction} in terms of {@link #newHasher()}. * * <p>TODO(lowasser): make public */,1,0,1,1,-1,-1,-1,-1
/** * Suite of tests for OpenJdk 6 tests. The existence of this class is a hack because the * suitebuilder won't pick up the suites directly in the other classes because they don't extend * TestCase. Ergh. * * @author Kevin Bourrillion */,1,1,1,1,-1,-1,-1,-1
/** * TODO(lukes): This was copied verbatim from Striped64.java... standardize this? */,1,1,1,1,-1,-1,-1,-1
/** * TODO: javadoc. * * @author Kevin Bourrillion */,1,1,1,1,-1,-1,-1,-1
/** * Test suite for {@link CacheBuilder}. TODO(cpovirk): merge into CacheBuilderTest? * * @author Jon Donovan */,1,1,1,1,-1,-1,-1,-1
"/** * Tests CacheBuilderSpec. TODO(user): tests of a few invalid input conditions, boundary * conditions. * * @author Adam Winer */",1,1,1,1,-1,-1,-1,-1
"/** * Tests for Predicates.contains(Pattern) and .containsPattern(String). We assume the regex level * works, so there are only trivial tests of that aspect. TODO: Fix comment style once annotation * stripper is fixed. */",1,1,1,1,-1,-1,-1,-1
"/** * Tests for Predicates.instanceOf(x). TODO: Fix the comment style after fixing annotation * stripper to remove comments properly. Currently, all tests before the comments are removed as * well. */",1,1,1,1,-1,-1,-1,-1
"/** * This is probably a weird and hacky way to test what we're really trying to test, but hey, it * caught a bug. */",1,1,1,1,-1,-1,-1,-1
/** * Unit tests for {@link Hashing}. * * <p>TODO(b/33919189): Migrate repeated testing methods to {@link #HashTestUtils} and tweak unit * tests to reference them from there. * * @author Dimitris Andreou * @author Kurt Alfred Kluever */,1,0,1,1,-1,-1,-1,-1
/** * Utility class for being able to seed a {@link Random} value with a passed in seed from a * benchmark parameter. * * <p>TODO: Remove this class once Caliper has a better way. * * @author Nicholaus Shupe */,1,1,1,1,-1,-1,-1,-1
"// At least, I assume that's why. TODO(cpovirk): Check, and maybe add a test for this.",1,1,1,1,-1,-1,-1,-1
// BigIntegerMath // TODO(cpovirk): GWT-enable BigIntegerMath,1,1,1,1,-1,-1,-1,-1
// Hack around E not being a subtype of Comparable.,1,1,1,1,-1,-1,-1,-1
// Hack around K not being a subtype of Comparable.,1,1,1,1,-1,-1,-1,-1
// Hack to load AbstractFuture et. al. in a new classloader so that it re-reads the cancellation,1,1,1,1,-1,-1,-1,-1
// Hack to load AbstractFuture et. al. in a new classloader so that it tries to re-read the,1,1,1,1,-1,-1,-1,-1
"// Hacker's Delight, Section 2-12",1,1,0,1,-1,-1,-1,-1
// Mocking ExecutorService is forbidden there. TODO(b/218700094): Don't mock.,1,1,1,1,-1,-1,-1,-1
"// See Hacker's Delight 2nd Edition, Figure 14-7.",1,1,0,1,-1,-1,-1,-1
"// TODO : NOT CORRECT, BUT TESTS PASS ANYWAYS!",1,1,1,1,-1,-1,-1,-1
"// TODO(b/114236866): Inherit doc from InternalFutureFailureAccess. Also, -link to its URL.",1,1,1,1,-1,-1,-1,-1
// TODO(b/126049426): Consider using saturateToNanos(timeout) instead.,1,1,1,1,-1,-1,-1,-1
"// TODO(b/141673833): If this would work, it would allow us to implement IThenable properly:",1,1,1,1,-1,-1,-1,-1
// TODO(b/142723300): Return AbstractNetwork.this.incidentEdgeOrder() once Network has that,1,1,1,1,-1,-1,-1,-1
"// TODO(b/145386688): This access should be guarded by 'segment', which is not currently",1,1,1,1,-1,-1,-1,-1
"// TODO(b/145386688): This access should be guarded by 'this.segment', which is not currently",1,1,1,1,-1,-1,-1,-1
// TODO(b/147136275): Remove once our checker understands & and |.,1,1,1,1,-1,-1,-1,-1
// TODO(b/148207871): Restore once Eclipse compiler no longer flakes for this.,1,1,1,1,-1,-1,-1,-1
// TODO(b/160980469): remove support for the old serialization format after some time,1,1,1,1,-1,-1,-1,-1
// TODO(b/163345357): Widen bound to AutoCloseable once we require API Level 19.,1,1,1,1,-1,-1,-1,-1
// TODO(b/172823566): Use mainline testToImmutableBiMap once CollectorTester is usable to java7.,1,1,1,1,-1,-1,-1,-1
// TODO(b/172823566): Use mainline testToImmutableList once CollectorTester is usable to java7.,1,1,1,1,-1,-1,-1,-1
// TODO(b/172823566): Use mainline testToImmutableListMultimap once CollectorTester is usable.,1,1,1,1,-1,-1,-1,-1
// TODO(b/172823566): Use mainline testToImmutableMap once CollectorTester is usable to java7.,1,1,1,1,-1,-1,-1,-1
// TODO(b/172823566): Use mainline testToImmutableRangeMap once CollectorTester is usable to java7,1,1,1,1,-1,-1,-1,-1
// TODO(b/172823566): Use mainline testToImmutableRangeSet once CollectorTester is usable to java7,1,1,1,1,-1,-1,-1,-1
// TODO(b/172823566): Use mainline testToImmutableSet once CollectorTester is usable to java7.,1,1,1,1,-1,-1,-1,-1
// TODO(b/172823566): Use mainline testToImmutableSetMultimap once CollectorTester is usable.,1,1,1,1,-1,-1,-1,-1
// TODO(b/172823566): Use mainline testToImmutableSortedMap once CollectorTester is usable.,1,1,1,1,-1,-1,-1,-1
// TODO(b/172823566): Use mainline testToImmutableSortedSet once CollectorTester is usable.,1,1,1,1,-1,-1,-1,-1
// TODO(b/172823566): Use mainline testToImmutableSortedSet_customComparator once CollectorTester,1,1,1,1,-1,-1,-1,-1
// TODO(b/192446998): Remove this override after tools understand nullness better.,1,1,1,1,-1,-1,-1,-1
// TODO(b/192579700): Use a ternary once it no longer confuses our nullness checker.,1,1,1,1,-1,-1,-1,-1
// TODO(b/219820829): consider removing,1,1,1,1,-1,-1,-1,-1
// TODO(b/27817069): Consider verifying the edge's incident nodes in the string.,1,1,1,1,-1,-1,-1,-1
// TODO(b/31438252): Consider potential optimizations for this algorithm.,1,1,1,1,-1,-1,-1,-1
// TODO(b/35466881): Fix or suppress.,1,1,1,1,-1,-1,-1,-1
// TODO(b/38490623): reenable after GWT double-to-string conversion is fixed,1,1,1,1,-1,-1,-1,-1
// TODO(b/6160855): Switch GWT emulations to NavigableSet.,1,1,1,1,-1,-1,-1,-1
// TODO(b/64442212): Remove this guard once lazyStackTrace() works in Java 9+.,1,1,1,1,-1,-1,-1,-1
// TODO(b/65488446): Make this a public API.,1,1,1,1,-1,-1,-1,-1
// TODO(b/68134636): Remove by 2019-10,1,1,1,1,-1,-1,-1,-1
"// TODO(b/80534298): Catch exceptions, rethrowing later with extras as suppressed exceptions.",1,1,1,1,-1,-1,-1,-1
"// TODO(benyu): Once behavior is the same for all Java versions we support, delete this.",1,1,1,1,-1,-1,-1,-1
"// TODO(benyu): This should check equality to an expected value, see discussion in cl/98674873",1,1,1,1,-1,-1,-1,-1
// TODO(benyu): Try java.nio.file.Paths#get() when Guava drops JDK 6 support.,1,1,1,1,-1,-1,-1,-1
// TODO(benyu): bake these into ArbitraryInstances.,1,1,1,1,-1,-1,-1,-1
"// TODO(benyu): benchmark and optimize all creation paths, which are a mess now",1,1,1,1,-1,-1,-1,-1
// TODO(benyu): handle ? super T somehow.,1,1,1,1,-1,-1,-1,-1
// TODO(benyu): migrate all subtyping tests from TypeTokenTest to this class using SubtypeTester.,1,1,1,1,-1,-1,-1,-1
// TODO(benyu): turn this into a test once all copyOf(Collection) are,1,1,1,1,-1,-1,-1,-1
// TODO(cgdecker): Add CharSource.slice?,1,1,1,1,-1,-1,-1,-1
// TODO(cgdecker): Maybe add a test for this to ByteSourceTester,1,1,1,1,-1,-1,-1,-1
// TODO(cgdecker): Should check for a generic parameter type and error out,1,1,1,1,-1,-1,-1,-1
// TODO(cgdecker): Should there be a custom exception type for this?,1,1,1,1,-1,-1,-1,-1
"// TODO(cgdecker): make this public? as a type, or a method in CharStreams?",1,1,1,1,-1,-1,-1,-1
// TODO(cgdecker): maybe add a better way to check if a resource exists,1,1,1,1,-1,-1,-1,-1
"// TODO(cgdecker): validate the provided options... for example, just READ seems wrong",1,1,1,1,-1,-1,-1,-1
"// TODO(cgdecker): validate the provided options... for example, just WRITE seems wrong",1,1,1,1,-1,-1,-1,-1
// TODO(chrisn): Check in a better resource,1,1,1,1,-1,-1,-1,-1
// TODO(chrisn): Consider trying to encode/flush directly to the argument byte,1,1,1,1,-1,-1,-1,-1
// TODO(chrisn): only works if we ensure we have crossed file threshold,1,1,1,1,-1,-1,-1,-1
// TODO(chrisn): promote AppendOnlyCollection for use here.,1,1,1,1,-1,-1,-1,-1
// TODO(cpovirk): @ForOverride,1,1,0,1,-1,-1,-1,-1
// TODO(cpovirk): @Weak?,1,1,1,1,-1,-1,-1,-1
// TODO(cpovirk): Add casts as needed. Will be noisy and annoying...,1,1,1,1,-1,-1,-1,-1
// TODO(cpovirk): Annotate for nullness.,1,1,1,1,-1,-1,-1,-1
// TODO(cpovirk): ClassNotFoundException... ClassSanityTesterTest$AnInterface,1,1,0,1,-1,-1,-1,-1
// TODO(cpovirk): ClassNotFoundException: com.google.common.base.Function,0,1,1,1,-1,-1,-1,-1
// TODO(cpovirk): Consider being more strict.,1,1,1,1,-1,-1,-1,-1
// TODO(cpovirk): Consider calling getDone() in our own code.,1,1,1,1,-1,-1,-1,-1
// TODO(cpovirk): Consider documenting that IAE on the various methods that can throw it.,1,1,1,1,-1,-1,-1,-1
// TODO(cpovirk): Consider removing this?,1,1,1,1,-1,-1,-1,-1
"// TODO(cpovirk): Consider removing, especially if we provide run(Runnable)",1,1,1,1,-1,-1,-1,-1
// TODO(cpovirk): Consider using EqualsTester from Guava.,1,1,1,1,-1,-1,-1,-1
// TODO(cpovirk): Figure out Android JUnit 4 support. Does it work with Gingerbread? @RunWith?,1,1,1,1,-1,-1,-1,-1
// TODO(cpovirk): Figure out a good name for this variable.,1,1,1,1,-1,-1,-1,-1
// TODO(cpovirk): File BigDecimal.divide() rounding bug.,1,1,1,1,-1,-1,-1,-1
// TODO(cpovirk): File bug for BigDecimal.doubleValue().,1,1,1,1,-1,-1,-1,-1
// TODO(cpovirk): How significant is this failure?,1,1,1,1,-1,-1,-1,-1
"// TODO(cpovirk): If some other test already initialized commonPool(), this won't work :(",1,1,1,1,-1,-1,-1,-1
"// TODO(cpovirk): In an ideal world, we'd check here that we're running on Android.",1,1,1,1,-1,-1,-1,-1
// TODO(cpovirk): Look up Build.VERSION.SDK_INT reflectively.,1,1,1,1,-1,-1,-1,-1
// TODO(cpovirk): Make this final (but that may break Mockito spy calls).,1,1,1,1,-1,-1,-1,-1
// TODO(cpovirk): Maybe I should have just one shared superclass for AbstractMultimap itself?,1,1,1,1,-1,-1,-1,-1
// TODO(cpovirk): More extensive testing of gap().,1,1,1,1,-1,-1,-1,-1
"// TODO(cpovirk): Move to Hashing or something, since it's used elsewhere in the Android version.",1,1,1,1,-1,-1,-1,-1
"// TODO(cpovirk): Perhaps we can optimize in this case, too?",1,1,1,1,-1,-1,-1,-1
// TODO(cpovirk): Presize to something plausible?,1,1,1,1,-1,-1,-1,-1
// TODO(cpovirk): Remove this,1,1,1,1,-1,-1,-1,-1
// TODO(cpovirk): Return ListenableScheduledFuture?,1,1,1,1,-1,-1,-1,-1
// TODO(cpovirk): Should this be merged into UninterruptiblesTest?,1,1,1,1,-1,-1,-1,-1
"// TODO(cpovirk): Should we do this at the end of the method, as in the server version?",1,1,1,1,-1,-1,-1,-1
// TODO(cpovirk): Should we just use ChecksumType directly instead of defining this type?,1,1,1,1,-1,-1,-1,-1
// TODO(cpovirk): Should we use a simpler (presumably cheaper) data structure?,1,1,1,1,-1,-1,-1,-1
// TODO(cpovirk): Split this into separate CountDownLatch and IncrementableCountDownLatch classes.,1,1,1,1,-1,-1,-1,-1
"// TODO(cpovirk): Standardize parameter names (expression vs. b, reference vs. obj).",1,1,1,1,-1,-1,-1,-1
// TODO(cpovirk): Test forwarding more extensively.,1,1,1,1,-1,-1,-1,-1
// TODO(cpovirk): Test that fallback is not run in this case.,1,1,1,1,-1,-1,-1,-1
// TODO(cpovirk): Use SourceCodeEscapers if it is added to Guava.,1,1,1,1,-1,-1,-1,-1
// TODO(cpovirk): Use maybePropagateCancellationTo?,1,1,1,1,-1,-1,-1,-1
// TODO(cpovirk): Use simple name instead of fully qualified after we stop building with JDK 8.,1,1,1,1,-1,-1,-1,-1
// TODO(cpovirk): Use standard Javadoc form for SimpleForwarding* class and constructor,1,1,1,1,-1,-1,-1,-1
// TODO(cpovirk): Verify that the cancelled futures are exactly ones that we expect.,1,1,1,1,-1,-1,-1,-1
// TODO(cpovirk): We could optimize this to avoid calling nanoTime() at all.,1,1,1,1,-1,-1,-1,-1
// TODO(cpovirk): Write a similar test that doesn't use ForkJoinPool (to run under Android)?,1,1,1,1,-1,-1,-1,-1
// TODO(cpovirk): are we over-wrapping?,1,1,1,1,-1,-1,-1,-1
"// TODO(cpovirk): assertTrue(awaitTerminationUninterruptibly(executor, 10, SECONDS));",1,1,1,1,-1,-1,-1,-1
// TODO(cpovirk): automatically fail the test if this thread throws,1,1,1,1,-1,-1,-1,-1
// TODO(cpovirk): avoid redundant unmodifiableList wrapping,1,1,1,1,-1,-1,-1,-1
// TODO(cpovirk): benchmark a version of this method that accepts a GetCheckedTypeValidator,1,1,1,1,-1,-1,-1,-1
// TODO(cpovirk): better failure messages,1,1,1,1,-1,-1,-1,-1
// TODO(cpovirk): chain in a CancellationException created at the cancel() call?,1,1,1,1,-1,-1,-1,-1
"// TODO(cpovirk): change parameter order to match other helper methods (Class, Throwable)?",1,1,1,1,-1,-1,-1,-1
// TODO(cpovirk): checkArgument?,1,1,0,1,-1,-1,-1,-1
// TODO(cpovirk): consider adding support for regex to Truth,1,1,1,1,-1,-1,-1,-1
// TODO(cpovirk): consider clearing this.delegate,1,1,1,1,-1,-1,-1,-1
// TODO(cpovirk): consider manual binary search under GWT to preserve O(log N) lookup,1,1,1,1,-1,-1,-1,-1
// TODO(cpovirk): consider using the logger associated with listener.getClass().,1,1,1,1,-1,-1,-1,-1
// TODO(cpovirk): consider using this approach (derived suites instead of extension) in,1,1,1,1,-1,-1,-1,-1
"// TODO(cpovirk): could something like this be used elsewhere, e.g., ReserializedListGenerator?",1,1,1,1,-1,-1,-1,-1
// TODO(cpovirk): does this test fail for only some rounding modes or for all?,1,1,1,1,-1,-1,-1,-1
// TODO(cpovirk): eliminate surprising Object/Class overloading of shouldFail,1,1,1,1,-1,-1,-1,-1
// TODO(cpovirk): eliminate use of mocks,1,1,1,1,-1,-1,-1,-1
// TODO(cpovirk): enable when ready (apparently after a change to our GWT emulation),1,1,1,1,-1,-1,-1,-1
"// TODO(cpovirk): equals(), as well, in case it's any faster than Sets.equalsImpl?",1,1,1,1,-1,-1,-1,-1
// TODO(cpovirk): explore ways of making ListenableFutureTask final. There are some valid reasons,1,1,1,1,-1,-1,-1,-1
"// TODO(cpovirk): if reference has been cleared, remove it?",1,1,1,1,-1,-1,-1,-1
"// TODO(cpovirk): implement interruption, updating this test:",1,1,1,1,-1,-1,-1,-1
"// TODO(cpovirk): instead of skipping, use a smaller number of steps",1,1,1,1,-1,-1,-1,-1
// TODO(cpovirk): java.lang.IllegalAccessError: superclass not accessible,1,1,1,1,-1,-1,-1,-1
"// TODO(cpovirk): maybe make this look like the method call does (""Functions.compose(...)"")",1,1,1,1,-1,-1,-1,-1
"// TODO(cpovirk): maybe make this look like the method call does (""Predicates.compose(...)"")",1,1,1,1,-1,-1,-1,-1
"// TODO(cpovirk): maybe remove ""defaultValue="" to make this look like the method call does",1,1,1,1,-1,-1,-1,-1
"// TODO(cpovirk): promote to Uninterruptibles, and add untimed version",1,1,1,1,-1,-1,-1,-1
// TODO(cpovirk): run tests in other thread instead of messing with main thread interrupt status,1,1,1,1,-1,-1,-1,-1
// TODO(cpovirk): should we be including other methods from the shim here and,1,1,1,1,-1,-1,-1,-1
"// TODO(cpovirk): should we reject null items, since the tests already check null automatically?",1,1,1,1,-1,-1,-1,-1
// TODO(cpovirk): some of these are inexplicably slow (20-30s) under GWT,1,1,1,1,-1,-1,-1,-1
// TODO(cpovirk): split into ImmutableSortedSet/ForwardingImmutableSortedSet?,1,1,1,1,-1,-1,-1,-1
// TODO(cpovirk): test all of these with the ranges added in the reverse order,1,1,1,1,-1,-1,-1,-1
// TODO(cpovirk): top-level class?,1,1,1,1,-1,-1,-1,-1
// TODO(cpovirk): why does asSubclass() throw? Is it something about ClassLoaders?,1,1,1,1,-1,-1,-1,-1
// TODO(dbeaumont): Support escapers where alphanumeric chars are not safe.,1,1,1,1,-1,-1,-1,-1
// TODO(dbeaumont): Switch to static factory methods for creation now that class is final.,1,1,1,1,-1,-1,-1,-1
"// TODO(dbeaumont): evaluate custom implementations, considering package private constructor.",1,1,1,1,-1,-1,-1,-1
"// TODO(dbeaumont,cpovirk): Rename this something better once refactoring done",1,0,1,1,-1,-1,-1,-1
// TODO(diamondm) consider moving this into addPendingString so it's always in the output,1,1,1,1,-1,-1,-1,-1
// TODO(diamondm) consider using Arrays.toString() for array parameters,1,1,1,1,-1,-1,-1,-1
"// TODO(dpb): Better toString, in the style of Futures.transform etc.",1,1,1,1,-1,-1,-1,-1
"// TODO(dpb): Consider reusing one CloseableList for the entire pipeline, modulo combinations.",1,1,1,1,-1,-1,-1,-1
// TODO(dpb): Consider ways to defer closing without creating a separate CloseableList.,1,1,1,1,-1,-1,-1,-1
// TODO(dpb): GWT compatibility.,1,1,1,1,-1,-1,-1,-1
// TODO(dpb): Should this do something special if the function throws CancellationException or,1,1,1,1,-1,-1,-1,-1
// TODO(dpb): Should we use a pair of ArrayLists instead of an IdentityHashMap?,1,1,1,1,-1,-1,-1,-1
// TODO(dpb): Switch to future.catchingSync when that exists (passing a throwing function).,1,1,1,1,-1,-1,-1,-1
// TODO(dpb): Switch to future.transformSync when that exists (passing a throwing function).,1,1,1,1,-1,-1,-1,-1
"// TODO(dpb): Use Expect once that supports JUnit 3, or we can use JUnit 4.",1,1,1,1,-1,-1,-1,-1
// TODO(emcmanus): consider whether to log other failure cases too.,1,1,1,1,-1,-1,-1,-1
// TODO(emcmanus): implement,1,1,1,1,-1,-1,-1,-1
// TODO(fry): Lazily create segments?,1,1,1,1,-1,-1,-1,-1
"// TODO(fry): Look into Maps.KeySet and Maps.Values, which can ideally be reused here but are",1,1,1,1,-1,-1,-1,-1
// TODO(fry): Separate logic for consistency between emul and nonemul implementation.,1,1,1,1,-1,-1,-1,-1
// TODO(fry): batch by segment,1,1,1,1,-1,-1,-1,-1
// TODO(fry): check recency ordering,1,1,1,1,-1,-1,-1,-1
// TODO(fry): could also cancel loading if we had a handle on its future,1,1,1,1,-1,-1,-1,-1
// TODO(fry): define a new type which creates event objects and automates the clear logic,1,1,1,1,-1,-1,-1,-1
// TODO(fry): empirically optimize this,1,1,1,1,-1,-1,-1,-1
// TODO(fry): instead implement this with an eviction head,1,1,1,1,-1,-1,-1,-1
// TODO(fry): record count of loaded entries,1,1,1,1,-1,-1,-1,-1
"// TODO(fry): rename get, then extend AbstractFuture instead of containing SettableFuture",1,1,1,1,-1,-1,-1,-1
// TODO(fry): store entry key instead of query key,1,1,1,1,-1,-1,-1,-1
// TODO(fry): when we link values instead of entries this method can go,1,1,1,1,-1,-1,-1,-1
// TODO(gak): make these public?,1,1,1,1,-1,-1,-1,-1
// TODO(gak): tune this condition based on empirical evidence,1,1,1,1,-1,-1,-1,-1
// TODO(hhchan): ArrayTable,1,1,0,1,-1,-1,-1,-1
// TODO(hhchan): It's 4 in java.  Figure out why even 3 is too slow in prod mode.,1,1,1,1,-1,-1,-1,-1
// TODO(jlevy): Add eraseRow and eraseColumn methods?,1,1,1,1,-1,-1,-1,-1
// TODO(jlevy): Add getters returning rowKeyToIndex and columnKeyToIndex?,1,1,1,1,-1,-1,-1,-1
// TODO(jlevy): Consider adding methods similar to ConcurrentMap methods.,1,1,1,1,-1,-1,-1,-1
// TODO(jlevy): Create methods that filter a SortedSetMultimap.,1,1,1,1,-1,-1,-1,-1
"// TODO(jlevy): For optimal performance, use a binary search when",1,1,1,1,-1,-1,-1,-1
// TODO(jlevy): Many more tests needed.,1,1,1,1,-1,-1,-1,-1
// TODO(jlevy): Move shared code of this class and MapsTransformValuesTest,1,1,1,1,-1,-1,-1,-1
// TODO(jlevy): Move to StandardRowSortedTable?,1,1,1,1,-1,-1,-1,-1
// TODO(jlevy): Wrap factory to validate that the supplied maps are empty?,1,1,1,1,-1,-1,-1,-1
// TODO(kak): Consider removing @CanIgnoreReturnValue from this class.,1,1,1,1,-1,-1,-1,-1
// TODO(kak): Consider removing this,1,1,1,1,-1,-1,-1,-1
// TODO(kak): Implement and benchmark the hashFoo() shortcuts.,1,1,1,1,-1,-1,-1,-1
// TODO(kak): Remove this branch,1,1,1,1,-1,-1,-1,-1
// TODO(kak): Should we remove this?,1,1,1,1,-1,-1,-1,-1
// TODO(kak): Should we remove this? Some people are using it to prefetch?,1,1,1,1,-1,-1,-1,-1
// TODO(kevinb): Consider factory methods that reject duplicates,1,1,1,1,-1,-1,-1,-1
"// TODO(kevinb): Figure out the right behavior, and document it",1,1,1,1,-1,-1,-1,-1
"// TODO(kevinb): I think we should push everything down to ""BaseImmutableCollection"" or something,",1,1,1,1,-1,-1,-1,-1
"// TODO(kevinb): Prove that this cast is safe, even though",1,1,1,1,-1,-1,-1,-1
// TODO(kevinb): Support a concurrently modified collection?,1,1,1,1,-1,-1,-1,-1
// TODO(kevinb): add 1000000 back when we have the ability to throw,1,1,1,1,-1,-1,-1,-1
// TODO(kevinb): add assertThat(Stream) to Truth?,1,1,1,1,-1,-1,-1,-1
// TODO(kevinb): all the precondition checks in the constructor are redundant...,1,1,1,1,-1,-1,-1,-1
// TODO(kevinb): caveats about equivalence-relation?,1,1,1,1,-1,-1,-1,-1
// TODO(kevinb): check more preconditions (as bufferSize >= chunkSize) if this is ever public,1,1,1,1,-1,-1,-1,-1
// TODO(kevinb): check overflow now?,1,1,1,1,-1,-1,-1,-1
// TODO(kevinb): check this wrt TreeMultiset?,1,1,1,1,-1,-1,-1,-1
// TODO(kevinb): consider <T> T verifySingleton(Iterable<T>) to take over for,1,1,1,1,-1,-1,-1,-1
// TODO(kevinb): consider making this public,1,1,1,1,-1,-1,-1,-1
// TODO(kevinb): considering having these implement a VisitablePredicate,1,1,1,1,-1,-1,-1,-1
// TODO(kevinb): convert the rest of this file to Truth someday,1,1,1,1,-1,-1,-1,-1
// TODO(kevinb): convert to assert once benchmark tests enable asserts by default,1,1,1,1,-1,-1,-1,-1
"// TODO(kevinb): copy to Comparators, etc.",1,1,1,1,-1,-1,-1,-1
// TODO(kevinb): dispense with this after benchmarking,1,1,1,1,-1,-1,-1,-1
// TODO(kevinb): do it this way when we can (GWT problem):,1,1,1,1,-1,-1,-1,-1
// TODO(kevinb): evaluate whether or not of().comparator() should return null,1,1,1,1,-1,-1,-1,-1
// TODO(kevinb): generate better test contents for multisets,1,1,1,1,-1,-1,-1,-1
// TODO(kevinb): go up to 11?,1,1,1,1,-1,-1,-1,-1
// TODO(kevinb): how can we omit that Iterables link when building gwt,1,1,1,1,-1,-1,-1,-1
// TODO(kevinb): how to omit that last sentence when building GWT javadoc?,1,1,1,1,-1,-1,-1,-1
// TODO(kevinb): how to prevent warning on UnsignedBytes when building GWT,1,1,1,1,-1,-1,-1,-1
"// TODO(kevinb): if Ints.compare etc. are ever removed, *maybe* remove this",1,1,1,1,-1,-1,-1,-1
"// TODO(kevinb): if we change this implementation, add full unit tests.",1,1,1,1,-1,-1,-1,-1
"// TODO(kevinb): is there a better way, that's still gwt-safe?",1,1,1,1,-1,-1,-1,-1
// TODO(kevinb): is this here only for GWT?,1,1,1,1,-1,-1,-1,-1
// TODO(kevinb): look at exact (==) hits vs. equals() hits?,1,1,1,1,-1,-1,-1,-1
// TODO(kevinb): pad?,1,1,0,1,-1,-1,-1,-1
// TODO(kevinb): precompute random #s?,1,1,0,1,-1,-1,-1,-1
// TODO(kevinb): provide replacement,1,1,1,1,-1,-1,-1,-1
// TODO(kevinb): reconsider if it's really worth making feeble attempts at,1,1,1,1,-1,-1,-1,-1
// TODO(kevinb): remove after this warning is disabled globally,1,1,1,1,-1,-1,-1,-1
// TODO(kevinb): remove this,1,1,1,1,-1,-1,-1,-1
// TODO(kevinb): replace with Ascii.caseInsensitiveEquivalence() when it,1,1,1,1,-1,-1,-1,-1
// TODO(kevinb): rerun benchmarks including new options,1,1,1,1,-1,-1,-1,-1
// TODO(kevinb): revisit this design choice,1,1,1,1,-1,-1,-1,-1
// TODO(kevinb): right way to explain this??,1,1,1,1,-1,-1,-1,-1
// TODO(kevinb): see if delegation is hurting performance noticeably,1,1,1,1,-1,-1,-1,-1
// TODO(kevinb): see if we can share code with OrderedIterator after it,1,1,1,1,-1,-1,-1,-1
// TODO(kevinb): split the && into two if's and move crossOverUp so it's,1,1,1,1,-1,-1,-1,-1
// TODO(kevinb): switch to importing Truth's assertThat(Stream) if we get that added,1,1,1,1,-1,-1,-1,-1
// TODO(kevinb): the descendingMap is never actually cached at all. Either it should be or the,1,1,1,1,-1,-1,-1,-1
// TODO(kevinb): the name of this method suggests it might not actually be testing what it,1,1,1,1,-1,-1,-1,-1
// TODO(kevinb): the right way to explain this??,1,1,1,1,-1,-1,-1,-1
// TODO(kevinb): this class still needs some design-and-document-for-inheritance love,1,1,1,1,-1,-1,-1,-1
// TODO(kevinb): throw if a trimmer was already specified!,1,1,1,1,-1,-1,-1,-1
// TODO(kevinb): understand why we still get a warning despite @SafeVarargs!,1,1,1,1,-1,-1,-1,-1
// TODO(kevinb): use Hashing/move this to Hashing?,1,1,1,1,-1,-1,-1,-1
// TODO(kevinb): use a Truth assertion here,1,1,1,1,-1,-1,-1,-1
// TODO(kevinb): we shouldn't be checking for a null result at runtime. Assert?,1,1,1,1,-1,-1,-1,-1
// TODO(lowasser): GWT compatibility,1,1,1,1,-1,-1,-1,-1
// TODO(lowasser): Return a subclass of Maps.FilteredKeyMap for slightly better,1,1,1,1,-1,-1,-1,-1
// TODO(lowasser): add forwarding-to-ImmutableSortedMap test,1,1,1,1,-1,-1,-1,-1
// TODO(lowasser): avoid allocation here,1,1,1,1,-1,-1,-1,-1
// TODO(lowasser): benchmark optimizations for equals() and see if they're worthwhile,0,1,1,1,-1,-1,-1,-1
// TODO(lowasser): benchmark when it's best to do a linear search,1,1,1,1,-1,-1,-1,-1
// TODO(lowasser): can we eliminate the duplication from MapTestSuiteBuilder here?,1,1,1,1,-1,-1,-1,-1
// TODO(lowasser): consider adding default implementations of some of these methods,1,1,1,1,-1,-1,-1,-1
"// TODO(lowasser): consider adding union, in addition to add, that does allow overlap",1,1,1,1,-1,-1,-1,-1
// TODO(lowasser): consider an implementation that can support SUBSIZED,1,1,1,1,-1,-1,-1,-1
// TODO(lowasser): consider an optimized values() implementation,1,1,1,1,-1,-1,-1,-1
"// TODO(lowasser): consider caching small values, like Long.valueOf",1,1,1,1,-1,-1,-1,-1
"// TODO(lowasser): consider making encodeTo(Appendable, byte[], int, int) public.",1,1,1,1,-1,-1,-1,-1
// TODO(lowasser): consider making the entries live views,1,1,1,1,-1,-1,-1,-1
"// TODO(lowasser): consider overhauling this back to Map<E, Integer>",1,1,1,1,-1,-1,-1,-1
// TODO(lowasser): consider presizing the builder if values is a Collection,1,1,1,1,-1,-1,-1,-1
// TODO(lowasser): copy ImmutableSetMultimap by using asList() on the sets,1,1,1,1,-1,-1,-1,-1
"// TODO(lowasser): could be potentially optimized, but only with",1,1,1,1,-1,-1,-1,-1
"// TODO(lowasser): document the extent of leniency, probably after adding ignore(CharMatcher)",1,1,1,1,-1,-1,-1,-1
// TODO(lowasser): identify places where thread safety is actually lost,1,1,1,1,-1,-1,-1,-1
// TODO(lowasser): identify why this affects GWT tests,1,1,1,1,-1,-1,-1,-1
// TODO(lowasser): if we need to make a copy of a BiMap because the,1,1,1,1,-1,-1,-1,-1
// TODO(lowasser): implement removeEldestEntry so this can be used as a drop-in replacement,1,1,1,1,-1,-1,-1,-1
// TODO(lowasser): investigate atomic failure?,1,1,1,1,-1,-1,-1,-1
// TODO(lowasser): is it potentially worth just going ahead and building a precomputed,1,1,1,1,-1,-1,-1,-1
// TODO(lowasser): is it worth it to worry about the last character of large matchers?,1,1,1,1,-1,-1,-1,-1
// TODO(lowasser): make a SortedElementSetGenerator,1,1,1,1,-1,-1,-1,-1
// TODO(lowasser): make column return a SortedMap,1,1,1,1,-1,-1,-1,-1
// TODO(lowasser): make this GWT-compatible,1,1,1,1,-1,-1,-1,-1
// TODO(lowasser): make this trigger only if the map is a submap,1,1,1,1,-1,-1,-1,-1
// TODO(lowasser): provide a useful toString,1,1,1,1,-1,-1,-1,-1
// TODO(lowasser): should we force TreeMultimap to be more thorough about checking nulls?,1,1,1,1,-1,-1,-1,-1
// TODO(lowasser): worth optimizing for RandomAccess?,1,1,1,1,-1,-1,-1,-1
// TODO(lukes): Consider throwing InterruptedException when appropriate.,1,1,1,1,-1,-1,-1,-1
// TODO(lukes): assert that the logs are full of errors,1,1,1,1,-1,-1,-1,-1
// TODO(lukes): consider adding the StackOverflowError protection from the server version,1,1,1,1,-1,-1,-1,-1
"// TODO(lukes): consider allowing callers to pass in a buffer to use, some callers would be able",1,1,1,1,-1,-1,-1,-1
// TODO(lukes): consider building everything in terms of ListenableScheduledFuture then,1,1,1,1,-1,-1,-1,-1
// TODO(lukes): handle RejectedExecutionException,1,1,1,1,-1,-1,-1,-1
"// TODO(lukes): if guava ever moves to java7, this would be a good",1,1,1,1,-1,-1,-1,-1
// TODO(lukes): in a real implementation we would need to handle overflow conditions,1,1,1,1,-1,-1,-1,-1
// TODO(lukes): investigate using the @Contended annotation on these fields when jdk8 is,1,1,1,1,-1,-1,-1,-1
// TODO(lukes): provide overloads for ListeningExecutorService? ListeningScheduledExecutorService?,1,1,1,1,-1,-1,-1,-1
"// TODO(lukes): provide overloads that take constant strings? Function<Runnable, String>s to",1,1,1,1,-1,-1,-1,-1
// TODO(lukes): why don't we use ListenableFuture to sequence things? Then we could drop the,1,1,1,1,-1,-1,-1,-1
// TODO(schmoe): provide a way to use this class with other (possibly arbitrary),1,1,1,1,-1,-1,-1,-1
"// TODO(user): ""Port"" jsr166 tests for ReentrantLock.",1,1,1,1,-1,-1,-1,-1
"// TODO(user): ""This is equivalent to",1,1,1,1,-1,-1,-1,-1
// TODO(user): Add support for waitUninterruptibly.,1,1,1,1,-1,-1,-1,-1
"// TODO(user): Cancel ""this"" if ""scheduledDelegate"" is cancelled.",1,1,1,1,-1,-1,-1,-1
"// TODO(user): Change API to make it impossible to use a Guard with the ""wrong"" monitor,",1,1,1,1,-1,-1,-1,-1
// TODO(user): Confirm with fry@ that this is a reasonable substitute.,1,1,1,1,-1,-1,-1,-1
// TODO(user): Consider adding both error messages from here and {@link AbstractNetworkTest},1,1,1,1,-1,-1,-1,-1
// TODO(user): Consider moving this to GraphsTest.,1,1,1,1,-1,-1,-1,-1
"// TODO(user): Consider scaling by number of mutator threads,",1,1,1,1,-1,-1,-1,-1
// TODO(user): Consider separating Strings that we've defined here to capture,1,1,1,1,-1,-1,-1,-1
// TODO(user): Consider using,1,1,1,1,-1,-1,-1,-1
// TODO(user): Evaluate whether it makes sense to always piggyback the computation of a,1,1,1,1,-1,-1,-1,-1
// TODO(user): Expand coverage and move to proper test suite.,1,1,1,1,-1,-1,-1,-1
// TODO(user): Implement ReentrantLock features:,1,1,1,1,-1,-1,-1,-1
// TODO(user): Is this the best place for this? Move to fluent functions?,1,1,1,1,-1,-1,-1,-1
// TODO(user): Measure the benefit of delegating this to LittleEndianBytes also.,1,1,1,1,-1,-1,-1,-1
// TODO(user): Move these to a more appropriate location in the test suite.,1,1,1,1,-1,-1,-1,-1
// TODO(user): Move this logic to a utility class.,1,1,1,1,-1,-1,-1,-1
// TODO(user): Some Strings used in the subclasses can be added as static Strings,1,1,1,1,-1,-1,-1,-1
// TODO(user): Support Sleeper somehow (wrapper or interface method)?,1,1,1,1,-1,-1,-1,-1
// TODO(user): This is not the most efficient way to handle generic,1,1,1,1,-1,-1,-1,-1
// TODO(user): Use raw LockSupport or AbstractQueuedSynchronizer instead of ReentrantLock.,1,1,1,1,-1,-1,-1,-1
// TODO(user): Write more tests for memory retention.,1,1,1,1,-1,-1,-1,-1
// TODO(user): benchmark performance difference with longer buffer,1,1,1,1,-1,-1,-1,-1
// TODO(user): cache all field accesses in local vars,1,1,1,1,-1,-1,-1,-1
"// TODO(user): consider ByteString here, when that is available",1,1,1,1,-1,-1,-1,-1
// TODO(user): different versions of this for different factories?,1,1,1,1,-1,-1,-1,-1
// TODO(user): move parts into a default method on ListenableFuture?,1,1,1,1,-1,-1,-1,-1
// TODO(user): predecessors and successors should be collocated (reducing cache misses).,1,1,1,1,-1,-1,-1,-1
"// TODO(user): switch to nano precision. A natural unit of cost is ""bytes"", and a micro precision",1,1,1,1,-1,-1,-1,-1
// TODO(user): verify future behavior - unify logic with getFutureValue in AbstractFuture. This,1,1,1,1,-1,-1,-1,-1
"// TODO(user): when the shortcuts are implemented, update BloomFilterStrategies",1,1,1,1,-1,-1,-1,-1
"// TODO(user): when things stabilize, flesh this out",1,1,1,1,-1,-1,-1,-1
"// TODO(user,lukes): consider adding volatile to all these fields since in current known JVMs",1,1,1,1,-1,-1,-1,-1
"// TODO: Add another constructor parameter indicating whether the class under test is ordered, and",1,1,1,1,-1,-1,-1,-1
// TODO: Avoid duplicating code in ImmutableMapTest,1,1,1,1,-1,-1,-1,-1
// TODO: Can we find a way to remove this @SuppressWarnings even for eclipse?,1,1,1,1,-1,-1,-1,-1
// TODO: Consolidate different copies in one single place.,1,1,1,1,-1,-1,-1,-1
"// TODO: Descriptive assertion messages, with hints as to probable fixes.",1,1,1,1,-1,-1,-1,-1
// TODO: Figure out why this is failing in GWT.,1,1,1,1,-1,-1,-1,-1
// TODO: Fix tests not to call this directly and make it throw an error.,1,1,1,1,-1,-1,-1,-1
"// TODO: IdentityHashMap, AbstractMap",1,1,0,1,-1,-1,-1,-1
"// TODO: If this test can ever depend on EasyMock or the like, use it instead.",1,1,1,1,-1,-1,-1,-1
"// TODO: Investigate the extent to which, in practice, maps that support",1,1,1,1,-1,-1,-1,-1
// TODO: Is this faster than System.arraycopy() for small arrays?,1,1,1,1,-1,-1,-1,-1
// TODO: Make serialization behavior consistent.,1,1,1,1,-1,-1,-1,-1
// TODO: Make this class GWT serializable.,1,1,1,1,-1,-1,-1,-1
// TODO: MinimalCollection should perhaps throw,1,1,1,1,-1,-1,-1,-1
"// TODO: Once invariant support is added, supply invariants to each of the",1,1,1,1,-1,-1,-1,-1
"// TODO: Prove that this cast is safe, even though",1,1,1,1,-1,-1,-1,-1
// TODO: Re-enable this test after moving to new serialization format in ImmutableMap.,1,1,1,1,-1,-1,-1,-1
// TODO: Reduce duplication of ImmutableMapTest code,1,1,1,1,-1,-1,-1,-1
// TODO: Refactor to share code with SetTestBuilder etc.,1,1,1,1,-1,-1,-1,-1
"// TODO: Remove ""ImmutableSet.<E>"" when eclipse bug is fixed.",1,1,1,1,-1,-1,-1,-1
// TODO: Remove this once the GWT bug is fixed.,1,1,1,1,-1,-1,-1,-1
// TODO: Restore the following line when Monitor.hasWaiters() no longer acquires the lock.,0,1,1,1,-1,-1,-1,-1
"// TODO: Specify different numbers of rows and columns, to detect problems",1,1,1,1,-1,-1,-1,-1
// TODO: Switch to JUnit 4 and use @Parameterized and @BeforeClass,1,1,1,1,-1,-1,-1,-1
"// TODO: Test automatic signaling before leave, waitFor, and reentrant enterWhen.",1,1,1,1,-1,-1,-1,-1
// TODO: Test blocking to re-enter monitor after being signaled.,1,1,1,1,-1,-1,-1,-1
"// TODO: Test enter(long, TimeUnit).",1,1,1,1,-1,-1,-1,-1
"// TODO: Test enterIf(Guard, long, TimeUnit).",1,1,1,1,-1,-1,-1,-1
"// TODO: Test enterWhen(Guard, long, TimeUnit).",1,1,1,1,-1,-1,-1,-1
// TODO: Test getQueueLength().,1,1,1,1,-1,-1,-1,-1
// TODO: Test getWaitQueueLength(Guard).,1,1,1,1,-1,-1,-1,-1
// TODO: Test hasQueuedThreads().,1,1,1,1,-1,-1,-1,-1
// TODO: Test interrupts with both interruptible and uninterruptible monitor.,1,1,1,1,-1,-1,-1,-1
"// TODO: Test multiple waiters: If guard is no longer satisfied, do not signal next waiter.",1,1,1,1,-1,-1,-1,-1
"// TODO: Test multiple waiters: If guard is still satisfied, signal next waiter.",1,1,1,1,-1,-1,-1,-1
"// TODO: Test waitFor(Guard, long, TimeUnit).",1,1,1,1,-1,-1,-1,-1
// TODO: Use this class to test classes besides ImmutableSortedMap.,1,1,1,1,-1,-1,-1,-1
// TODO: add an overload to EqualsTester to print custom error message?,1,1,1,1,-1,-1,-1,-1
// TODO: call conversion constructors or factory methods instead of using,1,1,1,1,-1,-1,-1,-1
// TODO: can these be moved to MapInterfaceTest?,1,1,1,1,-1,-1,-1,-1
// TODO: consider being null-hostile in these tests,1,1,1,1,-1,-1,-1,-1
// TODO: consider making it shuffle the contents to test iteration order.,1,1,1,1,-1,-1,-1,-1
// TODO: consider supporting a TearDownTestCase-like API,1,1,1,1,-1,-1,-1,-1
// TODO: could remove if we got NPT working in GWT somehow,1,1,1,1,-1,-1,-1,-1
// TODO: decide what to test here.,1,1,1,1,-1,-1,-1,-1
// TODO: dispose of this once collection is encapsulated.,1,1,1,1,-1,-1,-1,-1
// TODO: expose allow nulls parameter?,1,1,1,1,-1,-1,-1,-1
// TODO: investigate some API changes to SampleElements that would tidy up,1,1,1,1,-1,-1,-1,-1
// TODO: look at exact (==) hits vs. equals() hits?,1,1,1,1,-1,-1,-1,-1
// TODO: make this work with MinimalCollection,1,1,1,1,-1,-1,-1,-1
// TODO: move this to invariant checks once the appropriate hook exists?,1,1,1,1,-1,-1,-1,-1
"// TODO: rename e3, e4 => missing1, missing2",1,1,1,1,-1,-1,-1,-1
// TODO: replace this with an accessor.,1,1,1,1,-1,-1,-1,-1
// TODO: replace with version in common.reflect if and when it's open-sourced,1,1,1,1,-1,-1,-1,-1
// TODO: revisit if it's unbearably slow or when GWT supports,1,1,1,1,-1,-1,-1,-1
// TODO: run the iterator through ListIteratorTester,1,1,1,1,-1,-1,-1,-1
// TODO: safe?,1,1,1,1,-1,-1,-1,-1
// TODO: something shiny and new instead of Stack,1,1,1,1,-1,-1,-1,-1
// TODO: test ImmutableMultimap builder and factory methods,1,1,1,1,-1,-1,-1,-1
// TODO: test adding element of wrong type,1,1,1,1,-1,-1,-1,-1
// TODO: test other collections for this problem,1,1,1,1,-1,-1,-1,-1
// TODO: test whether null is supported (create a Feature),1,1,1,1,-1,-1,-1,-1
"// TODO: tests that check the weird interplay between expected size,",1,1,1,1,-1,-1,-1,-1
// TODO: the overwhelming number of suppressions below suggests that maybe,1,1,1,1,-1,-1,-1,-1
// TODO: throw something else? Do we worry that people's code and tests,1,1,1,1,-1,-1,-1,-1
// TODO: track seen elements when order isn't guaranteed,1,1,1,1,-1,-1,-1,-1
// TODO: use Range once it's publicly available,1,1,1,1,-1,-1,-1,-1
// TODO: use collection testers on Multimaps.forMap.entries,1,1,1,1,-1,-1,-1,-1
// TODO: use collection testers on Multimaps.forMap.values,1,1,1,1,-1,-1,-1,-1
// TODO: use the ListTestSuiteBuilder,1,1,1,1,-1,-1,-1,-1
// TODO: use this,1,1,1,1,-1,-1,-1,-1
// TODO: verify contents afterward,1,1,1,1,-1,-1,-1,-1
// TODO: verify that this is the best testing strategy.,1,1,1,1,-1,-1,-1,-1
"// TODO: when we use @BeforeClass, we can pay the cost of class path scanning only once.",1,1,1,1,-1,-1,-1,-1
// TODO: why is this public?,1,1,1,1,-1,-1,-1,-1
"// TODO: with appropriate refactoring of OneSizeGenerator, we can perhaps",1,1,1,1,-1,-1,-1,-1
// The comparator will likely also differ because of our nullAccepting hack.,1,1,1,1,-1,-1,-1,-1
// This is a bit of a hack but lets us do quicker per-character checks in,1,1,1,1,-1,-1,-1,-1
// This is messed up. See TODO at top of file.,1,1,1,1,-1,-1,-1,-1
"// non-hacky way (i.e. using String value class names- ""[L..."")?",1,0,1,1,-1,-1,-1,-1
// slow TODO(cpovirk): Maybe just reduce iterations under Android.,1,1,1,1,-1,-1,-1,-1
// slow. TODO(cpovirk): Maybe just reduce iterations under Android.,1,1,1,1,-1,-1,-1,-1
// suite // TODO(cpovirk): add to collect/gwt/suites,1,1,1,1,-1,-1,-1,-1
// suite // TODO(cpovirk): set up collect/gwt/suites version,1,1,1,1,-1,-1,-1,-1
// to even crazier hacks to reset static final boolean fields.,1,1,1,1,-1,-1,-1,-1
// without resorting to even crazier hacks to reset static final boolean fields.,1,1,1,1,-1,-1,-1,-1
/**         * TODO(lukes): This was copied verbatim from Striped64.java... standardize this?         */,1,1,1,1,-1,-1,-1,-1
"/**     * All of the infrastructure of split and splitToString is identical, so we do one test of     * splitToString. All other cases should be covered by testing of split.     *     * <p>TODO(user): It would be good to make all the relevant tests run on both split and     * splitToString automatically.     */",1,0,1,1,-1,-1,-1,-1
"/**     * Coerces an IPv6 address into an IPv4 address.     *     * <p>HACK: As long as applications continue to use IPv4 addresses for indexing into tables,     * accounting, et cetera, it may be necessary to <b>coerce</b> IPv6 addresses into IPv4 addresses.     * This method does so by hashing 64 bits of the IPv6 address into {@code 224.0.0.0/3} (64 bits     * into 29 bits):     *     * <ul>     *   <li>If the IPv6 address contains an embedded IPv4 address, the function hashes that.     *   <li>Otherwise, it hashes the upper 64 bits of the IPv6 address.     * </ul>     *     * <p>A ""coerced"" IPv4 address is equivalent to itself.     *     * <p>NOTE: This method is failsafe for security purposes: ALL IPv6 addresses (except localhost     * (::1)) are hashed to avoid the security risk associated with extracting an embedded IPv4     * address that might permit elevated privileges.     *     * @param ip {@link InetAddress} to ""coerce""     * @return {@link Inet4Address} represented ""coerced"" address     * @since 7.0     */",1,1,1,1,-1,-1,-1,-1
"/**     * Creates a new container containing the given elements. TODO: would be nice to figure out how to     * use E... or E[] as a parameter type, but this doesn't seem to work because Java creates an     * array of the erased type.     */",1,1,1,1,-1,-1,-1,-1
"/**     * Invocation handler to work around a compatibility problem between Java 7 and Java 8.     *     * <p>Java 8 introduced a new method {@code getAnnotatedBounds()} in the {@link TypeVariable}     * interface, whose return type {@code AnnotatedType[]} is also new in Java 8. That means that we     * cannot implement that interface in source code in a way that will compile on both Java 7 and     * Java 8. If we include the {@code getAnnotatedBounds()} method then its return type means it     * won't compile on Java 7, while if we don't include the method then the compiler will complain     * that an abstract method is unimplemented. So instead we use a dynamic proxy to get an     * implementation. If the method being called on the {@code TypeVariable} instance has the same     * name as one of the public methods of {@link TypeVariableImpl}, the proxy calls the same method     * on its instance of {@code TypeVariableImpl}. Otherwise it throws {@link     * UnsupportedOperationException}; this should only apply to {@code getAnnotatedBounds()}. This     * does mean that users on Java 8 who obtain an instance of {@code TypeVariable} from {@link     * TypeResolver#resolveType} will not be able to call {@code getAnnotatedBounds()} on it, but that     * should hopefully be rare.     *     * <p>TODO(b/147144588): We are currently also missing the methods inherited from {@link     * AnnotatedElement}, which {@code TypeVariable} began to extend only in Java 8. Those methods     * refer only to types present in Java 7, so we could implement them in {@code TypeVariableImpl}     * today. (We could probably then make {@code TypeVariableImpl} implement {@code AnnotatedElement}     * so that we get partial compile-time checking.)     *     * <p>This workaround should be removed at a distant future time when we no longer support Java     * versions earlier than 8.     */",1,0,1,1,-1,-1,-1,-1
"/**     * Returns the ancestor of the current domain at the given number of levels ""higher"" (rightward)     * in the subdomain list. The number of levels must be non-negative, and less than {@code N-1},     * where {@code N} is the number of parts in the domain.     *     * <p>TODO: Reasonable candidate for addition to public API.     */",1,1,1,1,-1,-1,-1,-1
/**     * Returns {@code true} if the MinMax heap structure holds. This is only used in testing.     *     * <p>TODO(kevinb): move to the test class?     */,1,0,1,1,-1,-1,-1,-1
"/**     * Tests for Predicates.contains(Pattern) and .containsPattern(String). We assume the regex level     * works, so there are only trivial tests of that aspect. TODO: Fix comment style once annotation     * stripper is fixed.     */",1,1,1,1,-1,-1,-1,-1
"/**     * Tests for Predicates.instanceOf(x). TODO: Fix the comment style after fixing annotation     * stripper to remove comments properly. Currently, all tests before the comments are removed as     * well.     */",1,1,1,1,-1,-1,-1,-1
"/**     * This is probably a weird and hacky way to test what we're really trying to test, but hey, it     * caught a bug.     */",1,1,1,1,-1,-1,-1,-1
"// A note on memory visibility.// Many of the utilities in this class (transform, withFallback, withTimeout, asList, combine)// have two requirements that significantly complicate their design.// 1. Cancellation should propagate from the returned future to the input future(s).// 2. The returned futures shouldn't unnecessarily 'pin' their inputs after completion.//// A consequence of these requirements is that the delegate futures cannot be stored in// final fields.//// For simplicity the rest of this description will discuss Futures.catching since it is the// simplest instance, though very similar descriptions apply to many other classes in this file.//// In the constructor of AbstractCatchingFuture, the delegate future is assigned to a field// 'inputFuture'. That field is non-final and non-volatile. There are 2 places where the// 'inputFuture' field is read and where we will have to consider visibility of the write// operation in the constructor.//// 1. In the listener that performs the callback. In this case it is fine since inputFuture is// assigned prior to calling addListener, and addListener happens-before any invocation of the// listener. Notably, this means that 'volatile' is unnecessary to make 'inputFuture' visible// to the listener.//// 2. In done() where we may propagate cancellation to the input. In this case it is _not_ fine.// There is currently nothing that enforces that the write to inputFuture in the constructor is// visible to done(). This is because there is no happens before edge between the write and a// (hypothetical) unsafe read by our caller. Note: adding 'volatile' does not fix this issue,// it would just add an edge such that if done() observed non-null, then it would also// definitely observe all earlier writes, but we still have no guarantee that done() would see// the inital write (just stronger guarantees if it does).//// See: http://cs.oswego.edu/pipermail/concurrency-interest/2015-January/013800.html// For a (long) discussion about this specific issue and the general futility of life.//// For the time being we are OK with the problem discussed above since it requires a caller to// introduce a very specific kind of data-race. And given the other operations performed by these// methods that involve volatile read/write operations, in practice there is no issue. Also, the// way in such a visibility issue would surface is most likely as a failure of cancel() to// propagate to the input. Cancellation propagation is fundamentally racy so this is fine.//// Future versions of the JMM may revise safe construction semantics in such a way that we can// safely publish these objects and we won't need this whole discussion.// TODO(user,lukes): consider adding volatile to all these fields since in current known JVMs// that should resolve the issue. This comes at the cost of adding more write barriers to the// implementations.",1,1,0,1,-1,-1,-1,-1
// Depends on the correctness of BigIntegerMath.factorial.// TODO,1,1,1,1,-1,-1,-1,-1
"// Hack around E not being a subtype of Comparable.// Unsafe, see ImmutableSortedMultisetFauxverideShim.",1,1,1,1,-1,-1,-1,-1
"// Hack around E not being a subtype of Comparable.// Unsafe, see ImmutableSortedSetFauxverideShim.",1,1,1,1,-1,-1,-1,-1
"// Hack around K not being a subtype of Comparable.// Unsafe, see ImmutableSortedSetFauxverideShim.",1,1,1,1,-1,-1,-1,-1
// Hack to load AbstractFuture et. al. in a new classloader so that it re-reads the cancellation// cause system property.  This allows us to run with both settings of the property in one jvm// without resorting to even crazier hacks to reset static final boolean fields.,1,1,1,1,-1,-1,-1,-1
// Hack to load AbstractFuture et. al. in a new classloader so that it tries to re-read the// cancellation-cause system property. This allows us to test what happens if reading the// property is forbidden and then continue running tests normally in one jvm without resorting// to even crazier hacks to reset static final boolean fields.,1,1,1,1,-1,-1,-1,-1
// If an exception is thrown by the subclass then we need to make sure that the service// notices and transitions to the FAILED state. We do it by calling notifyFailed directly// because the service does not monitor the state of the future so if the exception is not// caught and forwarded to the service the task would stop executing but the service would// have no idea.// TODO(lukes): consider building everything in terms of ListenableScheduledFuture then// the AbstractService could monitor the future directly. Rescheduling is still hard...// but it would help with some of these lock ordering issues.,1,1,0,1,-1,-1,-1,-1
"// If this future is already cancelled, cancel the delegate.// TODO(cpovirk): Should we do this at the end of the method, as in the server version?// TODO(cpovirk): Use maybePropagateCancellationTo?",1,1,1,1,-1,-1,-1,-1
// It is not any kind of IP address; must be a domain name or invalid.// TODO(user): different versions of this for different factories?,1,1,1,1,-1,-1,-1,-1
// Iterables#getLast was inlined here so we don't have to throw/catch a NSEE// TODO(kevinb): Support a concurrently modified collection?,1,1,1,1,-1,-1,-1,-1
// Regular instance methods// TODO(kak): Consider removing this,1,1,1,1,-1,-1,-1,-1
// Relies on the correctness of BigIntegerMath.log10 for all modes except UNNECESSARY.// BigIntegerMath // TODO(cpovirk): GWT-enable BigIntegerMath,1,1,1,1,-1,-1,-1,-1
// Relies on the correctness of BigIntegerMath.log10 for all modes except UNNECESSARY.// TODO,1,1,1,1,-1,-1,-1,-1
// Relies on the correctness of BigIntegerMath.sqrt for all modes except UNNECESSARY.// TODO,1,1,1,1,-1,-1,-1,-1
"// Relies on the correctness of log10(BigInteger, FLOOR).// TODO",1,1,1,1,-1,-1,-1,-1
"// Relies on the correctness of log10(BigInteger, {HALF_UP,HALF_DOWN}).// TODO",1,1,1,1,-1,-1,-1,-1
"// Relies on the correctness of log10(long, FLOOR) and of pow(long, int).// TODO",1,1,1,1,-1,-1,-1,-1
"// Relies on the correctness of sqrt(BigInteger, FLOOR).// TODO",1,1,1,1,-1,-1,-1,-1
"// Relies on the correctness of sqrt(BigInteger, {HALF_UP,HALF_DOWN}).// TODO",1,1,1,1,-1,-1,-1,-1
// Returns true if BigInteger.valueOf(x.longValue()).equals(x).// TODO,0,1,1,1,-1,-1,-1,-1
// See newDirectExecutorService javadoc for behavioral notes.// TODO,1,1,1,1,-1,-1,-1,-1
"// Setting a security manager causes the common ForkJoinPool to use InnocuousThreads with no// permissions.// submit()/join() causes this thread to execute the task instead, so we use a CountDownLatch as// a barrier to synchronize.// TODO(cpovirk): If some other test already initialized commonPool(), this won't work :(// Maybe we should just run this test in its own VM.",1,1,1,1,-1,-1,-1,-1
// Skip some tests that fail due to GWT's non-compliant int implementation.// TODO(cpovirk): does this test fail for only some rounding modes or for all?,1,1,1,1,-1,-1,-1,-1
"// Split out so that the anonymous ThreadFactory can't contain a reference back to the builder.// At least, I assume that's why. TODO(cpovirk): Check, and maybe add a test for this.",1,1,1,1,-1,-1,-1,-1
"// Spread bits to regularize both segment and index locations,// using variant of single-word Wang/Jenkins hash.// TODO(kevinb): use Hashing/move this to Hashing?",1,1,1,1,-1,-1,-1,-1
"// TODO(b/141673833): If this would work, it would allow us to implement IThenable properly:// default <R> Promise<R> then(IThenable.ThenOnFulfilledCallbackFn<? super V, ? extends R>// onFulfilled) {// return then(onFulfilled, null);// }",1,1,1,1,-1,-1,-1,-1
// TODO(b/142723300): Return AbstractNetwork.this.incidentEdgeOrder() once Network has that// method.,1,1,1,1,-1,-1,-1,-1
"// TODO(b/145386688): This access should be guarded by 'segment', which is not currently// held",1,1,1,1,-1,-1,-1,-1
"// TODO(b/145386688): This access should be guarded by 'this.segment', which is not currently// held",1,1,1,1,-1,-1,-1,-1
// TODO(b/172823566): Use mainline testToImmutableSortedSet_customComparator once CollectorTester// is usable to java7.,1,1,1,1,-1,-1,-1,-1
// TODO(benyu): turn this into a test once all copyOf(Collection) are// thread-safe// GWT is single threaded,1,1,1,1,-1,-1,-1,-1
"// TODO(cgdecker): Should there be a custom exception type for this?// Also, should we try to include the Path of each file we may have failed to delete rather// than just the exceptions that occurred?",1,1,1,1,-1,-1,-1,-1
// TODO(chrisn): Consider trying to encode/flush directly to the argument byte// buffer when possible.,1,1,1,1,-1,-1,-1,-1
"// TODO(cpovirk): consider using this approach (derived suites instead of extension) in// ListTestSuiteBuilder, etc.?",1,1,1,1,-1,-1,-1,-1
// TODO(cpovirk): explore ways of making ListenableFutureTask final. There are some valid reasons// such as BoundedQueueExecutorService to allow extends but it would be nice to make it final to// avoid unintended usage.// The execution list to hold our listeners.,1,1,1,1,-1,-1,-1,-1
"// TODO(cpovirk): implement interruption, updating this test:// https://github.com/google/guava/issues/1989",1,1,1,1,-1,-1,-1,-1
"// TODO(cpovirk): instead of skipping, use a smaller number of steps// works but takes 5 minutes to run",1,1,1,1,-1,-1,-1,-1
"// TODO(cpovirk): split into ImmutableSortedSet/ForwardingImmutableSortedSet?// In the non-emulated source, this is in ImmutableSortedSetFauxverideShim,// which overrides ImmutableSet & which ImmutableSortedSet extends.// It is necessary here because otherwise the builder() method// would be inherited from the emulated ImmutableSet.// TODO(cpovirk): should we be including other methods from the shim here and// in ImmutableSortedMap?",1,1,1,1,-1,-1,-1,-1
// TODO(dbeaumont): Switch to static factory methods for creation now that class is final.// TODO(dbeaumont): Support escapers where alphanumeric chars are not safe.// eager for GWT.,1,1,1,1,-1,-1,-1,-1
// TODO(dpb): Should this do something special if the function throws CancellationException or// ExecutionException?,1,1,1,1,-1,-1,-1,-1
"// TODO(fry): Separate logic for consistency between emul and nonemul implementation.// TODO(fry): Look into Maps.KeySet and Maps.Values, which can ideally be reused here but are// currently only package visible.",1,1,1,1,-1,-1,-1,-1
"// TODO(fry): when we link values instead of entries this method can go// away, as can connectAccessOrder, nullifyAccessOrder.",1,1,1,1,-1,-1,-1,-1
"// TODO(fry): when we link values instead of entries this method can go// away, as can connectWriteOrder, nullifyWriteOrder.",1,1,1,1,-1,-1,-1,-1
// TODO(jlevy): Consider adding methods similar to ConcurrentMap methods.// Accessors,1,1,1,1,-1,-1,-1,-1
"// TODO(jlevy): For optimal performance, use a binary search when// targets.size() < size() / log(size())// TODO(kevinb): see if we can share code with OrderedIterator after it// graduates from labs.",0,1,1,1,-1,-1,-1,-1
// TODO(jlevy): Move shared code of this class and MapsTransformValuesTest// to a superclass.,1,1,1,1,-1,-1,-1,-1
"// TODO(kevinb): Prove that this cast is safe, even though// Collections.unmodifiableSortedMap requires the same key type.",1,1,1,1,-1,-1,-1,-1
// TODO(kevinb): add 1000000 back when we have the ability to throw// NotApplicableException in the expensive comparator case.,1,1,1,1,-1,-1,-1,-1
// TODO(kevinb): consider <T> T verifySingleton(Iterable<T>) to take over for// Iterables.getOnlyElement(),1,1,1,1,-1,-1,-1,-1
// TODO(kevinb): considering having these implement a VisitablePredicate// interface which specifies an accept(PredicateVisitor) method.,1,1,1,1,-1,-1,-1,-1
// TODO(kevinb): do it this way when we can (GWT problem):// long bits = Double.doubleToLongBits(value);// return (int) (bits ^ (bits >>> 32));,1,1,1,1,-1,-1,-1,-1
// TODO(kevinb): how can we omit that Iterables link when building gwt// javadoc?,1,1,1,1,-1,-1,-1,-1
// TODO(kevinb): how to prevent warning on UnsignedBytes when building GWT// javadoc?,1,1,1,1,-1,-1,-1,-1
"// TODO(kevinb): if Ints.compare etc. are ever removed, *maybe* remove this// one too, which would leave compare methods only on the Unsigned* classes.",1,1,1,1,-1,-1,-1,-1
// TODO(kevinb): reconsider if it's really worth making feeble attempts at// sanity for inconsistent comparators.// The equals() check is needed when the comparator isn't compatible with// equals().,1,1,1,1,-1,-1,-1,-1
// TODO(kevinb): replace with Ascii.caseInsensitiveEquivalence() when it// exists,1,1,1,1,-1,-1,-1,-1
"// TODO(kevinb): rerun benchmarks including new options// unsafe, but there's not much we can do about it now",1,1,1,1,-1,-1,-1,-1
"// TODO(kevinb): see if delegation is hurting performance noticeably// TODO(kevinb): if we change this implementation, add full unit tests.",1,1,1,1,-1,-1,-1,-1
// TODO(kevinb): split the && into two if's and move crossOverUp so it's// only called when there's no child.,1,1,1,1,-1,-1,-1,-1
// TODO(kevinb): the descendingMap is never actually cached at all. Either it should be or the// code below simplified.,1,1,1,1,-1,-1,-1,-1
// TODO(kevinb): the name of this method suggests it might not actually be testing what it// intends to be testing?// Splitter.onPattern,1,1,1,1,-1,-1,-1,-1
// TODO(lowasser): Return a subclass of Maps.FilteredKeyMap for slightly better// performance.,1,1,1,1,-1,-1,-1,-1
// TODO(lowasser): consider adding default implementations of some of these methods// Query methods,1,1,1,1,-1,-1,-1,-1
"// TODO(lowasser): could be potentially optimized, but only with// extensive testing",1,1,1,1,-1,-1,-1,-1
"// TODO(lowasser): if we need to make a copy of a BiMap because the// forward map is a view, don't make a copy of the non-view delegate map",1,1,1,1,-1,-1,-1,-1
// TODO(lowasser): is it potentially worth just going ahead and building a precomputed// matcher?,1,1,1,1,-1,-1,-1,-1
"// TODO(lowasser): make this trigger only if the map is a submap// currently, the KeySetGenerator won't work properly for a subset of a keyset of a submap",1,1,1,1,-1,-1,-1,-1
// TODO(lukes): consider adding the StackOverflowError protection from the server version// TODO(cpovirk): consider clearing this.delegate,1,1,1,1,-1,-1,-1,-1
"// TODO(lukes): consider allowing callers to pass in a buffer to use, some callers would be able// to reuse buffers, others would be able to size them more appropriately than the constant// defaults",1,1,1,1,-1,-1,-1,-1
"// TODO(lukes): if guava ever moves to java7, this would be a good// candidate for a suppressed exception, or maybe we could generalize// Closer.Suppressor",1,1,1,1,-1,-1,-1,-1
// TODO(lukes): investigate using the @Contended annotation on these fields when jdk8 is// available.,1,1,1,1,-1,-1,-1,-1
"// TODO(lukes): provide overloads for ListeningExecutorService? ListeningScheduledExecutorService?// TODO(lukes): provide overloads that take constant strings? Function<Runnable, String>s to// calculate names?",1,1,1,1,-1,-1,-1,-1
// TODO(schmoe): provide a way to use this class with other (possibly arbitrary)// ConcurrentMap implementors. One possibility is to extract most of this class into// an AbstractConcurrentMapMultiset.,1,1,1,1,-1,-1,-1,-1
"// TODO(user): ""This is equivalent to// {@code createWithCapacity(permitsPerSecond, 1, TimeUnit.SECONDS)}"".",1,1,1,1,-1,-1,-1,-1
"// TODO(user): Confirm with fry@ that this is a reasonable substitute.// Set<Entry<Object, Object>> entries = map.entrySet();// assertThat(entries).containsExactly(// Maps.immutableEntry(three, one), Maps.immutableEntry(one, two));// Set<Object> keys = map.keySet();// assertThat(keys).containsExactly(one, three);// Collection<Object> values = map.values();// assertThat(values).containsExactly(one, two);",1,1,1,1,-1,-1,-1,-1
// TODO(user): Consider adding both error messages from here and {@link AbstractNetworkTest}// in one class (may be a utility class for error messages).,1,1,1,1,-1,-1,-1,-1
"// TODO(user): Consider separating Strings that we've defined here to capture// identifiable substrings of expected error messages, from Strings that we've defined// here to provide error messages.// TODO(user): Some Strings used in the subclasses can be added as static Strings// here too.",1,1,1,1,-1,-1,-1,-1
"// TODO(user): Evaluate whether it makes sense to always piggyback the computation of a// HashCode on an existing OutputStream, compared to creating a separate OutputStream that could// be (optionally) be combined with another if needed (with something like// MultiplexingOutputStream).",1,1,1,1,-1,-1,-1,-1
// TODO(user): Is this the best place for this? Move to fluent functions?// Useful as a public method?,1,1,1,1,-1,-1,-1,-1
"// TODO(user): This is not the most efficient way to handle generic// arrays, but is there another way to extract the array class in a// non-hacky way (i.e. using String value class names- ""[L..."")?",1,1,1,1,-1,-1,-1,-1
"// TODO(user): Use raw LockSupport or AbstractQueuedSynchronizer instead of ReentrantLock.// TODO(user): ""Port"" jsr166 tests for ReentrantLock.//// TODO(user): Change API to make it impossible to use a Guard with the ""wrong"" monitor,// by making the monitor implicit, and to eliminate other sources of IMSE.// Imagine:// guard.lock();// try { /* monitor locked and guard satisfied here */ }// finally { guard.unlock(); }// Here are Justin's design notes about this://// This idea has come up from time to time, and I think one of my// earlier versions of Monitor even did something like this. I ended// up strongly favoring the current interface.//// I probably can't remember all the reasons (it's possible you// could find them in the code review archives), but here are a few://// 1. What about leaving/unlocking? Are you going to do// guard.enter() paired with monitor.leave()? That might get// confusing. It's nice for the finally block to look as close as// possible to the thing right before the try. You could have// guard.leave(), but that's a little odd as well because the// guard doesn't have anything to do with leaving. You can't// really enforce that the guard you're leaving is the same one// you entered with, and it doesn't actually matter.//// 2. Since you can enter the monitor without a guard at all, some// places you'll have monitor.enter()/monitor.leave() and other// places you'll have guard.enter()/guard.leave() even though// it's the same lock being acquired underneath. Always using// monitor.enterXXX()/monitor.leave() will make it really clear// which lock is held at any point in the code.//// 3. I think ""enterWhen(notEmpty)"" reads better than ""notEmpty.enter()"".//// TODO(user): Implement ReentrantLock features:// - toString() method// - getOwner() method// - getQueuedThreads() method// - getWaitingThreads(Guard) method// - implement Serializable// - redo the API to be as close to identical to ReentrantLock as possible,// since, after all, this class is also a reentrant mutual exclusion lock!?",1,1,1,1,-1,-1,-1,-1
// TODO(user): benchmark performance difference with longer buffer// always space for a single primitive,1,1,1,1,-1,-1,-1,-1
"// TODO(user): predecessors and successors should be collocated (reducing cache misses).// Might also explore collocating all of [hash, next, predecessor, successor] fields of an// entry in a *single* long[], though that reduces the maximum size of the set by a factor of 2",1,1,1,1,-1,-1,-1,-1
"// TODO(user): switch to nano precision. A natural unit of cost is ""bytes"", and a micro precision// would mean a maximum rate of ""1MB/s"", which might be small in some cases.",1,1,1,1,-1,-1,-1,-1
"// TODO(user): verify future behavior - unify logic with getFutureValue in AbstractFuture. This// code should be unreachable with correctly implemented Futures.// Cancel this future and return.// At this point, inputFuture is cancelled and outputFuture doesn't exist, so the value of// mayInterruptIfRunning is irrelevant.",1,1,1,1,-1,-1,-1,-1
// TODO: Avoid duplicating code in ImmutableMapTest// suite,1,1,1,1,-1,-1,-1,-1
"// TODO: Descriptive assertion messages, with hints as to probable fixes.// TODO: Add another constructor parameter indicating whether the class under test is ordered, and// check the order if so.// TODO: Refactor to share code with SetTestBuilder etc.",1,1,1,1,-1,-1,-1,-1
"// TODO: Investigate the extent to which, in practice, maps that support// put() also support Entry.setValue().",1,1,1,1,-1,-1,-1,-1
"// TODO: Once invariant support is added, supply invariants to each of the// derived suites, to check that mutations to the derived collections are// reflected in the underlying map.",1,1,1,1,-1,-1,-1,-1
"// TODO: Prove that this cast is safe, even though// Collections.unmodifiableSortedMap requires the same key type.",1,1,1,1,-1,-1,-1,-1
// TODO: Re-enable this test after moving to new serialization format in ImmutableMap.// SerializableTester,1,1,1,1,-1,-1,-1,-1
// TODO: Reduce duplication of ImmutableMapTest code// suite,1,1,1,1,-1,-1,-1,-1
"// TODO: Restore the following line when Monitor.hasWaiters() no longer acquires the lock.// assertEquals(false, invokeMethod(""hasWaiters"", conditionLikeObject));",0,1,1,1,-1,-1,-1,-1
"// TODO: Specify different numbers of rows and columns, to detect problems// that arise when the wrong size is used.",1,1,1,1,-1,-1,-1,-1
"// TODO: Switch to JUnit 4 and use @Parameterized and @BeforeClass// Note: @Test annotations are deliberate, as some subclasses specify @RunWith(JUnit4).",1,1,1,1,-1,-1,-1,-1
"// TODO: Test enter(long, TimeUnit).// TODO: Test enterWhen(Guard, long, TimeUnit).// TODO: Test enterIf(Guard, long, TimeUnit).// TODO: Test waitFor(Guard, long, TimeUnit).// TODO: Test getQueueLength().// TODO: Test hasQueuedThreads().// TODO: Test getWaitQueueLength(Guard).// TODO: Test automatic signaling before leave, waitFor, and reentrant enterWhen.// TODO: Test blocking to re-enter monitor after being signaled.// TODO: Test interrupts with both interruptible and uninterruptible monitor.// TODO: Test multiple waiters: If guard is still satisfied, signal next waiter.// TODO: Test multiple waiters: If guard is no longer satisfied, do not signal next waiter.",0,1,1,1,-1,-1,-1,-1
// TODO: call conversion constructors or factory methods instead of using// populate() on an empty map,1,1,1,1,-1,-1,-1,-1
// TODO: investigate some API changes to SampleElements that would tidy up// parts of the following classes.,1,1,1,1,-1,-1,-1,-1
"// TODO: tests that check the weird interplay between expected size,// maximum size, size of initial contents, default capacity...",1,1,1,1,-1,-1,-1,-1
// TODO: the overwhelming number of suppressions below suggests that maybe// it's not worth having a varargs form of this method at all...,1,1,1,1,-1,-1,-1,-1
// TODO: throw something else? Do we worry that people's code and tests// might be relying on this particular type of exception?,1,1,1,1,-1,-1,-1,-1
// TODO: track seen elements when order isn't guaranteed// TODO: verify contents afterward// TODO: something shiny and new instead of Stack// TODO: test whether null is supported (create a Feature),1,1,1,1,-1,-1,-1,-1
"// TODO: with appropriate refactoring of OneSizeGenerator, we can perhaps// tidy this up and get rid of the casts here and in// MapValueCollectionGenerator.",1,1,1,1,-1,-1,-1,-1
// Tests for Graph.edges() and Network.asGraph().edges() methods// TODO(user): Move these to a more appropriate location in the test suite.,1,1,1,1,-1,-1,-1,-1
"// The comparator used by this map.  It's the same as that of sortedDelegate,// except that when sortedDelegate's comparator is null, it points to a// non-null instance of Ordering.natural().// (cpovirk: Is sortedDelegate's comparator really ever null?)// The comparator will likely also differ because of our nullAccepting hack.// See the bottom of the file for more information about it.",1,1,0,1,-1,-1,-1,-1
"// This class can make no hard guarantees.  The methods in this class are inherently flaky, but// we try hard to make them robust in practice.  We could additionally try to add in a system// load timeout multiplier.  Or we could try to use a CPU time bound instead of wall clock time// bound.  But these ideas are harder to implement.  We do not try to detect or handle a// user-specified -XX:+DisableExplicitGC.//// TODO(user): Consider using// java/lang/management/OperatingSystemMXBean.html#getSystemLoadAverage()//// TODO(user): Consider scaling by number of mutator threads,// e.g. using Thread#activeCount()",1,1,0,1,-1,-1,-1,-1
"// This is a bit of a hack but lets us do quicker per-character checks in// the fast path code. The safe min/max values are very unlikely to extend// into the range of surrogate characters, but if they do we must not test// any values in that range. To see why, consider the case where:// safeMin <= {hi,lo} <= safeMax// where {hi,lo} are characters forming a surrogate pair such that:// codePointOf(hi, lo) > safeMax// which would result in the surrogate pair being (wrongly) considered safe.// If we clip the safe range used during the per-character tests so it is// below the values of characters in surrogate pairs, this cannot occur.// This approach does mean that we break out of the fast path code in cases// where we don't strictly need to, but this situation will almost never// occur in practice.",1,1,1,1,-1,-1,-1,-1
"// This lock protects the task so we can ensure that none of the template methods (startUp,// shutDown or runOneIteration) run concurrently with one another.// TODO(lukes): why don't we use ListenableFuture to sequence things? Then we could drop the// lock.",1,1,1,1,-1,-1,-1,-1
// This object retains references to collections returned by keySet() and value(). This saves// bytes when the both the map and its keySet or value collection are written to the same// instance of ObjectOutputStream.// TODO(b/160980469): remove support for the old serialization format after some time,1,1,1,1,-1,-1,-1,-1
"// Throws an ArithmeticException if ""the simple implementation"" of binomial coefficients overflows// TODO",1,1,1,1,-1,-1,-1,-1
"// assert timeoutNanos == 0L || startTime != 0L;// TODO : NOT CORRECT, BUT TESTS PASS ANYWAYS!// if (true) return timeoutNanos;// ONLY 2 TESTS FAIL IF WE DO:// if (true) return 0;",1,1,1,1,-1,-1,-1,-1
// cause the createArray() method missing in the generated javascript.// TODO: Remove this once the GWT bug is fixed.,1,1,1,1,-1,-1,-1,-1
// halfPowersOf10[i] = largest long less than 10^(i + 0.5)// TODO,1,1,1,1,-1,-1,-1,-1
// otherwise try to presize a StringBuilder// it is kind of lame that we need to construct a decoder to access this value.// if this is a concern we could add special cases for some known charsets (like utf8)// or we could avoid inputstreamreader and use the decoder api directly// TODO(lukes): in a real implementation we would need to handle overflow conditions,1,1,1,1,-1,-1,-1,-1
"// read the first 8 chars manually, since there's no equivalent to ByteSource.slice// TODO(cgdecker): Add CharSource.slice?",1,1,1,1,-1,-1,-1,-1
"// the keySet() of the delegate is only a Set and TreeMap.navigatableKeySet// is not available in GWT yet.  To keep the code simple and code size more,// we make a copy here, instead of creating a view of it.//// TODO: revisit if it's unbearably slow or when GWT supports// TreeMap.navigatbleKeySet().",1,1,1,1,-1,-1,-1,-1
// use a dense table if more than half of the cells have values// TODO(gak): tune this condition based on empirical evidence,1,1,1,1,-1,-1,-1,-1
/**     * TODO(lukes): This was copied verbatim from Striped64.java... standardize this?     */,1,1,1,1,-1,-1,-1,-1
"/* TODO Jenkins.logRecords empty during a test, and adding a handler to root logger in JenkinsRule.before() does not work:        assertTrue(log, log.contains(""Nonexistent""));        */",1,1,1,1,-1,-1,-1,-1
"/* TODO cannot follow what this is purporting to test    @Test    public void testDoDoDelete() throws Exception {        GlobalMatrixAuthorizationStrategy auth = new GlobalMatrixAuthorizationStrategy();        j.jenkins.setAuthorizationStrategy(auth);        j.jenkins.setCrumbIssuer(null);        HudsonPrivateSecurityRealm realm = new HudsonPrivateSecurityRealm(false);        j.jenkins.setSecurityRealm(realm);        User user = realm.createAccount(""John Smith"", ""password"");        User user2 = realm.createAccount(""John Smith2"", ""password"");        user2.save();        auth.add(Jenkins.ADMINISTER, user.getId());        auth.add(Jenkins.READ, user2.getId());        SecurityContextHolder.getContext().setAuthentication(user.impersonate2());        HtmlForm form = j.createWebClient().login(user.getId(), ""password"").goTo(user2.getUrl() + ""/delete"").getFormByName(""delete"");        j.submit(form);        assertFalse(""User should be deleted from memory."", User.getAll().contains(user2));        assertFalse(""User should be deleted with his persistent data."", user2.getConfigFile().exists());        User.reload();        assertNull(""Deleted user should not be loaded."", User.get(user2.getId(),false, Collections.EMPTY_MAP));        user2 = realm.createAccount(""John Smith2"", ""password"");        SecurityContextHolder.getContext().setAuthentication(user2.impersonate2());        try{            user.doDoDelete(null, null);            fail(""User should not have permission to delete another user."");        }        catch(Exception e){            if (!(e.getClass().isAssignableFrom(AccessDeniedException3.class))){               fail(""AccessDeniedException should be thrown."");            }        }        user.save();        JenkinsRule.WebClient client = j.createWebClient();        form = client.login(user.getId(), ""password"").goTo(user.getUrl() + ""/delete"").getFormByName(""delete"");        try{            j.submit(form);            fail(""User should not be able to delete himself"");        }        catch(FailingHttpStatusCodeException e){            //ok exception should be thrown            Assert.assertEquals(400, e.getStatusCode());        }        assertTrue(""User should not delete himself from memory."", User.getAll().contains(user));        assertTrue(""User should not delete his persistent data."", user.getConfigFile().exists());    }    */",1,1,1,1,-1,-1,-1,-1
"/* TODO currently still loads the detached 1.0, since we only skip $shortName.[jh]pi not $shortName-$version.[jh]pi; during PLUGINS_LISTED there is a list of known filenames but not short names            assertEquals(""1.3"", r.jenkins.pluginManager.getPlugin(""command-launcher"").getVersion());            */",1,1,1,1,-1,-1,-1,-1
"/* TODO fix utility to also accept case that the permalink is not mentioned at all:        assertStorage(lfb, p, null);        */",1,1,1,1,-1,-1,-1,-1
/* TODO how to calculate transitive dependencies automatically? */,1,1,1,1,-1,-1,-1,-1
"/* TODO https://github.com/apache/httpcomponents-client/commit/8c04c6ae5e5ba1432e40684428338ce68431766b#r32873542        r.createWebClient().assertFails(""plugin/matrix-auth/images/%2E%2E/images/user-disabled.png"", HttpServletResponse.SC_INTERNAL_SERVER_ERROR); // IAE from TokenList.<init>        r.createWebClient().assertFails(""plugin/matrix-auth/images/%252E%252E/images/user-disabled.png"", HttpServletResponse.SC_BAD_REQUEST); // SECURITY-131        r.createWebClient().assertFails(""plugin/matrix-auth/images/%25252E%25252E/images/user-disabled.png"", HttpServletResponse.SC_BAD_REQUEST); // just checking        */",1,1,1,1,-1,-1,-1,-1
/* TODO switch agent logs to UTF-8 */,1,1,1,1,-1,-1,-1,-1
"/* TODO the certificate is now expired, and downloading a fresh copy did not seem to help */",1,1,1,1,-1,-1,-1,-1
/* TODO this information appears to have been deliberately removed from Spring Security:        Authentication auth = failed.getAuthentication();        if (auth != null) {            SecurityListener.fireFailedToLogIn(auth.getName());        }        */,1,1,1,1,-1,-1,-1,-1
"/* TODO this still fails occasionally, for reasons TBD (I think because User.getAll sometimes is empty):        assertNotNull(page.getElementById(""person-bob""));        */",1,1,1,1,-1,-1,-1,-1
"/* TODO too slow, seems capable of causing testWorkspaceLock to time out:    @Test    @Issue(""JENKINS-15156"")    public void testGetBuildAfterGC() {        FreeStyleProject job = j.createFreeStyleProject();        job.scheduleBuild2(0, new Cause.UserIdCause()).get();        j.jenkins.queue.clearLeftItems();        MemoryAssert.assertGC(new WeakReference(job.getLastBuild()));        assert job.lastBuild != null;    }     */",1,1,1,1,-1,-1,-1,-1
"/* TODO unclear what exactly this is purporting to assert    @Test    public void testSave() throws IOException {        User user = User.get(""User"");        MyViewsProperty property = new MyViewsProperty(AllView.DEFAULT_VIEW_NAME);        property.readResolve();        property.setUser(user);        user.addProperty(property);        View view = new ListView(""foo"", property);        property.addView(view);        property.setPrimaryViewName(view.name);        User.reload();        property = User.get(""User"").getProperty(property.getClass());        assertNotSame(""Property should not have primary view "" + view.name, view.name, property.getPrimaryViewName());        property.setUser(user);        property.addView(view);        property.setPrimaryViewName(view.name);        property.save();        User.reload();        property = User.get(""User"").getProperty(property.getClass());        assertEquals(""Property should have primary view "" + view.name + "" instead of "" + property.getPrimaryViewName(), view.name, property.getPrimaryViewName());    }    */",1,1,1,1,-1,-1,-1,-1
"/* TODO unclear what the Spring Security equivalent is; check AbstractAuthenticationProcessingFilter, SavedRequest        String url = AbstractProcessingFilter.obtainFullRequestUrl(req);        if (url!=null) {            // if the login redirect is initiated by Acegi            // this should send the user back to where s/he was from.            rsp.sendRedirect2(url);            return;        }        */",1,1,1,1,-1,-1,-1,-1
/* TODO until it is the default */,1,1,1,1,-1,-1,-1,-1
/* TODO what is the user expectation? */,1,1,1,1,-1,-1,-1,-1
/** * @deprecated as of 1.XXX *      Use {@link Jenkins#getDescriptor(Class)} */,0,1,1,1,-1,-1,-1,-1
"/** * @deprecated as of TODO *      The caller should use {@link #StreamBuildListener(OutputStream, Charset)} to pass in *      the charset and output stream separately, so that this class can handle encoding correctly. */",1,1,1,1,-1,-1,-1,-1
"/** * @deprecated as of TODO *      The caller should use {@link #StreamTaskListener(File, Charset)} to pass in *      the charset and file separately, so that this class can handle encoding correctly. */",1,1,1,1,-1,-1,-1,-1
"/** * @deprecated as of TODO *      The caller should use {@link #StreamTaskListener(OutputStream, Charset)} to pass in *      the charset and output stream separately, so that this class can handle encoding correctly, *      or use {@link #fromStdout()} or {@link #fromStderr()}. */",1,1,1,1,-1,-1,-1,-1
/** * @deprecated use TODO or {@link SimpleGrantedAuthority} */,1,1,1,1,-1,-1,-1,-1
/** * @deprecated use TODO or {@link org.springframework.security.core.Authentication} */,1,1,1,1,-1,-1,-1,-1
/** * @deprecated use TODO or {@link org.springframework.security.core.GrantedAuthority} */,1,1,1,1,-1,-1,-1,-1
"/** * @param clazz *      Pass in {@link #self()} to have the descriptor describe itself, *      (this hack is needed since derived types can't call ""getClass()"" to refer to itself. */",1,1,1,1,-1,-1,-1,-1
/** * A listener for task related events from executors. * A {@link Computer#getRetentionStrategy} or {@link SlaveComputer#getLauncher} may implement this interface. * Or you may create an implementation as an extension (since TODO). * @author Stephen Connolly * @since 1.312 */,1,1,1,1,-1,-1,-1,-1
/** * A view that delegates to another. * * TODO: this does not respond to renaming or deleting the proxied view. * * @author Tom Huybrechts */,1,1,1,1,-1,-1,-1,-1
"/** * Box to be rendered in the side panel. * * <h2>Views</h2> * <ul> * <li><b>index.jelly</b> should display the widget. It should have: *   {@code <l:pane width=""2"" title=""…""> …body… </l:pane>} structure. *   In this view, ""it"" points to the {@link Widget} and ""view"" points to {@link View} *   that's rendering the widget. * </ul> * * TODO: *  - make Widget describable and provide the UI to let admin configure widgets? *    - backward compatibility implications? * * @author Kohsuke Kawaguchi * @since 1.146 * @see jenkins.model.Jenkins#getWidgets() */",1,1,1,1,-1,-1,-1,-1
"/** * Called once the changelog is determined. * * <p> * During a build, Jenkins fetches the update of the workspace from SCM, * and determines the changelog (see {@link SCM#checkout}). Immediately * after that, a build will invoke this method on all registered * {@link SCMListener}s. * * <p> * If a build failed before we successfully determine changelog, this method * will not be invoked (for example, if ""cvs update"" failed.) OTOH, this method * is invoked before the actual build (like ant invocation) happens. * * <p> * This is an opportunity for SCM-related plugins to act on changelog. * A typical usage includes parsing commit messages and do cross-referencing * between other systems. Implementations can also contribute {@link Action} * to {@link AbstractBuild} (by {@code build.getActions().add(...)} to * display additional data on build views. * * <p> * TODO: once we have cvsnews plugin, refer to its usage. * * @param build *      The build in progress, which just finished determining changelog. *      At this point this build is still in progress. Never null. * @param listener *      {@link BuildListener} for on-going build. This can be used to report *      any errors or the general logging of what's going on. This will show *      up in the ""console output"" of the build. Never null. * @param changelog *      Set of changes detected in this build. This is the same value *      returned from {@link AbstractBuild#getChangeSet()} but passed *      separately for convenience. * * @throws Exception *      If any exception is thrown from this method, it will be recorded *      and causes the build to fail. * @since 1.568 */",1,1,0,1,-1,-1,-1,-1
/** * Check if the relative child is really a descendant after symlink resolution if any. * * TODO un-restrict it in a weekly after the patch */,1,1,1,1,-1,-1,-1,-1
"/** * Check if the relative path is really a descendant of this folder, following the symbolic links. * Meant to be used in coordination with {@link #child(String)}. * * TODO un-restrict it in a weekly after the patch */",1,1,1,1,-1,-1,-1,-1
"/** * Checks if there has been any changes to this module in the repository. * * TODO: we need to figure out a better way to communicate an error back, * so that we won't keep retrying the same node (for example an agent might be down.) * * <p> * If the SCM doesn't implement polling, have the {@link #supportsPolling()} method * return false. * * @param project *      The project to check for updates * @param launcher *      Abstraction of the machine where the polling will take place. If SCM declares *      that {@linkplain #requiresWorkspaceForPolling() the polling doesn't require a workspace}, this parameter is null. * @param workspace *      The workspace directory that contains baseline files. If SCM declares *      that {@linkplain #requiresWorkspaceForPolling() the polling doesn't require a workspace}, this parameter is null. * @param listener *      Logs during the polling should be sent here. * * @return true *      if the change is detected. * * @throws InterruptedException *      interruption is usually caused by the user aborting the computation. *      this exception should be simply propagated all the way up. * * @see #supportsPolling() * * @deprecated as of 1.345 *      Override {@link #calcRevisionsFromBuild(AbstractBuild, Launcher, TaskListener)} and *      {@link #compareRemoteRevisionWith(AbstractProject, Launcher, FilePath, TaskListener, SCMRevisionState)} for implementation. * *      The implementation is now separated in two pieces, one that computes the revision of the current workspace, *      and the other that computes the revision of the remote repository. * *      Call {@link #poll(AbstractProject, Launcher, FilePath, TaskListener, SCMRevisionState)} for use instead. */",1,1,1,1,-1,-1,-1,-1
"/** * Closes the item and logs error to the log in the case of error. * Logging will be performed on the {@code WARNING} level. * @param toClose Item to close. Nothing will happen if it is {@code null} * @param logger Logger, which receives the error * @param closeableName Name of the closeable item * @param closeableOwner String representation of the closeable holder * @since 2.19, but TODO update once un-restricted */",1,1,0,1,-1,-1,-1,-1
/** * Create a new {@link HttpClient.Builder} preconfigured with Jenkins-specific default settings. * * <p>The Jenkins-specific default settings include a proxy server and proxy authentication (as * configured by {@link ProxyConfiguration}) and a connection timeout (as configured by {@link * ProxyConfiguration#DEFAULT_CONNECT_TIMEOUT_MILLIS}). * * @return an {@link HttpClient.Builder} * @since TODO */,1,1,1,1,-1,-1,-1,-1
/** * Create a new {@link HttpRequest.Builder} builder with the given URI preconfigured with * Jenkins-specific default settings. * * <p>The Jenkins-specific default settings include a custom user agent on the controller * (unless {@link UserAgentURLConnectionDecorator#DISABLED} is true). * * @param uri the request URI * @return an {@link HttpRequest.Builder} * @throws IllegalArgumentException if the URI scheme is not supported * @since TODO */,1,1,0,1,-1,-1,-1,-1
/** * Creates a seriously hacked up {@link CopyOnWriteList} that acts as a view to the current {@link ExtensionList}. */,1,1,1,1,-1,-1,-1,-1
"/** * Default convenience implementation of {@link RetentionStrategy} for agents provisioned from {@link Cloud}. * * If an agent is idle for 10 mins, this retention strategy will remove the agent. This can be used as-is for * a {@link Node} provisioned by cloud to implement the auto-scaling semantics, it can be subtyped to tweak * the behavior, or it can be used as an example. * <p>TODO {@link CloudRetentionStrategy} seems to be a better implementation. * @author Kohsuke Kawaguchi * @since 1.510 */",1,1,0,1,-1,-1,-1,-1
"/** * Defines the location of the detached plugins in the WAR. * @return by default, {@code /WEB-INF/detached-plugins} * @since TODO */",1,1,1,1,-1,-1,-1,-1
"/** * Deletes the Fingerprint with the given unique ID. * This acts as a blocking operation. For file system based default storage, throws IOException when it fails. * The unique ID for a fingerprint is defined by {@link Fingerprint#getHashString()}. * TODO: Needed for external storage fingerprint cleanup. * * @throws IOException Deletion error */",1,1,1,1,-1,-1,-1,-1
/** * Determine if the implementation supports the {@link #isDescendant(String)} method * * TODO un-restrict it in a weekly after the patch */,1,1,1,1,-1,-1,-1,-1
/** * Executor service that logs otherwise uncaught errors. * TODO is there anything in Guava for this? */,1,1,1,1,-1,-1,-1,-1
"/** * Generalization of a function that takes text with some markup and converts that to HTML. * Such markup is often associated with Wiki. * * <p> * Use of markup, as opposed to using raw HTML, ensures certain degree of security. * * <p> * This is an extension point in Hudson, allowing plugins to implement different markup formatters. * * <p> * Implement the following methods to enable and control CodeMirror syntax highlighting * public String getCodeMirrorMode() // return null to disable CodeMirror dynamically * public String getCodeMirrorConfig() * * <h2>Views</h2> * <p> * This extension point must have a valid {@code config.jelly} that feeds the constructor. * * TODO: allow {@link MarkupFormatter} to control the UI that the user uses to edit. * * @author Kohsuke Kawaguchi * @since 1.391 * @see jenkins.model.Jenkins#getMarkupFormatter() */",1,1,0,1,-1,-1,-1,-1
"/** * Get a human readable string representing strings like ""xxx days ago"", * which should be used to point to the occurrence of an event in the past. * @deprecated Actually identical to {@link #getTimeSpanString}, does not add {@code ago}. */",1,1,1,1,-1,-1,-1,-1
"/** * Gets the default base URL. * * @deprecated *      TODO: revisit tool update mechanism, as that should be de-centralized, too. In the mean time, *      please try not to use this method, and instead ping us to get this part completed. */",1,1,1,1,-1,-1,-1,-1
/** * Hack to set a web app initial parameter afterwards. Only works with Jetty. * @param property property to set * @param value value of the property */,1,1,1,1,-1,-1,-1,-1
/** * Hex-binary encoding stream. * * TODO: use base64binary. * * @author Kohsuke Kawaguchi * @see DecodingStream */,1,1,1,1,-1,-1,-1,-1
"/** * Historical holder for map. * * TODO all this mess including {@link #numberOnDisk} could probably be simplified to a single {@code TreeMap<Integer,BuildReference<R>>} * where a null value means not yet loaded and a broken entry just uses {@code NoHolder}. * * The idiom is that you put yourself in a synchronized block, {@linkplain #copy() make a copy of this}, * update the copy, then set it to {@link #index}. */",1,1,1,1,-1,-1,-1,-1
"/** * Host name that we advertise protocol clients to connect to. * This is primarily for those who have reverse proxies in place such that the HTTP host name * and the TCP/IP connection host names are different. * (Note: despite the name, this is used for any client, not only deprecated Remoting-based CLI.) * TODO: think about how to expose this (including whether this needs to be exposed at all.) */",1,1,0,1,-1,-1,-1,-1
"/** * Implements the dual authentication mechanism. * * <p> * Jenkins supports both the HTTP basic authentication and the form-based authentication. * The former is for scripted clients, and the latter is for humans. Unfortunately, * because the servlet spec does not allow us to programmatically authenticate users, * we need to rely on some hack to make it work, and this is the class that implements * that hack. * * <p> * When an HTTP request arrives with an HTTP basic auth header, this filter detects * that and emulate an invocation of {@code /j_security_check} * (see <a href=""http://mail-archives.apache.org/mod_mbox/tomcat-users/200105.mbox/%3C9005C0C9C85BD31181B20060085DAC8B10C8EF@tuvi.andmevara.ee%3E"">this page</a> for the original technique.) * * <p> * This causes the container to perform authentication, but there's no way * to find out whether the user has been successfully authenticated or not. * So to find this out, we then redirect the user to * {@link jenkins.model.Jenkins#doSecured(StaplerRequest, StaplerResponse) /secured/... page}. * * <p> * The handler of the above URL checks if the user is authenticated, * and if not report an HTTP error code. Otherwise the user is * redirected back to the original URL, where the request is served. * * <p> * So all in all, the redirection works like {@code /abc/def} → {@code /secured/abc/def} * → {@code /abc/def}. * * <h2>Notes</h2> * <ul> * <li> * The technique of getting a request dispatcher for {@code /j_security_check} may not * work for all containers, but so far that seems like the only way to make this work. * <li> * This A → B → A redirect is a cyclic redirection, so we need to watch out for clients * that detect this as an error. * </ul> * * @author Kohsuke Kawaguchi */",1,1,1,1,-1,-1,-1,-1
"/** * Information about a Hudson agent node. * * <p> * Ideally this would have been in the {@code hudson.slaves} package, * but for compatibility reasons, it can't. * * <p> * TODO: move out more stuff to {@link DumbSlave}. * * On February, 2016 a general renaming was done internally: the ""slave"" term was replaced by * ""Agent"". This change was applied in: UI labels/HTML pages, javadocs and log messages. * Java classes, fields, methods, etc were not renamed to avoid compatibility issues. * See <a href=""https://www.jenkins.io/issue/27268"">JENKINS-27268</a>. * * @author Kohsuke Kawaguchi */",1,1,1,1,-1,-1,-1,-1
/** * Lists up additional bundled plugins from the system property {@code hudson.bundled.plugins}. * Since 1.480 glob syntax is supported. * For use in {@code mvn jetty:run}. * TODO: maven-hpi-plugin should inject its own InitStrategy instead of having this in the core. */,1,1,1,1,-1,-1,-1,-1
"/** * May be overridden to provide tool-specific validation of a tool home directory. * @param home a possible value for {@link ToolInstallation#getHome}, known to already exist on the controller TODO(terminology) or is it built-in? * @return by default, {@link FormValidation#ok()} * @since 1.563 */",1,1,1,1,-1,-1,-1,-1
"/** * Obtains the clock difference between this side and that side of the channel. * * <p> * This is a hack to wrap the whole thing into a simple {@link Callable}. * * <ol> *     <li>When the callable is sent to remote, we capture the time (on this side) in {@link GetClockDifference2#startTime} *     <li>When the other side receives the callable it is {@link GetClockDifference2}. *     <li>We capture the time on the other side and {@link GetClockDifference3} gets sent from the other side *     <li>When it's read on this side as a return value, it morphs itself into {@link ClockDifference}. * </ol> */",1,1,1,1,-1,-1,-1,-1
/** * Parses the expression into a label expression tree. * * TODO: replace this with a real parser later * * @param labelExpression the label expression to be parsed * @throws IllegalArgumentException if the label expression cannot be parsed */,1,1,1,1,-1,-1,-1,-1
/** * Previous build. Can be null. * TODO JENKINS-22052 this is not actually implemented any more * * External code should use {@link #getPreviousBuild()} */,1,1,1,1,-1,-1,-1,-1
"/** * Provides a configuration form for {@link Jenkins#clouds}. * * Has been overhauled in Jenkins 2.XXX to no longer contribute to Configure System, but be a standalone form. */",0,1,1,1,-1,-1,-1,-1
"/** * Records a selected set of logs so that the system administrator * can diagnose a specific aspect of the system. * * TODO: still a work in progress. * * <p><strong>Access Control</strong>: * {@link LogRecorder} is only visible for administrators and system readers, and this access control happens at * {@link jenkins.model.Jenkins#getLog()}, the sole entry point for binding {@link LogRecorder} to URL. * * @author Kohsuke Kawaguchi * @see LogRecorderManager */",1,1,1,1,-1,-1,-1,-1
/** * Reloads this job from the disk. * * Exposed through CLI as well. * * TODO: think about exposing this to UI * * @since 1.556 */,1,1,1,1,-1,-1,-1,-1
"/** * Remoting interface used for {@link FilePath#copyRecursiveTo(String, FilePath)}. * * TODO: this might not be the most efficient way to do the copy. */",1,1,1,1,-1,-1,-1,-1
"/** * Represents an order-preserving <a href=""https://en.wikipedia.org/wiki/Tag_cloud"">tag cloud</a> * where each keyword gets a weight and displayed according to their weight. * * TODO: define a view on its own. * * @since 1.322 */",1,1,1,1,-1,-1,-1,-1
/** * Return a new {@link HttpClient} with Jenkins-specific default settings. * * <p>Equivalent to {@code newHttpClientBuilder().build()}. * * <p>The Jenkins-specific default settings include a proxy server and proxy authentication (as * configured by {@link ProxyConfiguration}) and a connection timeout (as configured by {@link * ProxyConfiguration#DEFAULT_CONNECT_TIMEOUT_MILLIS}). * * @return a new {@link HttpClient} * @since TODO */,1,1,0,1,-1,-1,-1,-1
"/** * Sets execute permission on all files, since unzip etc. might not do this. * Hackish, is there a better way? */",1,1,1,1,-1,-1,-1,-1
/** * TODO Make public when be moved to cloudbees-folder-plugin. */,1,1,1,1,-1,-1,-1,-1
/** * TODO un-restrict it in a weekly after the patch */,1,1,1,1,-1,-1,-1,-1
/** * TODO: Code partially duplicated with HistoryPageFilterTest in core * * Search in case insensitive mode is tested by unit tests in HistoryPageFilterTest. */,1,1,1,1,-1,-1,-1,-1
/** * TODO: need to learn more about concurrent access to {@link Injector} and how it interacts * with classloading. */,1,1,1,1,-1,-1,-1,-1
/** * TODO: revisit where/how to expose this. This is an experiment. */,1,1,1,1,-1,-1,-1,-1
"/** * The seed stored in this property is used to have a revoke feature on the session * without having to hack the session management that depends on the application server used to run the instance. * * The seed is added to the session when a user just logged in and then for every request, * before using the session information, we check the seed was not changed in the meantime. * * This feature allows the admin to revoke all the sessions that are in the wild without having to keep a list of them. * * @see hudson.security.AuthenticationProcessingFilter2 for the addition of seed inside the session * @see hudson.security.HttpSessionContextIntegrationFilter2 for the seed check from the session before using it */",0,1,1,1,-1,-1,-1,-1
"/** * This class tests that environment variables from node properties are applied, * and that the priority is maintained: parameters > agent node properties > * global (controller) node properties * TODO(terminology) confirm that the built-in node has node properties separate from global (controller) node properties */",1,1,1,1,-1,-1,-1,-1
/** * Tries to move/rename a file from one path to another. * Uses {@link java.nio.file.Files#move} when available. * Does not use {@link java.nio.file.StandardCopyOption#REPLACE_EXISTING} or any other options. * TODO candidate for moving to {@link Util} */,1,1,1,1,-1,-1,-1,-1
/** * Triggers the schedule update now. * * TODO: ajax on the client side to wait until the update completion might be nice. */,1,1,1,1,-1,-1,-1,-1
"/** * YUI tooltips require that the attribute not be set, otherwise a white rectangle will show on hover * TODO: This might be able to be removed when we move away from YUI tooltips to a better solution */",1,1,1,1,-1,-1,-1,-1
/** * {@link OptionHandler}s that should be auto-discovered. * TODO is this actually necessary? {@code @MetaInfServices(OptionHandler.class)} seems to work as well. * @author Kohsuke Kawaguchi */,1,1,1,1,-1,-1,-1,-1
"/** * {@link XMLFilter} that checks the proper nesting of table related tags. * * <p> * Browser often ""fixes"" HTML by moving tables into the right place, * so failure to generate proper tables can result in a hard-to-track bugs. * * <p> * TODO: where to apply this in stapler? * JellyClassTearOff creates XMLOutput. Perhaps we define a decorator? * We can also wrap Script. would that work better? * * @author Kohsuke Kawaguchi */",1,1,1,1,-1,-1,-1,-1
"// ""constructed==null"" test is an ugly hack to avoid launching before the object is fully",1,1,1,1,-1,-1,-1,-1
// ** END HACK ** //,1,1,1,1,-1,-1,-1,-1
// ** HACK AROUND JENKINS-50422: manually restarting ** //,1,1,1,1,-1,-1,-1,-1
// @Exported -- TODO unsure,1,1,0,1,-1,-1,-1,-1
// FIXME @StaplerNotDispatchable,1,1,0,1,-1,-1,-1,-1
// FIXME allow to set a global crontab spec,1,1,0,1,-1,-1,-1,-1
// FIXME this failed to compile super(owner.getBuild().toString()+' '+owner.getDisplayName());,1,1,0,1,-1,-1,-1,-1
// FIXME using similar stuff as in the maven plugin could be better,1,1,1,1,-1,-1,-1,-1
"// FIXME: Should the messages be moved, or kept where they are for backward compatibility?",1,1,0,1,-1,-1,-1,-1
// Hack to get String builds usable in lambda below,1,1,1,1,-1,-1,-1,-1
"// Hack: properties is not serializable, so try to serialize as XML (in another thread); delete <properties/>; deserialize; then load a clone",1,1,1,1,-1,-1,-1,-1
"// TODO ""."" (in second ancestor) is what Stapler currently fails to do. Could edit test to use "".."" but set a different request path?",1,1,1,1,-1,-1,-1,-1
// TODO -webSocket currently produces a stack trace,1,1,1,1,-1,-1,-1,-1
// TODO .replace does not seem to work,1,1,1,1,-1,-1,-1,-1
// TODO : Using the @Nested class might be cleaner for SECURITY-2558 tests,1,1,1,1,-1,-1,-1,-1
// TODO @Exported assuming we want this in the API,1,1,1,1,-1,-1,-1,-1
// TODO ABORTED would perhaps make more sense than FAILURE:,1,1,1,1,-1,-1,-1,-1
// TODO AbstractItem.renameTo has a more baroque implementation; factor it out into a utility method perhaps?,1,1,1,1,-1,-1,-1,-1
// TODO AperiodicWork would be more idiomatic,1,1,1,1,-1,-1,-1,-1
// TODO COPIED FROM hudson.remoting,1,1,1,1,-1,-1,-1,-1
// TODO Changing the second arg to 'true' should reveal some tasks currently hidden for no obvious reason,1,1,1,1,-1,-1,-1,-1
// TODO Do we need to ensure we remain in the context path?,1,1,1,1,-1,-1,-1,-1
// TODO Fix test so it does not pass without this,1,1,1,1,-1,-1,-1,-1
"// TODO HierarchicalStreamWriter#startNode(String, Class) in 1.5.0",1,1,1,1,-1,-1,-1,-1
// TODO I don't think this works,1,1,1,1,-1,-1,-1,-1
// TODO Is this not done through our exception handler?,1,1,1,1,-1,-1,-1,-1
// TODO JENKINS-20663 make this overridable via query parameter,1,1,1,1,-1,-1,-1,-1
// TODO JENKINS-58248 proxy,1,1,1,1,-1,-1,-1,-1
// TODO JENKINS-60562 remove this class,1,1,1,1,-1,-1,-1,-1
// TODO JENKINS-60563 remove MD5 from all usages in Jenkins,1,1,1,1,-1,-1,-1,-1
// TODO Jetty 10 has no obvious equivalent to WebSocketServerFactory.isUpgradeRequest; RFC6455Negotiation?,1,1,1,1,-1,-1,-1,-1
// TODO Make the 'HUDSON_COOKIE' variable less special so we can remove it.,1,1,1,1,-1,-1,-1,-1
// TODO MatchesPattern not available until Hamcrest 2.0,1,1,1,1,-1,-1,-1,-1
// TODO ModelHyperlink,1,1,0,1,-1,-1,-1,-1
"// TODO Move to Stapler's HttpResponses, (also add a corresponding 'text' method)",1,1,1,1,-1,-1,-1,-1
// TODO On Linux file names can contain backslashes which should not treated as file separators.,1,1,1,1,-1,-1,-1,-1
// TODO RealJenkinsRule does not yet support LoggerRule,1,1,1,1,-1,-1,-1,-1
// TODO Remove this workaround after FILEUPLOAD-293 is resolved.,1,1,1,1,-1,-1,-1,-1
// TODO Serializable?,1,1,0,1,-1,-1,-1,-1
// TODO SlaveComputer.doSlaveAgentJnlp; there should be an annotation to request unprotected access,1,1,1,1,-1,-1,-1,-1
// TODO SshCliAuthenticator already autodetects the user based on public key; why cannot AsynchronousCommand.getCurrentUser do the same?,1,1,1,1,-1,-1,-1,-1
// TODO Test with DBS with and without directory index file,1,1,1,1,-1,-1,-1,-1
// TODO This nicer alternative requires https://github.com/jenkinsci/jenkins/pull/2268 or similar to work,1,1,1,1,-1,-1,-1,-1
// TODO What is this even testing?,1,1,1,1,-1,-1,-1,-1
// TODO Why is the next operator a '||' instead of a '&&'?,1,1,1,1,-1,-1,-1,-1
// TODO WindowsPosix actually does something here (WindowsLibC._wchmod); should we let it?,1,1,1,1,-1,-1,-1,-1
// TODO a bit simpler to use LineTransformationOutputStream,1,1,1,1,-1,-1,-1,-1
// TODO ability to handle subprotocols?,1,1,1,1,-1,-1,-1,-1
// TODO add fieldName & definedIn args,1,1,1,1,-1,-1,-1,-1
// TODO again could be made more efficient,1,1,1,1,-1,-1,-1,-1
"// TODO an @Abstract annotation with a matching processor could make it a compile-time error to neglect to override this, without breaking binary compatibility",1,1,1,1,-1,-1,-1,-1
// TODO annotate @GET once baseline includes Stapler version XXX,1,1,1,1,-1,-1,-1,-1
// TODO antimodular; perhaps should have a PluginListener to complement ExtensionListListener?,1,1,1,1,-1,-1,-1,-1
// TODO as above,1,1,1,1,-1,-1,-1,-1
// TODO as in CLIRegisterer this may be doing too much work,1,1,1,1,-1,-1,-1,-1
"// TODO assert that they are contained in order, currently it generally works but flakes after some time",1,1,1,1,-1,-1,-1,-1
// TODO assert that this is IOException: MAC mismatch,1,1,1,1,-1,-1,-1,-1
// TODO assert that this is IOException: Refusing to deserialize unsigned note from an old log.,1,1,1,1,-1,-1,-1,-1
// TODO better support for overlapping update sites,1,1,1,1,-1,-1,-1,-1
"// TODO call uc.updateAllSites() when available? perhaps not, since we should not block on network here",1,1,1,1,-1,-1,-1,-1
"// TODO can this (and its pseudo-override in AbstractProject) share code with GenericItemOptionHandler, used for explicit CLICommand’s rather than CLIMethod’s?",1,1,1,1,-1,-1,-1,-1
"// TODO can we instead use BCryptPasswordEncoder from Spring Security, which has its own copy of BCrypt so we could drop the special library?",1,1,1,1,-1,-1,-1,-1
// TODO cannot easily make tunnel into a @DataBoundSetter because then the @DataBoundConstructor would be on a no-arg constructor,1,1,1,1,-1,-1,-1,-1
// TODO check if DelegatingPasswordEncoder can be used,1,1,1,1,-1,-1,-1,-1
// TODO check if the file is created per test or in general,1,1,1,1,-1,-1,-1,-1
// TODO check instead for SCMTriggerItem:,1,1,1,1,-1,-1,-1,-1
// TODO cleanUp?,1,1,1,1,-1,-1,-1,-1
// TODO cleaner to refactor doJnlpJars into a URA (see also JENKINS-44100),1,1,1,1,-1,-1,-1,-1
// TODO configureLink; viewConfigurationLink; matrixWithPermissionEnabled; matrixWithPermissionDisabled,1,1,1,1,-1,-1,-1,-1
// TODO confirm safe to assume non-null and use getInstance(),1,1,1,1,-1,-1,-1,-1
// TODO consider DISCOVER,1,1,1,1,-1,-1,-1,-1
// TODO consider a simplified @DataBoundConstructor using @DataBoundSetter for description & filter,1,1,1,1,-1,-1,-1,-1
// TODO consider also adding the user of the UserCause when applicable,1,1,1,1,-1,-1,-1,-1
// TODO consider also wrapping in ContextResettingExecutorService,1,1,1,1,-1,-1,-1,-1
// TODO consider caching (expiring cache when actions changes),1,1,1,1,-1,-1,-1,-1
"// TODO consider just querying the build, if any, for its characteristic env vars",1,1,1,1,-1,-1,-1,-1
"// TODO consider promoting to public, and offering a default implementation of randomBytes (via the usual Util.isOverridden binary compat trick)",1,1,1,1,-1,-1,-1,-1
// TODO consider switching @DataBoundConstructor to a ChoiceParameterDefinition(String) overload,1,1,1,1,-1,-1,-1,-1
// TODO consider switching @DataBoundConstructor to a PasswordParameterDefinition(String) overload,1,1,1,1,-1,-1,-1,-1
// TODO consider uniquifying this,1,1,1,1,-1,-1,-1,-1
// TODO consider using run(Callable) here,1,1,1,1,-1,-1,-1,-1
"// TODO could add other types which are known to be safe to copy: Cookie[], Principal, HttpSession, etc.",1,1,1,1,-1,-1,-1,-1
// TODO could also be good to add checkbox that lets users configure a workspace to never be auto-cleaned.,1,1,1,1,-1,-1,-1,-1
// TODO could also go through WebClient to assert that the config UI works,1,1,1,1,-1,-1,-1,-1
// TODO could be made more efficient with numberOnDisk.find,1,1,1,1,-1,-1,-1,-1
"// TODO could check doCheckUpstreamProjects, though it is not terribly interesting",1,1,1,1,-1,-1,-1,-1
"// TODO could delegate to allItems overload taking Authentication, but perhaps more useful to introduce a variant to perform preauth filtering using Predicate and check Item.READ afterwards",1,1,1,1,-1,-1,-1,-1
// TODO could probably be removed since some of the above setters already call save,1,1,1,1,-1,-1,-1,-1
// TODO could use LoggerRule only if it were extracted to an independent library,1,1,1,1,-1,-1,-1,-1
// TODO dependencies installed or upgraded too,0,1,1,1,-1,-1,-1,-1
// TODO determine if there is a meaningful way to generalize this; perhaps as a new [Run]Action recording sensitiveVariables?,1,1,1,1,-1,-1,-1,-1
// TODO do we need an EnvironmentContributingAction variant that takes Run so this can implement it?,1,1,1,1,-1,-1,-1,-1
// TODO do we really want to sort this?,1,1,1,1,-1,-1,-1,-1
// TODO does not allow for optional userinfo.,1,1,1,1,-1,-1,-1,-1
"// TODO duplicated in [jline-2.14.6.jar, jansi-1.11.jar]",1,1,1,1,-1,-1,-1,-1
"// TODO duplicated in [kxml2-2.3.0.jar, xpp3-1.1.4c.jar]",1,1,1,1,-1,-1,-1,-1
// TODO elide duplicates as per CauseAction.getCauseCounts (used in summary.jelly),1,1,1,1,-1,-1,-1,-1
// TODO fire something in SecurityListener?,1,1,1,1,-1,-1,-1,-1
// TODO fire something in SecurityListener? (seems to be used only for REST calls when LegacySecurityRealm is active),1,1,1,1,-1,-1,-1,-1
// TODO fragile,1,1,1,1,-1,-1,-1,-1
"// TODO fromSpring as needed, delegating to AccessDeniedException or AuthenticationException",1,1,1,1,-1,-1,-1,-1
// TODO https://github.com/jenkinsci/jenkins-test-harness/issues/359,1,1,0,1,-1,-1,-1,-1
// TODO i18n,1,1,1,1,-1,-1,-1,-1
// TODO i18n?,1,1,1,1,-1,-1,-1,-1
"// TODO if AsynchronousExecution, do that later",1,1,1,1,-1,-1,-1,-1
"// TODO if equal to Messages.Mailer_Address_Not_Configured(), suggest configuring it with FormValidation.warning?",1,1,1,1,-1,-1,-1,-1
"// TODO implement addAction, addOrReplaceAction, removeAction, removeActions, replaceActions",1,1,1,1,-1,-1,-1,-1
"// TODO implement addOrReplaceAction, removeAction, removeActions, replaceActions",1,1,1,1,-1,-1,-1,-1
// TODO implement other methods as needed,1,1,1,1,-1,-1,-1,-1
// TODO improve when just one file,1,1,1,1,-1,-1,-1,-1
// TODO instead remove it from the process env?,1,1,1,1,-1,-1,-1,-1
// TODO instead render lazily,1,1,1,1,-1,-1,-1,-1
// TODO investigate whether this check can be removed,1,1,1,1,-1,-1,-1,-1
"// TODO is it really still necessary to reimplement all of the below, or could we simply override rememberMeRequested?",1,1,1,1,-1,-1,-1,-1
// TODO is there a simpler way to force the TarOutputStream to be flushed and the reader to start?,1,1,1,1,-1,-1,-1,-1
// TODO is this even permitted by URL.openConnection?,1,1,1,1,-1,-1,-1,-1
"// TODO is this harmful to call unconditionally, so it would apply also to MavenModule for example?",1,1,1,1,-1,-1,-1,-1
// TODO it breaks the Liskov substitutability,1,1,1,1,-1,-1,-1,-1
// TODO log warning when receiving remember-me request despite the feature being disabled?,1,1,1,1,-1,-1,-1,-1
"// TODO lots more to test, e.g. multiple patterns separated by commas; ought to have full code coverage for this method",1,1,1,1,-1,-1,-1,-1
// TODO make URI encoding monitor work when shown on any URL,1,1,1,1,-1,-1,-1,-1
// TODO make reverse proxy monitor work when shown on any URL,1,1,1,1,-1,-1,-1,-1
// TODO may be that keepLog is on (perhaps toggler earlier) yet isKeepLog() would be true anyway.,1,1,1,1,-1,-1,-1,-1
// TODO maybe this should be an error?,1,1,1,1,-1,-1,-1,-1
"// TODO more efficient to change signature to InputStream, then use IOUtils.copy",1,1,1,1,-1,-1,-1,-1
// TODO move tests to indicated test classes when we no longer need to set the system property,1,1,1,1,-1,-1,-1,-1
// TODO nice to have a method to iterate these lazily,1,1,1,1,-1,-1,-1,-1
// TODO no way to avoid routability if implementing StaplerProxy,1,1,1,1,-1,-1,-1,-1
// TODO no way to avoid routability if super type implementing StaplerProxy,1,1,1,1,-1,-1,-1,-1
// TODO or better to call the more generic Job.isBuildable?,1,1,1,1,-1,-1,-1,-1
"// TODO or should we pick up default value, ITEM?",1,1,1,1,-1,-1,-1,-1
// TODO other methods as needed,1,1,1,1,-1,-1,-1,-1
"// TODO other methods as needed: createSuccessAuthentication, getUserCache, etc.",1,1,1,1,-1,-1,-1,-1
// TODO pending API,1,1,1,1,-1,-1,-1,-1
// TODO pending ApI,1,1,1,1,-1,-1,-1,-1
// TODO perhaps allow mode to be defined by environment variable too (assuming $JENKINS_USER_ID can be used for -user),1,1,1,1,-1,-1,-1,-1
// TODO perhaps better to extend AbstractAuthenticationToken,1,1,1,1,-1,-1,-1,-1
// TODO perhaps delegate to the org.springframework.security.acls package,1,1,1,1,-1,-1,-1,-1
"// TODO perhaps deprecate all replace with a single getModuleRoots(FilePath, Run)",1,1,1,1,-1,-1,-1,-1
// TODO possibly now unused (JNLP installation mode is long gone):,1,1,1,1,-1,-1,-1,-1
// TODO potential race condition since other test suites might be running concurrently,1,1,1,1,-1,-1,-1,-1
// TODO probably clearer to configure such things with @DataBoundSetter,1,1,1,1,-1,-1,-1,-1
// TODO randomly fails: Started test0 #1,1,1,1,1,-1,-1,-1,-1
// TODO randomly fails: for p3.upstreamProjects expected:<[hudson.model.FreeStyleProject@590e5b8[test0]]> but was:<[]>,1,1,1,1,-1,-1,-1,-1
"// TODO reasonable to decorate Launcher within a dynamic scope, but this signature does not mix well with Context pattern.",1,1,1,1,-1,-1,-1,-1
// TODO refactor to consolidate multiple versions of the same plugin within the one row,1,1,1,1,-1,-1,-1,-1
// TODO remove restriction on the weekly after the security fix,1,1,1,1,-1,-1,-1,-1
// TODO remove when all plugins are fixed,1,1,1,1,-1,-1,-1,-1
// TODO replace this with something better when we properly expose Nodes.,1,1,1,1,-1,-1,-1,-1
// TODO required plugin installed but inactive,1,1,1,1,-1,-1,-1,-1
// TODO restart scheduled (SuccessButRequiresRestart) after upgrade or Support-Dynamic-Loading: false,1,1,1,1,-1,-1,-1,-1
// TODO return f;,1,1,1,1,-1,-1,-1,-1
"// TODO revalidate the resource list after re-acquiring lock, for now we just let the build fail",1,1,1,1,-1,-1,-1,-1
// TODO seems drastic; could this just be switched to an AdministrativeMonitor?,1,1,1,1,-1,-1,-1,-1
// TODO seems like there should be some trick with VersionNumber to do this,1,1,1,1,-1,-1,-1,-1
// TODO set distinctive Thread.name,1,1,1,1,-1,-1,-1,-1
// TODO should be unnecessary given the 'implies' relationship,1,1,1,1,-1,-1,-1,-1
// TODO should have a null-safe version when Jenkins.getInstanceOrNull() is null; would require changes in ExtensionList,1,1,1,1,-1,-1,-1,-1
// TODO should probably introduce a method for this purpose,1,1,1,1,-1,-1,-1,-1
// TODO should sleep as in Run.writeWholeLogTo,1,1,1,1,-1,-1,-1,-1
// TODO should there be a Run overload of this?,1,1,1,1,-1,-1,-1,-1
// TODO should there be an option to check lastCompletedBuild even if it failed?,1,1,1,1,-1,-1,-1,-1
// TODO should this be core.containsValue(wrap(value))?,1,1,1,1,-1,-1,-1,-1
// TODO should this fireOnUpdated?,1,1,1,1,-1,-1,-1,-1
// TODO should we also update numberOnDisk?,1,1,1,1,-1,-1,-1,-1
"// TODO super Javadoc does not suggest this, but without it, we hang in FutureTask.awaitDone!",1,1,1,1,-1,-1,-1,-1
// TODO support Unix scripts with interpreter line (see Shell.buildCommandLine),1,1,1,1,-1,-1,-1,-1
// TODO switch to Job,1,1,1,1,-1,-1,-1,-1
"// TODO temporary solution, should be moved to Jenkins Test Harness project",1,1,1,1,-1,-1,-1,-1
"// TODO test copying from/to root, or into nonexistent folder",1,1,1,1,-1,-1,-1,-1
// TODO test sane recovery from various error conditions,1,1,1,1,-1,-1,-1,-1
// TODO test that stdout/stderr are in expected encoding (not true of -remoting mode!),1,1,1,1,-1,-1,-1,-1
"// TODO the following really belong in Job, not Item, but too late to move since the owner.name is encoded in the ID:",1,1,1,1,-1,-1,-1,-1
// TODO the reflection provider should have returned the proper field in first place ....,1,1,1,1,-1,-1,-1,-1
// TODO the version in org.kohsuke.stapler is incomplete,1,1,1,1,-1,-1,-1,-1
// TODO there is a theoretical race whereby the node instance is updated/removed after lock release,1,1,1,1,-1,-1,-1,-1
"// TODO this could also verify that j.getRootUrl() has been properly configured, and send a different message if not",1,1,1,1,-1,-1,-1,-1
// TODO this could probably use ACL.as; why is it calling SecurityContext.setAuthentication rather than SecurityContextHolder.setContext?,1,1,1,1,-1,-1,-1,-1
"// TODO this defeats lazy-loading. Should rather do a breadth-first search, as in hudson.plugins.view.dashboard.builds.LatestBuilds",1,1,1,1,-1,-1,-1,-1
// TODO this is not guaranteed invalid forever,1,1,1,1,-1,-1,-1,-1
// TODO this is wrong,1,1,1,1,-1,-1,-1,-1
// TODO this may only check the last build in fact:,1,1,1,1,-1,-1,-1,-1
"// TODO this should be impossible, since we override reactOnCycle to not throw the exception",1,1,1,1,-1,-1,-1,-1
// TODO this should not be in core at all; should be in repo built by a separate job somewhere,1,1,1,1,-1,-1,-1,-1
"// TODO this was mistakenly made to be the ToolDescriptor class name, rather than .id as you would expect; now baked into serial form",1,1,1,1,-1,-1,-1,-1
"// TODO this was previously referenced in the browser-based download, but should probably be checked for the server-based download",1,1,1,1,-1,-1,-1,-1
// TODO this will need to be dropped if the ctor validates schemes,1,1,1,1,-1,-1,-1,-1
// TODO type is probably NodeDescriptor.id but confirm,1,1,1,1,-1,-1,-1,-1
// TODO un-ignore once we use a Stapler release with the fix for this,1,1,1,1,-1,-1,-1,-1
"// TODO uncomment once we can have a delegating ClassFilter, also add SystemProperty to toggle feature",1,1,1,1,-1,-1,-1,-1
// TODO until https://github.com/jenkinsci/jenkins-test-harness/pull/243 is widely adopted:,1,1,1,1,-1,-1,-1,-1
// TODO use !Functions.isExtensionsAvailable() once JENKINS-33377,1,1,1,1,-1,-1,-1,-1
// TODO use AuthenticationTrustResolver instead to be consistent through the application,1,1,1,1,-1,-1,-1,-1
// TODO use TimeUnit.MINUTE.toMillis,1,1,1,1,-1,-1,-1,-1
// TODO use assertThrows once we drop support for Java 8 in this module,1,1,1,1,-1,-1,-1,-1
// TODO using getDetachedPlugins here seems wrong; should be forcing an upgrade when the installed version is older than that in getDetachedLocation(),1,1,1,1,-1,-1,-1,-1
"// TODO verify that destination is to not equal to, or inside, item",1,1,1,1,-1,-1,-1,-1
"// TODO verify that we hit EOF immediately, not partway into framelen",1,1,1,1,-1,-1,-1,-1
"// TODO we can always include the signature, a signature that isn't configured client-side behaves as if unsigned.",1,1,1,1,-1,-1,-1,-1
"// TODO whatever this is for, the return value is being ignored, so this does nothing at all",1,1,1,1,-1,-1,-1,-1
// TODO why does this not simply use ZipInputStream?,1,1,1,1,-1,-1,-1,-1
"// TODO why is /opt/jdk/bin added twice? In CommandInterpreter.perform, envVars right before Launcher.launch is correct, but this somehow sneaks in.",1,1,1,1,-1,-1,-1,-1
"// TODO why not synchronized (this) like some, though not all, other accesses?",1,1,1,1,-1,-1,-1,-1
// TODO why would an extension using a built-in extension point need to be marked optional?,1,1,1,1,-1,-1,-1,-1
"// TODO would be more efficient to run these all as a single test case, but after a few Jetty seems to stop serving new content and new requests just hang.",1,1,1,1,-1,-1,-1,-1
// TODO(oleg_nenashev): Consider generalizing SaveableListener and invoking it for all storage implementations.,1,1,1,1,-1,-1,-1,-1
// TODO(oleg_nenashev): Consider renaming the field: https://issues.jenkins.io/browse/JENKINS-25808,1,1,1,1,-1,-1,-1,-1
// TODO(terminology) Built-in node? Controller? How is this used?,1,1,1,1,-1,-1,-1,-1
"// TODO(terminology) is this correct? This sets a built-in node property, not a global property",1,1,1,1,-1,-1,-1,-1
// TODO(terminology) migrate from slaves/ to agents/,1,1,1,1,-1,-1,-1,-1
// TODO: Cleanup once Winp provides proper API,1,1,1,1,-1,-1,-1,-1
// TODO: Consider improving KeyedDataStorage so it provides an API for clearing the fingerprints in memory.,1,1,1,1,-1,-1,-1,-1
// TODO: Consider improving Saveable Listener API: https://issues.jenkins.io/browse/JENKINS-62543,1,1,1,1,-1,-1,-1,-1
// TODO: Consider refactoring in order to avoid DMI_COLLECTION_OF_URLS,1,1,1,1,-1,-1,-1,-1
"// TODO: Create an Item.RENAME permission to use here, see JENKINS-18649.",1,1,1,1,-1,-1,-1,-1
// TODO: Get rid of FB warning after updating to Java 7,1,1,1,1,-1,-1,-1,-1
// TODO: Get rid of it?,1,1,1,1,-1,-1,-1,-1
// TODO: Mac?,1,1,0,1,-1,-1,-1,-1
"// TODO: Maybe it should be allowed, but we would just get NPE in the original logic before JENKINS-43496",1,1,1,1,-1,-1,-1,-1
// TODO: Move to jenkins-test-harness,1,1,1,1,-1,-1,-1,-1
// TODO: Probably it should not auto-create users,1,1,1,1,-1,-1,-1,-1
// TODO: Refactoring: Tests should be exchanged with FingerprinterTest somehow,1,1,1,1,-1,-1,-1,-1
// TODO: Remove Serializable,1,1,1,1,-1,-1,-1,-1
// TODO: Report exceptions if they happen?,1,1,1,1,-1,-1,-1,-1
// TODO: Rework everything to use List,1,1,1,1,-1,-1,-1,-1
// TODO: Seems like classes like this should live in the /war/src/java,1,1,1,1,-1,-1,-1,-1
"// TODO: There was a TODO in the original code, which presumes passing something meaningful to the newInstance() JSON param",0,1,1,1,-1,-1,-1,-1
"// TODO: This is a hack, wc.login does not work with the form",1,1,1,1,-1,-1,-1,-1
// TODO: Use MockAuthorizationStrategy in later versions,1,1,1,1,-1,-1,-1,-1
// TODO: We do not record multiple occurrences of the same trigger; on which instance would 10 different trigger types take forever? Figure out a better presentation.,1,1,1,1,-1,-1,-1,-1
// TODO: add a Telemetry implementation (JEP-304),1,1,1,1,-1,-1,-1,-1
// TODO: allow this in Stapler,1,1,1,1,-1,-1,-1,-1
// TODO: before first complete build,1,1,1,1,-1,-1,-1,-1
// TODO: cache it in a hashset for performance improvements,1,1,1,1,-1,-1,-1,-1
// TODO: charset of this log file?,1,1,0,1,-1,-1,-1,-1
// TODO: check fingerprints or checksums to improve the behavior (JENKINS-25211),1,1,1,1,-1,-1,-1,-1
// TODO: check if the annotation is placed,1,1,1,1,-1,-1,-1,-1
// TODO: collection and map support,1,1,1,1,-1,-1,-1,-1
// TODO: consider gradation. See,0,1,1,1,-1,-1,-1,-1
// TODO: could be reworked to support multiple assignments,1,1,1,1,-1,-1,-1,-1
// TODO: define a FakeLauncher implementation with easymock so that this kind of assertions can be simplified.,1,1,1,1,-1,-1,-1,-1
// TODO: define a mechanism to hide classes,1,1,1,1,-1,-1,-1,-1
// TODO: detect if the password didn't work,1,1,1,1,-1,-1,-1,-1
// TODO: determine if this should be pulled out into JenkinsRule or something,1,1,1,1,-1,-1,-1,-1
// TODO: do the rendering of the part from the action page,1,1,1,1,-1,-1,-1,-1
// TODO: do we really want to sleep for 10 seconds?,1,1,1,1,-1,-1,-1,-1
// TODO: don't we need to join?,1,1,1,1,-1,-1,-1,-1
// TODO: escape non-ASCII characters,1,1,1,1,-1,-1,-1,-1
// TODO: expose XStream the driver from XStream,1,1,1,1,-1,-1,-1,-1
// TODO: generalize macro expansion and perhaps even support JEXL,1,1,1,1,-1,-1,-1,-1
// TODO: get the proper Saveable,1,1,1,1,-1,-1,-1,-1
"// TODO: hmm, they don't really belong",1,1,1,1,-1,-1,-1,-1
// TODO: how do we add all the builders and publishers so that we can test this meaningfully?,1,1,1,1,-1,-1,-1,-1
"// TODO: ideally all the logic below should be inside the SlaveComputer class with proper locking to prevent race conditions,",1,1,1,1,-1,-1,-1,-1
"// TODO: ideally we'd like to use the contextual HierarchicalStreamWriter to unescape,",1,1,1,1,-1,-1,-1,-1
"// TODO: if this method can produce a lazy map, that'd be wonderful",1,1,1,1,-1,-1,-1,-1
"// TODO: if we are to support a remote launch, JVM would be on a different path.",1,1,1,1,-1,-1,-1,-1
// TODO: implement negative check to make sure we aren't serving unexpected directories.,1,1,1,1,-1,-1,-1,-1
// TODO: it's not obvious if linear scaling is the right approach or not.,1,1,1,1,-1,-1,-1,-1
// TODO: make the API visible for testing?,1,1,1,1,-1,-1,-1,-1
// TODO: more unit handling,1,1,1,1,-1,-1,-1,-1
// TODO: move the logic to JTH,1,1,1,1,-1,-1,-1,-1
// TODO: move to Jenkins Test Harness,1,1,1,1,-1,-1,-1,-1
// TODO: not a minor issue - causes process termination error in JENKINS-30782,1,1,1,1,-1,-1,-1,-1
// TODO: one URL for one log entry?,1,1,1,1,-1,-1,-1,-1
// TODO: perhaps use RunAs to run as an Administrator?,1,1,1,1,-1,-1,-1,-1
// TODO: picker should be selectable,1,1,1,1,-1,-1,-1,-1
// TODO: possibly recursively scan super class to discover dependencies,1,1,1,1,-1,-1,-1,-1
"// TODO: post release, re-unite two branches by introducing FileStreamCallable that resolves InputStream",1,1,1,1,-1,-1,-1,-1
// TODO: prevent usage of this APIs in plugins. Needs to be deprecated and replaced by a getter method,1,1,1,1,-1,-1,-1,-1
// TODO: race condition between this and the setChannel method.,1,1,1,1,-1,-1,-1,-1
// TODO: remove once RUN_SCRIPTS is finally retired,1,1,1,1,-1,-1,-1,-1
// TODO: resurrect compressed log file support,1,1,1,1,-1,-1,-1,-1
"// TODO: seems like this access to jobs should be synchronized, no?",1,1,1,1,-1,-1,-1,-1
// TODO: shall we cache this?,1,1,1,1,-1,-1,-1,-1
// TODO: should this be a fatal error?,1,1,1,1,-1,-1,-1,-1
// TODO: should this be modified now that getWorkspace is moved from AbstractProject to AbstractBuild?,1,1,1,1,-1,-1,-1,-1
// TODO: switch to type annotations after the migration to Java 1.8,1,1,1,1,-1,-1,-1,-1
// TODO: test an exception with cause and message,1,1,1,1,-1,-1,-1,-1
// TODO: the use of remoting is not optimal.,1,1,1,1,-1,-1,-1,-1
// TODO: there is some debate as to whether leading zeros should be allowed,1,1,1,1,-1,-1,-1,-1
// TODO: this cast is indicative of abstraction problem,1,1,1,1,-1,-1,-1,-1
"// TODO: this is essentially a ""find intersection between two sparse sequences""",1,1,1,1,-1,-1,-1,-1
// TODO: this is not complex. just bit tedious.,1,1,1,1,-1,-1,-1,-1
// TODO: this test is much too slow to be a traditional unit test. Should be extracted into some stress test,1,1,1,1,-1,-1,-1,-1
// TODO: throw IllegalStateException?,1,1,1,1,-1,-1,-1,-1
"// TODO: to properly pass this onto core, we need to wrap o into BuildReference but also needs to figure out ID.",1,1,1,1,-1,-1,-1,-1
// TODO: use -p to detect prompt,1,1,1,1,-1,-1,-1,-1
// TODO: we need a few more types whose implementations get uglier,1,1,1,1,-1,-1,-1,-1
// TODO: we need some generalization here so that extension points can be notified when a refresh happens?,1,1,1,1,-1,-1,-1,-1
"// TODO: what is the echo back command for Windows? ""cmd /C copy CON CON""?",1,1,1,1,-1,-1,-1,-1
// TODO: what to do?,1,1,1,1,-1,-1,-1,-1
"// TODO: would be nice to redirect the user to ""launching..."" wait page,",1,1,1,1,-1,-1,-1,-1
// TODO: write a synchronous connector?,1,1,1,1,-1,-1,-1,-1
"// TODO:According to the postInitialize() documentation, one may expect that",1,1,1,1,-1,-1,-1,-1
// This looks a bit hacky but UpdateCenter#toUpdateCenterCheckUrl does something similar,1,1,1,1,-1,-1,-1,-1
// compatibility for clients that hard-code the default crumb name up to Jenkins 1.TODO,1,1,1,1,-1,-1,-1,-1
"// if any ""Authorization: Basic xxx:yyy"" is sent this is the filter that processes it",1,0,1,1,-1,-1,-1,-1
// intended for use by Jelly EL only (plus hack in DelegatingComputerLauncher),1,1,1,1,-1,-1,-1,-1
// legacy hack. mail support has moved out to a separate plugin,1,1,1,1,-1,-1,-1,-1
"// submit(getForm(mon),""no""); TODO: figure out why this test is fragile",1,1,1,1,-1,-1,-1,-1
// the hack,1,1,1,1,-1,-1,-1,-1
"// this javascript simply replace the whole document by ""hacked"" and so the ""FLAG"" will not be present",1,1,1,1,-1,-1,-1,-1
"// yes, I know this is a hack.",1,1,1,1,-1,-1,-1,-1
"/*"");        Arrays.sort(list, Comparator.comparing(FilePath::getRemote));        for (FilePath path : list) {            str.append(relativePath(dir, path));            str.append(' ').append(path.length()).append('\n');        }        return str.toString();    }    private String relativePath(File base, FilePath path) throws IOException, InterruptedException {        if (path.absolutize().getRemote().equals(base.getAbsolutePath())) {            return """";        } else {            final String s = relativePath(base, path.getParent());            if (s.isEmpty()) {                return path.getName();            } else {                return s + ""/"" + path.getName();            }        }    }    @Issue(""JENKINS-30502"")    @Test    public void testRenameTrimsLeadingSpace() throws Exception {        tryRename(""myJob1"", "" foo"", ""foo"");    }    @Issue(""JENKINS-30502"")    @Test    public void testRenameTrimsTrailingSpace() throws Exception {        tryRename(""myJob2"", ""foo "", ""foo"");    }    @Issue(""JENKINS-30502"")    @Test    public void testAllowTrimmingByUser() throws Exception {        assumeFalse(""Unix-only test."", Functions.isWindows());        tryRename(""myJob3 "", ""myJob3"", ""myJob3"");    }    @Issue(""JENKINS-30502"")    @Test    public void testRenameWithLeadingSpaceTrimsLeadingSpace() throws Exception {        assumeFalse(""Unix-only test."", Functions.isWindows());        tryRename("" myJob4"", "" foo"", ""foo"");    }    @Issue(""JENKINS-30502"")    @Test    public void testRenameWithLeadingSpaceTrimsTrailingSpace() throws Exception {        assumeFalse(""Unix-only test."", Functions.isWindows());        tryRename("" myJob5"", ""foo "", ""foo"");    }    @Issue(""JENKINS-30502"")    @Test    public void testRenameWithTrailingSpaceTrimsTrailingSpace() throws Exception {        assumeFalse(""Unix-only test."", Functions.isWindows());        tryRename(""myJob6 "", ""foo "", ""foo"");    }    @Issue(""JENKINS-30502"")    @Test    public void testRenameWithTrailingSpaceTrimsLeadingSpace() throws Exception {        assumeFalse(""Unix-only test."", Functions.isWindows());        tryRename(""myJob7 "", "" foo"", ""foo"");    }    @Issue(""JENKINS-63899"")    @Test    public void testRenameNonLatin() throws Exception {        tryRename(""myJob8"", ""блины"", ""блины"");    }    @Test    public void testRenameSpaceInBetween() throws Exception {        tryRename(""myJob9"", ""my Job9"", ""my Job9"");    }    @Issue(""JENKINS-35160"")    @Test    public void interruptOnDelete() throws Exception {        assumeFalse(""TODO: Windows container agents do not have enough resources to run this test"", Functions.isWindows() && System.getenv(""CI"") != null);        j.jenkins.setNumExecutors(2);        Queue.getInstance().maintain();        final FreeStyleProject p = j.createFreeStyleProject();        p.addProperty(new ParametersDefinitionProperty(new StringParameterDefinition(""dummy"", ""0"")));        p.setConcurrentBuild(true);        // we want the uninterrupted job to run for long time        p.getBuildersList().add(new SleepBuilder(Long.MAX_VALUE));        FreeStyleBuild build1 = p.scheduleBuild2(0).getStartCondition().get();        FreeStyleBuild build2 = p.scheduleBuild2(0).getStartCondition().get();        QueueTaskFuture<FreeStyleBuild> build3 = p.scheduleBuild2(0);        long start = System.nanoTime();        p.delete();        long end = System.nanoTime();        assertThat(end - start, Matchers.lessThan(TimeUnit.SECONDS.toNanos(1)));        j.assertBuildStatus(Result.ABORTED, j.waitForCompletion(build1));        j.assertBuildStatus(Result.ABORTED, j.waitForCompletion(build2));        assertTrue(build3.isCancelled());    }    @Issue(""SECURITY-1868"")    @Test    public void noXssPossible() throws Exception {        assumeFalse(""TODO: Windows container agents do not have enough resources to run this test"", Functions.isWindows() && System.getenv(""CI"") != null);        String desiredNodeName = ""agent is a better name2 <script>alert(123)</script>"";        String initialNodeName = ""agent is a better name"";        NameChangingNode node = new NameChangingNode(j, initialNodeName);        j.jenkins.addNode(node);        j.waitOnline(node);        j.jenkins.setNumExecutors(0);        FreeStyleProject p = j.createFreeStyleProject();        j.buildAndAssertSuccess(p);        node.setVirtualName(desiredNodeName);        JenkinsRule.WebClient wc = j.createWebClient();        AtomicReference<String> alertContent = new AtomicReference<>("""");        wc.setAlertHandler((page, s1) -> alertContent.set(s1));        wc.withThrowExceptionOnFailingStatusCode(false);        wc.getPage(p, ""buildTimeTrend"");        assertEquals("""", alertContent.get());    }    /**     * This special class was created just to avoid running the test on unix only     * as the only limitation is the file path, if we change only the name, the XSS is possible also under windows     */",1,1,0,1,-1,-1,-1,-1
/**         * TODO un-restrict it in a weekly after the patch         */,1,1,1,1,-1,-1,-1,-1
/**         * TODO: need to learn more about concurrent access to {@link Injector} and how it interacts         * with classloading.         */,1,1,1,1,-1,-1,-1,-1
/**     * @deprecated as of 1.XXX     *      Use {@link Jenkins#getDescriptor(Class)}     */,0,1,1,1,-1,-1,-1,-1
"/**     * @deprecated as of TODO     *      The caller should use {@link #StreamBuildListener(OutputStream, Charset)} to pass in     *      the charset and output stream separately, so that this class can handle encoding correctly.     */",1,1,1,1,-1,-1,-1,-1
"/**     * @deprecated as of TODO     *      The caller should use {@link #StreamTaskListener(File, Charset)} to pass in     *      the charset and file separately, so that this class can handle encoding correctly.     */",1,1,1,1,-1,-1,-1,-1
"/**     * @deprecated as of TODO     *      The caller should use {@link #StreamTaskListener(OutputStream, Charset)} to pass in     *      the charset and output stream separately, so that this class can handle encoding correctly,     *      or use {@link #fromStdout()} or {@link #fromStderr()}.     */",1,1,1,1,-1,-1,-1,-1
"/**     * @param clazz     *      Pass in {@link #self()} to have the descriptor describe itself,     *      (this hack is needed since derived types can't call ""getClass()"" to refer to itself.     */",1,1,1,1,-1,-1,-1,-1
"/**     * Called once the changelog is determined.     *     * <p>     * During a build, Jenkins fetches the update of the workspace from SCM,     * and determines the changelog (see {@link SCM#checkout}). Immediately     * after that, a build will invoke this method on all registered     * {@link SCMListener}s.     *     * <p>     * If a build failed before we successfully determine changelog, this method     * will not be invoked (for example, if ""cvs update"" failed.) OTOH, this method     * is invoked before the actual build (like ant invocation) happens.     *     * <p>     * This is an opportunity for SCM-related plugins to act on changelog.     * A typical usage includes parsing commit messages and do cross-referencing     * between other systems. Implementations can also contribute {@link Action}     * to {@link AbstractBuild} (by {@code build.getActions().add(...)} to     * display additional data on build views.     *     * <p>     * TODO: once we have cvsnews plugin, refer to its usage.     *     * @param build     *      The build in progress, which just finished determining changelog.     *      At this point this build is still in progress. Never null.     * @param listener     *      {@link BuildListener} for on-going build. This can be used to report     *      any errors or the general logging of what's going on. This will show     *      up in the ""console output"" of the build. Never null.     * @param changelog     *      Set of changes detected in this build. This is the same value     *      returned from {@link AbstractBuild#getChangeSet()} but passed     *      separately for convenience.     *     * @throws Exception     *      If any exception is thrown from this method, it will be recorded     *      and causes the build to fail.     * @since 1.568     */",1,1,0,1,-1,-1,-1,-1
/**     * Check if the relative child is really a descendant after symlink resolution if any.     *     * TODO un-restrict it in a weekly after the patch     */,1,1,1,1,-1,-1,-1,-1
"/**     * Check if the relative path is really a descendant of this folder, following the symbolic links.     * Meant to be used in coordination with {@link #child(String)}.     *     * TODO un-restrict it in a weekly after the patch     */",1,1,1,1,-1,-1,-1,-1
"/**     * Checks if there has been any changes to this module in the repository.     *     * TODO: we need to figure out a better way to communicate an error back,     * so that we won't keep retrying the same node (for example an agent might be down.)     *     * <p>     * If the SCM doesn't implement polling, have the {@link #supportsPolling()} method     * return false.     *     * @param project     *      The project to check for updates     * @param launcher     *      Abstraction of the machine where the polling will take place. If SCM declares     *      that {@linkplain #requiresWorkspaceForPolling() the polling doesn't require a workspace}, this parameter is null.     * @param workspace     *      The workspace directory that contains baseline files. If SCM declares     *      that {@linkplain #requiresWorkspaceForPolling() the polling doesn't require a workspace}, this parameter is null.     * @param listener     *      Logs during the polling should be sent here.     *     * @return true     *      if the change is detected.     *     * @throws InterruptedException     *      interruption is usually caused by the user aborting the computation.     *      this exception should be simply propagated all the way up.     *     * @see #supportsPolling()     *     * @deprecated as of 1.345     *      Override {@link #calcRevisionsFromBuild(AbstractBuild, Launcher, TaskListener)} and     *      {@link #compareRemoteRevisionWith(AbstractProject, Launcher, FilePath, TaskListener, SCMRevisionState)} for implementation.     *     *      The implementation is now separated in two pieces, one that computes the revision of the current workspace,     *      and the other that computes the revision of the remote repository.     *     *      Call {@link #poll(AbstractProject, Launcher, FilePath, TaskListener, SCMRevisionState)} for use instead.     */",1,1,1,1,-1,-1,-1,-1
"/**     * Closes the item and logs error to the log in the case of error.     * Logging will be performed on the {@code WARNING} level.     * @param toClose Item to close. Nothing will happen if it is {@code null}     * @param logger Logger, which receives the error     * @param closeableName Name of the closeable item     * @param closeableOwner String representation of the closeable holder     * @since 2.19, but TODO update once un-restricted     */",1,1,0,1,-1,-1,-1,-1
/**     * Create a new {@link HttpClient.Builder} preconfigured with Jenkins-specific default settings.     *     * <p>The Jenkins-specific default settings include a proxy server and proxy authentication (as     * configured by {@link ProxyConfiguration}) and a connection timeout (as configured by {@link     * ProxyConfiguration#DEFAULT_CONNECT_TIMEOUT_MILLIS}).     *     * @return an {@link HttpClient.Builder}     * @since TODO     */,1,1,1,1,-1,-1,-1,-1
/**     * Create a new {@link HttpRequest.Builder} builder with the given URI preconfigured with     * Jenkins-specific default settings.     *     * <p>The Jenkins-specific default settings include a custom user agent on the controller     * (unless {@link UserAgentURLConnectionDecorator#DISABLED} is true).     *     * @param uri the request URI     * @return an {@link HttpRequest.Builder}     * @throws IllegalArgumentException if the URI scheme is not supported     * @since TODO     */,1,1,0,1,-1,-1,-1,-1
/**     * Creates a seriously hacked up {@link CopyOnWriteList} that acts as a view to the current {@link ExtensionList}.     */,1,1,1,1,-1,-1,-1,-1
"/**     * Defines the location of the detached plugins in the WAR.     * @return by default, {@code /WEB-INF/detached-plugins}     * @since TODO     */",1,1,1,1,-1,-1,-1,-1
"/**     * Deletes the Fingerprint with the given unique ID.     * This acts as a blocking operation. For file system based default storage, throws IOException when it fails.     * The unique ID for a fingerprint is defined by {@link Fingerprint#getHashString()}.     * TODO: Needed for external storage fingerprint cleanup.     *     * @throws IOException Deletion error     */",1,1,1,1,-1,-1,-1,-1
/**     * Determine if the implementation supports the {@link #isDescendant(String)} method     *     * TODO un-restrict it in a weekly after the patch     */,1,1,1,1,-1,-1,-1,-1
"/**     * Get a human readable string representing strings like ""xxx days ago"",     * which should be used to point to the occurrence of an event in the past.     * @deprecated Actually identical to {@link #getTimeSpanString}, does not add {@code ago}.     */",1,1,1,1,-1,-1,-1,-1
"/**     * Gets the default base URL.     *     * @deprecated     *      TODO: revisit tool update mechanism, as that should be de-centralized, too. In the mean time,     *      please try not to use this method, and instead ping us to get this part completed.     */",1,1,1,1,-1,-1,-1,-1
/**     * Hack to set a web app initial parameter afterwards. Only works with Jetty.     * @param property property to set     * @param value value of the property     */,1,1,1,1,-1,-1,-1,-1
"/**     * Historical holder for map.     *     * TODO all this mess including {@link #numberOnDisk} could probably be simplified to a single {@code TreeMap<Integer,BuildReference<R>>}     * where a null value means not yet loaded and a broken entry just uses {@code NoHolder}.     *     * The idiom is that you put yourself in a synchronized block, {@linkplain #copy() make a copy of this},     * update the copy, then set it to {@link #index}.     */",1,1,1,1,-1,-1,-1,-1
"/**     * Host name that we advertise protocol clients to connect to.     * This is primarily for those who have reverse proxies in place such that the HTTP host name     * and the TCP/IP connection host names are different.     * (Note: despite the name, this is used for any client, not only deprecated Remoting-based CLI.)     * TODO: think about how to expose this (including whether this needs to be exposed at all.)     */",1,1,0,1,-1,-1,-1,-1
/**     * Lists up additional bundled plugins from the system property {@code hudson.bundled.plugins}.     * Since 1.480 glob syntax is supported.     * For use in {@code mvn jetty:run}.     * TODO: maven-hpi-plugin should inject its own InitStrategy instead of having this in the core.     */,1,1,1,1,-1,-1,-1,-1
"/**     * May be overridden to provide tool-specific validation of a tool home directory.     * @param home a possible value for {@link ToolInstallation#getHome}, known to already exist on the controller TODO(terminology) or is it built-in?     * @return by default, {@link FormValidation#ok()}     * @since 1.563     */",1,1,1,1,-1,-1,-1,-1
"/**     * Obtains the clock difference between this side and that side of the channel.     *     * <p>     * This is a hack to wrap the whole thing into a simple {@link Callable}.     *     * <ol>     *     <li>When the callable is sent to remote, we capture the time (on this side) in {@link GetClockDifference2#startTime}     *     <li>When the other side receives the callable it is {@link GetClockDifference2}.     *     <li>We capture the time on the other side and {@link GetClockDifference3} gets sent from the other side     *     <li>When it's read on this side as a return value, it morphs itself into {@link ClockDifference}.     * </ol>     */",1,1,1,1,-1,-1,-1,-1
/**     * Parses the expression into a label expression tree.     *     * TODO: replace this with a real parser later     *     * @param labelExpression the label expression to be parsed     * @throws IllegalArgumentException if the label expression cannot be parsed     */,1,1,1,1,-1,-1,-1,-1
/**     * Previous build. Can be null.     * TODO JENKINS-22052 this is not actually implemented any more     *     * External code should use {@link #getPreviousBuild()}     */,1,1,1,1,-1,-1,-1,-1
/**     * Reloads this job from the disk.     *     * Exposed through CLI as well.     *     * TODO: think about exposing this to UI     *     * @since 1.556     */,1,1,1,1,-1,-1,-1,-1
"/**     * Remoting interface used for {@link FilePath#copyRecursiveTo(String, FilePath)}.     *     * TODO: this might not be the most efficient way to do the copy.     */",1,1,1,1,-1,-1,-1,-1
/**     * Return a new {@link HttpClient} with Jenkins-specific default settings.     *     * <p>Equivalent to {@code newHttpClientBuilder().build()}.     *     * <p>The Jenkins-specific default settings include a proxy server and proxy authentication (as     * configured by {@link ProxyConfiguration}) and a connection timeout (as configured by {@link     * ProxyConfiguration#DEFAULT_CONNECT_TIMEOUT_MILLIS}).     *     * @return a new {@link HttpClient}     * @since TODO     */,1,1,0,1,-1,-1,-1,-1
"/**     * Sets execute permission on all files, since unzip etc. might not do this.     * Hackish, is there a better way?     */",1,1,1,1,-1,-1,-1,-1
/**     * TODO Make public when be moved to cloudbees-folder-plugin.     */,1,1,1,1,-1,-1,-1,-1
/**     * TODO: revisit where/how to expose this. This is an experiment.     */,1,1,1,1,-1,-1,-1,-1
/**     * Tries to move/rename a file from one path to another.     * Uses {@link java.nio.file.Files#move} when available.     * Does not use {@link java.nio.file.StandardCopyOption#REPLACE_EXISTING} or any other options.     * TODO candidate for moving to {@link Util}     */,1,1,1,1,-1,-1,-1,-1
/**     * Triggers the schedule update now.     *     * TODO: ajax on the client side to wait until the update completion might be nice.     */,1,1,1,1,-1,-1,-1,-1
"/**     * YUI tooltips require that the attribute not be set, otherwise a white rectangle will show on hover     * TODO: This might be able to be removed when we move away from YUI tooltips to a better solution     */",1,1,1,1,-1,-1,-1,-1
"// ** HACK AROUND JENKINS-50422: manually restarting ** //// Check the disk (cannot just restart normally with the rule, )",1,1,1,1,-1,-1,-1,-1
// @Override// protected void printUsageSummary(PrintStream stderr) {// TODO// },1,1,1,1,-1,-1,-1,-1
// Allow remote update site to distinguish based on the current version// This looks a bit hacky but UpdateCenter#toUpdateCenterCheckUrl does something similar,1,1,1,1,-1,-1,-1,-1
"// Drop numeric, and  ""+-."" for now// TODO does not allow for optional userinfo.// Validation of character set is done by isValidAuthority// allows for IPV4 but not IPV6",1,1,1,1,-1,-1,-1,-1
"// FIXME this failed to compile super(owner.getBuild().toString()+' '+owner.getDisplayName());// Please implement more general way how to get information about action owner,// if you want it in the thread's name.",1,1,1,1,-1,-1,-1,-1
// FIXME using similar stuff as in the maven plugin could be better// olamy : but will add a dependency on maven in core -> so not so good,1,1,1,1,-1,-1,-1,-1
// Implementations are expected to invoke SaveableListener on their own if relevant// TODO: Consider improving Saveable Listener API: https://issues.jenkins.io/browse/JENKINS-62543,1,1,1,1,-1,-1,-1,-1
"// In ZIP archives ""All slashes MUST be forward slashes"" (http://pkware.com/documents/casestudies/APPNOTE.TXT)// TODO On Linux file names can contain backslashes which should not treated as file separators.// Unfortunately, only the file separator char of the controller is known (File.separatorChar)// but not the file separator char of the (maybe remote) ""dir"".",1,1,1,1,-1,-1,-1,-1
"// In ZIP archives ""All slashes MUST be forward slashes"" (http://pkware.com/documents/casestudies/APPNOTE.TXT)// TODO On Linux file names can contain backslashes which should not treated as file separators.// Unfortunately, only the file separator char of the master is known (File.separatorChar)// but not the file separator char of the (maybe remote) ""dir"".",1,1,1,1,-1,-1,-1,-1
"// In the case that external fingerprint storage is configured, there may be some fingerprints in memory that// get saved before a load call (because they are already in memory). This ensures that they get deleted from// the file fingerprint storage.// TODO: Consider improving KeyedDataStorage so it provides an API for clearing the fingerprints in memory.",1,1,1,1,-1,-1,-1,-1
"// Process SCMTriggers in the order of dependencies. Note that the crontab spec expressed per-project is// ignored, only the global setting is honored. The polling job is submitted only if the previous job has// terminated.// FIXME allow to set a global crontab spec",1,1,0,1,-1,-1,-1,-1
// Should never happen but this forces Proc to not be removed and early GC by escape analysis// TODO: Report exceptions if they happen?,1,1,1,1,-1,-1,-1,-1
"// TODO ABORTED would perhaps make more sense than FAILURE:// defensive measure. value should be overwritten by unmarshal, but just in case the saved data is inconsistent",1,1,1,1,-1,-1,-1,-1
"// TODO Make the 'HUDSON_COOKIE' variable less special so we can remove it.// TODO consider just querying the build, if any, for its characteristic env vars",1,1,1,1,-1,-1,-1,-1
"// TODO This nicer alternative requires https://github.com/jenkinsci/jenkins/pull/2268 or similar to work// HtmlPage res = requirePOST.getPage().getForms().get(0).getElementsByAttribute(""input"", ""type"", ""submit"").get(0).click();",1,1,1,1,-1,-1,-1,-1
// TODO WindowsPosix actually does something here (WindowsLibC._wchmod); should we let it?// Anyway the existing calls already skip this method if on Windows.// noop,1,1,1,1,-1,-1,-1,-1
"// TODO cannot easily make tunnel into a @DataBoundSetter because then the @DataBoundConstructor would be on a no-arg constructor// which is already defined and deprecated. Could retroactively let no-arg constructor use default for workDirSettings,// which would be a behavioral change only for callers of the Java constructor (unlikely).",1,1,1,1,-1,-1,-1,-1
// TODO consider DISCOVER// can't go up further,1,1,1,1,-1,-1,-1,-1
// TODO could also be good to add checkbox that lets users configure a workspace to never be auto-cleaned.// TODO check instead for SCMTriggerItem:,1,1,1,1,-1,-1,-1,-1
"// TODO could check doCheckUpstreamProjects, though it is not terribly interesting// Legacy mode: alice has no read permission on upstream but it works anyway",1,1,1,1,-1,-1,-1,-1
"// TODO could delegate to allItems overload taking Authentication, but perhaps more useful to introduce a variant to perform preauth filtering using Predicate and check Item.READ afterwards// or return a Stream<Item> and provide a Predicate<Item> public static Items.readable(), and see https://stackoverflow.com/q/22694884/12916 if you are looking for just one result",1,1,1,1,-1,-1,-1,-1
"// TODO determine if there is a meaningful way to generalize this; perhaps as a new [Run]Action recording sensitiveVariables?// Complicated by the fact that in principle someone could call getSensitiveBuildVariables *before* the wrapper starts and actually sets those variables,// though in practice the likely use cases would come later, and perhaps it is acceptable to omit the names of variables which are yet to be set.// Also unclear if there is any use case for calling this method after the build is done (or Jenkins is restarted);// most likely it is only used during the build itself.// Would be much cleaner if EnvVars itself recorded which keys had sensitive values.",1,1,1,1,-1,-1,-1,-1
// TODO is there a simpler way to force the TarOutputStream to be flushed and the reader to start?// Have not found a way to make the failure guaranteed.,1,1,1,1,-1,-1,-1,-1
// TODO may be that keepLog is on (perhaps toggler earlier) yet isKeepLog() would be true anyway.// In such a case this will incorrectly return true and logKeep.jelly will allow the toggle.// However at least then (after redirecting to the same page) the toggle button will correctly disappear.,1,1,1,1,-1,-1,-1,-1
"// TODO no way to avoid routability if implementing StaplerProxy// assertNotReachable(""getTypeImplementingStaplerProxy/typeImplementingStaplerProxy2/"");// assertNotReachable(""getTypeImplementingStaplerProxy/typeImplementingStaplerProxy2/valid/"");",1,1,1,1,-1,-1,-1,-1
"// TODO no way to avoid routability if super type implementing StaplerProxy// assertNotReachable(""getTypeImplementingStaplerProxy/typeExtendingTypeImplementingStaplerProxy2/"");// assertNotReachable(""getTypeImplementingStaplerProxy/typeExtendingTypeImplementingStaplerProxy2/valid/"");",1,1,1,1,-1,-1,-1,-1
"// TODO reasonable to decorate Launcher within a dynamic scope, but this signature does not mix well with Context pattern.// Called from AbstractBuildExecution.createLauncher; how do we track what is decorating what?// Would have to keep something like a LaunchedDecorator, not an actual Launcher, in Context.// And createLauncher is called before even preCheckout, so much too early for the Context to have been prepared.// Could perhaps create a proxy Launcher whose launch method checks some field in the Context remembered for the build.",1,1,1,1,-1,-1,-1,-1
// TODO restart scheduled (SuccessButRequiresRestart) after upgrade or Support-Dynamic-Loading: false// TODO dependencies installed or upgraded too// TODO required plugin installed but inactive,0,1,1,1,-1,-1,-1,-1
"// TODO should there be an option to check lastCompletedBuild even if it failed?// Not useful for, say, TestResultAction, since if you have a build that fails before recording test// results, the job would then have no TestResultProjectAction.",1,1,1,1,-1,-1,-1,-1
// TODO test that stdout/stderr are in expected encoding (not true of -remoting mode!)// -ssh mode does not pass client locale or encoding,1,1,1,1,-1,-1,-1,-1
"// TODO this defeats lazy-loading. Should rather do a breadth-first search, as in hudson.plugins.view.dashboard.builds.LatestBuilds// (though currently there is no quick implementation of RunMap.size() ~ idOnDisk.size(), which would be needed for proper progress)",1,1,1,1,-1,-1,-1,-1
"// TODO this should be impossible, since we override reactOnCycle to not throw the exception// disable all plugins since classloading from them can lead to StackOverflow",1,1,1,1,-1,-1,-1,-1
"// TODO uncomment once we can have a delegating ClassFilter, also add SystemProperty to toggle feature// @Extension// @Restricted(NoExternalUse.class)// class ChannelConfiguratorImpl extends ChannelConfigurator {// @Override// public void onChannelBuilding(ChannelBuilder builder, @Nullable Object context) {// if (context instanceof SlaveComputer) {// builder.withClassFilter(new ClassFilterImpl(builder.getClassFilter(), OnMaster.class.getName, ...));// }// }// }//// @Restricted(NoExternalUse.class)// class ClassFilterImpl extends ClassFilter {// private final ClassFilter delegate;// private final Set<String> blacklist;//// public ClassFilterImpl(ClassFilter delegate, String... blacklist) {// this.blacklist = new HashSet<>(blacklist);// this.delegate = delegate;// }//// @Override// protected boolean isBlacklisted(String name) {// return blacklist.contains(name) || delegate.isBlacklisted(name);// }//// @Override// protected boolean isBlacklisted(Class c) {// return c.getAnnotation(MasterJVMOnly.class) != null || delegate.isBlacklisted(c);// }// }",1,1,1,1,-1,-1,-1,-1
// TODO(oleg_nenashev): Consider generalizing SaveableListener and invoking it for all storage implementations.// https://issues.jenkins.io/browse/JENKINS-62543,1,1,1,1,-1,-1,-1,-1
// TODO: Get rid of it?// It's unsafe according to http://stackoverflow.com/questions/2927391/whats-the-reason-i-cant-create-generic-array-types-in-java,1,1,1,1,-1,-1,-1,-1
"// TODO: Mac?// unsupported platform, take a chance",1,1,1,1,-1,-1,-1,-1
"// TODO: Seems like classes like this should live in the /war/src/java// But that applies to a number of other classes too and it has never happened, so will// not do it with this class for now anyway.",1,1,1,1,-1,-1,-1,-1
"// TODO: There was a TODO in the original code, which presumes passing something meaningful to the newInstance() JSON param// Now we just pass empty JSON in order to make the code compliant with the defined interface",0,1,1,1,-1,-1,-1,-1
// TODO: before first complete build// patch up next/previous build link,1,1,1,1,-1,-1,-1,-1
// TODO: check fingerprints or checksums to improve the behavior (JENKINS-25211)// Return false even if files are equal,1,1,1,1,-1,-1,-1,-1
// TODO: check if the annotation is placed// TODO: test an exception with cause and message// interactiveBreak();,0,1,1,1,-1,-1,-1,-1
// TODO: consider gradation. See// http://www.javadrive.jp/java2d/shape/index9.html,0,1,1,1,-1,-1,-1,-1
"// TODO: define a mechanism to hide classes// String export = manifest.getMainAttributes().getValue(""Export"");",1,1,1,1,-1,-1,-1,-1
"// TODO: ideally all the logic below should be inside the SlaveComputer class with proper locking to prevent race conditions,// but so far there is no locks for setNode() hence it requires serious refactoring// Ensure that the Computer instance still points to this node// Otherwise we may end up running the command on a wrong (reconnected) Node instance.",1,1,1,1,-1,-1,-1,-1
"// TODO: ideally we'd like to use the contextual HierarchicalStreamWriter to unescape,// but this object isn't exposed to us",1,1,1,1,-1,-1,-1,-1
"// TODO: if this method can produce a lazy map, that'd be wonderful// because due to the lack of floor/ceil/higher/lower kind of methods// to look up keys in SortedMap, various places of Jenkins rely on// subMap+firstKey/lastKey combo.",1,1,1,1,-1,-1,-1,-1
"// TODO: implement negative check to make sure we aren't serving unexpected directories.// the following trivial attempt failed. Someone in between is normalizing.// // but this should fail// try {// new WebClient().goTo(""job/"" + p.getName() + ""/ws/abc/../"", ""application/octet-stream"");// } catch (FailingHttpStatusCodeException e) {// assertEquals(400,e.getStatusCode());// }",1,1,1,1,-1,-1,-1,-1
"// TODO: seems like this access to jobs should be synchronized, no?// It might get synch'd accidentally via the addJob method, but that wouldn't be good.",1,1,1,1,-1,-1,-1,-1
"// TODO: the use of remoting is not optimal.// One remoting can execute ""exists"", ""lastModified"", and ""delete"" all at once.// (Could even invert master loop so that one FileCallable takes care of all known items.)",1,1,1,1,-1,-1,-1,-1
// TODO: there is some debate as to whether leading zeros should be allowed// They are ambiguous: does the leading 0 mean octal?,1,1,1,1,-1,-1,-1,-1
"// TODO: this is essentially a ""find intersection between two sparse sequences""// and we should be able to do much better.",1,1,1,1,-1,-1,-1,-1
// TODO: this test is much too slow to be a traditional unit test. Should be extracted into some stress test// which is no part of the default test harness?,1,1,1,1,-1,-1,-1,-1
// TODO: use -p to detect prompt// TODO: detect if the password didn't work,1,1,1,1,-1,-1,-1,-1
"// TODO: would be nice to redirect the user to ""launching..."" wait page,// then spend a few seconds there and poll for the completion periodically.",1,1,1,1,-1,-1,-1,-1
"// TODO:// we need more support for conveniently putting annotations in the middle of the line, not just at the beginning// we also need the ability for an extension point to have notes hook into the processing",1,1,1,1,-1,-1,-1,-1
"// TODO:According to the postInitialize() documentation, one may expect that// p.getPluginOrFail() NPE will continue the initialization. Keeping the original behavior ATM",1,1,1,1,-1,-1,-1,-1
// We don't really care where this ends up as long as it doesn't leave the host// TODO Do we need to ensure we remain in the context path?,1,1,1,1,-1,-1,-1,-1
// allow secondary update centers to publish different versions// TODO refactor to consolidate multiple versions of the same plugin within the one row,1,1,1,1,-1,-1,-1,-1
"// corePoolSize is set to 10, but will only be created if needed.// ScheduledThreadPoolExecutor ""acts as a fixed-sized pool using corePoolSize threads""// TODO consider also wrapping in ContextResettingExecutorService",1,1,1,1,-1,-1,-1,-1
// corner cases// TODO this is not guaranteed invalid forever,1,1,1,1,-1,-1,-1,-1
"// first call for the ""Running on xxx"" log message, Jenkins not being set at that point// and the second call is to set the rootUrl of the JLC inside the JenkinsRule#init",0,1,1,1,-1,-1,-1,-1
// likely a missing privilege// TODO: not a minor issue - causes process termination error in JENKINS-30782,1,1,1,1,-1,-1,-1,-1
"// maybe the configuration was changed to relaunch the agent, so try to re-launch now.// ""constructed==null"" test is an ugly hack to avoid launching before the object is fully// constructed.",1,1,1,1,-1,-1,-1,-1
"// now dismiss// submit(getForm(mon),""no""); TODO: figure out why this test is fragile",1,1,1,1,-1,-1,-1,-1
"// only the last webMethod annotation is used// TODO it breaks the Liskov substitutability// assertReachable(""b/annotatedButDifferent1/"");",1,1,1,1,-1,-1,-1,-1
"// only the last webMethod annotation is used// TODO it breaks the Liskov substitutability// assertReachable(""j/annotatedButDifferent1/"");",1,1,1,1,-1,-1,-1,-1
// randomize the scheduling so that multiple Hudson instances will write at the file at different time// TODO use TimeUnit.MINUTE.toMillis,1,1,1,1,-1,-1,-1,-1
"// remember the failure.// if editInPlace==null, we can create a new copy for this, but not sure if it's worth doing,// TODO should we also update numberOnDisk?",1,1,1,1,-1,-1,-1,-1
"// return core.remove(o);// TODO: to properly pass this onto core, we need to wrap o into BuildReference but also needs to figure out ID.",1,1,1,1,-1,-1,-1,-1
"// this javascript simply replace the whole document by ""hacked"" and so the ""FLAG"" will not be present// but it will not be executed (thanks to the escaping)",1,1,1,1,-1,-1,-1,-1
// we noticed that someone else have updated this file.// switch GUI to display this error.// TODO seems drastic; could this just be switched to an AdministrativeMonitor?,1,1,1,1,-1,-1,-1,-1
"////4ByIh"" + ""qPpAc43AbrEtyDUDc1/UEOXsoY6LeoHSeSlb1d7AAAAlR+LCAAAAAAAAP9b8"" + ""5aBtbiIQS+jNKU4P08vOT+vOD8nVc8xLy+/JLEkNcUnsSg9NSS1oiQktbhEB"" + ""UT45ZekCpys9xWo8J3KxMDkycCWk5qXXpLhw8BcWpRTwiDkk5VYlqifk5iXr"" + ""h9cUpSZl25dUcQghWaBM4QGGcYAAYxMDAwVBUAGZwkDq35Rfn4JABmN28qcA"" + // TODO assert that this is IOException: MAC mismatch",1,1,1,1,-1,-1,-1,-1
/**     * TODO un-restrict it in a weekly after the patch     */,1,1,1,1,-1,-1,-1,-1
/**     * TODO: need to learn more about concurrent access to {@link Injector} and how it interacts     * with classloading.     */,1,1,1,1,-1,-1,-1,-1
"/*			 * TODO: Fix method rendering renderMesh(projTexShader, cam.combined, projector.combined, cubeTrans, cube, Color.WHITE);			 */",1,1,1,1,-1,-1,-1,-1
"/*			 * TODO: Fix method rendering renderMesh(projTexShader, projector.combined, projector.combined, cubeTrans, cube,			 * Color.WHITE);			 */",1,1,1,1,-1,-1,-1,-1
/*		// FIXME	*/,1,1,0,1,-1,-1,-1,-1
/* FIXME make it grow... */,1,1,0,1,-1,-1,-1,-1
"/** * A distance proxy is used by the GJK algorithm. It encapsulates any shape. TODO: see if we can just do assignments with * m_vertices, instead of copying stuff over * * @author daniel */",1,1,1,1,-1,-1,-1,-1
"/** * An implementation of the {@link Application} interface dedicated for android live wallpapers. * * Derive from this class. In the {@link AndroidLiveWallpaperService#onCreateApplication} method call the * {@link AndroidLiveWallpaperService#initialize(ApplicationListener)} method specifying the configuration for the GLSurfaceView. * You can also use {@link AndroidWallpaperListener} along with {@link ApplicationListener} to respond for wallpaper specific * events in your app listener: * * MyAppListener implements ApplicationListener, AndroidWallpaperListener * * Notice: Following methods are not called for live wallpapers: {@link ApplicationListener#pause()} * {@link ApplicationListener#dispose()} TODO add callbacks to AndroidWallpaperListener allowing to notify app listener about * changed visibility state of live wallpaper but called from main thread, not from GL thread: for example: * AndroidWallpaperListener.visibilityChanged(boolean) * * //obsoleted: //Notice! //You have to kill all not daemon threads you created in {@link ApplicationListener#pause()} method. // * {@link ApplicationListener#dispose()} is never called! //If you leave live non daemon threads, wallpaper service wouldn't be * able to close, //this can cause problems with wallpaper lifecycle. * * Notice #2! On some devices wallpaper service is not killed immediately after exiting from preview. Service object is destroyed * (onDestroy called) but process on which it runs remains alive. When user comes back to wallpaper preview, new wallpaper service * object is created, but in the same process. It is important if you plan to use static variables / objects - they will be shared * between living instances of wallpaper services'! And depending on your implementation - it can cause problems you were not * prepared to. * * @author Jaroslaw Wisniewski <j.wisniewski@appsisle.com> */",1,1,0,1,-1,-1,-1,-1
/** * Friction mixing law. Feel free to customize this. TODO djm: add customization * * @param friction1 * @param friction2 * @return */,1,1,1,1,-1,-1,-1,-1
/** * Restitution mixing law. Feel free to customize this. TODO djm: add customization * * @param restitution1 * @param restitution2 * @return */,1,1,1,1,-1,-1,-1,-1
"/** * TODO: Lots more documentation needed here. * * Taken from the WebGL Draft Spec as of Aug 30, 2010: * https://cvs.khronos.org/svn/repos/registry/trunk/public/webgl/doc/spec/WebGL-spec.html TODO: Update this to the Feb 11 * version. */",1,1,1,1,-1,-1,-1,-1
"/** * Ugly hack to get gwt internal stuff into nio, see StringByteBuffer in nio */",1,1,1,1,-1,-1,-1,-1
"/** * parts of meshes, used by nodes that have a graphical representation FIXME not sure if superfluous, stored in Nodes as well, * could be useful to create bullet meshes * */",1,1,0,1,-1,-1,-1,-1
/** * the id of the node animated by this animation FIXME should be nodeId * */,1,1,0,1,-1,-1,-1,-1
"/** * the id, may be null, FIXME is this unique? * */",1,1,0,1,-1,-1,-1,-1
"/** * the materials of the model, used by nodes that have a graphical representation FIXME not sure if superfluous, allows * modification of materials without having to traverse the nodes * */",1,1,0,1,-1,-1,-1,-1
// // TODO Auto-generated method stub,1,1,1,1,-1,-1,-1,-1
// @TODO Merge renderable pools (ModelBatch),1,1,0,1,-1,-1,-1,-1
// FIXME Cache vertex attribute locations...,1,1,0,1,-1,-1,-1,-1
// FIXME Change to private access,1,1,0,1,-1,-1,-1,-1
// FIXME Make a better (preferable JNI) MeshPool implementation,1,1,1,1,-1,-1,-1,-1
// FIXME auto calculate this based on the target,1,1,0,1,-1,-1,-1,-1
// FIXME cache packed color?,1,1,0,1,-1,-1,-1,-1
// FIXME check if uniform already stored.,1,1,0,1,-1,-1,-1,-1
// FIXME compare shaders on their impact on performance,1,1,0,1,-1,-1,-1,-1
// FIXME create better cylinder method (- axis on which to create the cone (matrix?)),1,1,0,1,-1,-1,-1,-1
// FIXME create better cylinder method (- axis on which to create the cylinder (matrix?)),1,1,0,1,-1,-1,-1,-1
// FIXME create temporary maps for faster lookup?,1,1,0,1,-1,-1,-1,-1
// FIXME don't duplicate lines and points,1,1,0,1,-1,-1,-1,-1
"// FIXME don't triple copy, instead move the copy to jni",1,1,0,1,-1,-1,-1,-1
// FIXME getTextInput does nothing,1,1,0,1,-1,-1,-1,-1
// FIXME glGetBufferPointerv needs a proper translation,1,1,1,1,-1,-1,-1,-1
// FIXME implement UV mapping,1,1,0,1,-1,-1,-1,-1
// FIXME implement better sorting algorithm,1,1,1,1,-1,-1,-1,-1
// FIXME implement comparing,1,1,0,1,-1,-1,-1,-1
// FIXME implement this,1,1,0,1,-1,-1,-1,-1
// FIXME mipmapping on desktop,1,1,0,1,-1,-1,-1,-1
// FIXME optimize,1,1,0,1,-1,-1,-1,-1
// FIXME ouch :p,1,1,0,1,-1,-1,-1,-1
// FIXME pool QueryCallback?,1,1,0,1,-1,-1,-1,-1
// FIXME pool RayCastCallback?,1,1,0,1,-1,-1,-1,-1
// FIXME pool contacts,1,1,0,1,-1,-1,-1,-1
// FIXME print the chosen config,1,1,0,1,-1,-1,-1,-1
// FIXME put it on a separate thread,1,1,0,1,-1,-1,-1,-1
// FIXME remove this.,1,1,1,1,-1,-1,-1,-1
// FIXME sort by material,1,1,0,1,-1,-1,-1,-1
// FIXME this is assuming WebGL supports client side buffers...,1,1,0,1,-1,-1,-1,-1
"// FIXME this is bad, but some APIs seem to use ""ISO-8859-1"", fuckers...",1,1,1,1,-1,-1,-1,-1
// FIXME this is less than ideal of course...,1,1,0,1,-1,-1,-1,-1
// FIXME untested code:,1,1,0,1,-1,-1,-1,-1
// FIXME uvScaling/uvTranslation totally ignored,1,1,0,1,-1,-1,-1,-1
// FIXME won't implement this shit,1,1,1,1,-1,-1,-1,-1
// FIXME wow this is bad...,1,1,1,1,-1,-1,-1,-1
"// FIXME, sensible?",1,1,0,1,-1,-1,-1,-1
// FIXME: See #4186,1,1,0,1,-1,-1,-1,-1
"// FIXME: a/A is currently not following the specs because it lacks strong typed, fixed sized containers,",1,1,0,1,-1,-1,-1,-1
// FIXME: remove texture on target?,1,1,0,1,-1,-1,-1,-1
// FIXME??,1,1,0,1,-1,-1,-1,-1
// HACK executable flag isn't preserved for whatever reason...,1,1,1,1,-1,-1,-1,-1
// HACK: added null check to handle set wallpaper from preview null,1,1,1,1,-1,-1,-1,-1
// Hack this allows to share the channel descriptor structure but using a different id temporary,1,1,1,1,-1,-1,-1,-1
"// Hack, shouldn't be done but after all the modifiers allocated their channels",1,1,1,1,-1,-1,-1,-1
// TODO : it would be convenient if {@link com.badlogic.gdx.graphics.Texture} had a getFormat() method to assume transparency,1,1,1,1,-1,-1,-1,-1
"// TODO : the matrix4 set(quaternion) doesnt set the last row+col of the matrix to 0,0,0,1 so... that's why there is this",1,1,1,1,-1,-1,-1,-1
// TODO : this would better fit into the vector3 class,1,1,1,1,-1,-1,-1,-1
// TODO ?,1,1,0,1,-1,-1,-1,-1
// TODO Add a precise method,1,1,1,1,-1,-1,-1,-1
// TODO I couldn't find one,1,1,1,1,-1,-1,-1,-1
// TODO Seems unused. Delete when confirmed.,1,1,1,1,-1,-1,-1,-1
"// TODO add other values, see http://www.opengl.org/sdk/docs/man/xhtml/glTexParameter.xml",0,1,1,1,-1,-1,-1,-1
// TODO add windows and mac config home paths,1,1,1,1,-1,-1,-1,-1
// TODO djm find a good initial stack number;,1,1,1,1,-1,-1,-1,-1
// TODO djm pooling,1,1,1,1,-1,-1,-1,-1
// TODO djm recycle body,1,1,1,1,-1,-1,-1,-1
// TODO djm recycle fixtures (here or in that destroy method),1,1,1,1,-1,-1,-1,-1
// TODO djm write after writing joints,1,1,1,1,-1,-1,-1,-1
// TODO duplicate the buffers without double copying the data if possible.,1,1,1,1,-1,-1,-1,-1
// TODO implement Serializable,1,1,1,1,-1,-1,-1,-1
// TODO implement a precise method,1,1,1,1,-1,-1,-1,-1
// TODO implement when azimuth is fixed,1,1,1,1,-1,-1,-1,-1
// TODO move this to a copy constructor?,1,1,1,1,-1,-1,-1,-1
// TODO perhaps move this code to JNI if it turns out being too slow.,1,1,1,1,-1,-1,-1,-1
// TODO pool fixtures,1,1,1,1,-1,-1,-1,-1
// TODO pool shapes,1,1,0,1,-1,-1,-1,-1
// TODO properly differentiate between lwjgl2 and 3 dependencies?,1,1,1,1,-1,-1,-1,-1
// TODO remember to disable this,1,1,1,1,-1,-1,-1,-1
// TODO remove debug code,1,1,1,1,-1,-1,-1,-1
// TODO(haustein) This will be slow,1,1,1,1,-1,-1,-1,-1
"// TODO(jgw): I don't think this is right, but might work for our purposes.",1,1,1,1,-1,-1,-1,-1
// TODO: Check if a HashMap.get calls are faster than iterating,1,1,1,1,-1,-1,-1,-1
// TODO: Move responsibility for combining attributes to RenderableProvider,1,1,1,1,-1,-1,-1,-1
// TODO: Perhaps move responsibility for combining attributes to RenderableProvider?,1,1,1,1,-1,-1,-1,-1
// TODO: Perhaps this method should be vertexSize aware??,1,1,1,1,-1,-1,-1,-1
"// TODO: Protected for now, because transforming a portion works but still copies all vertices",1,1,1,1,-1,-1,-1,-1
// TODO: Reuse existing animated tiles,1,1,1,1,-1,-1,-1,-1
// TODO: The following methods are deprecated and will be removed in a future release,1,1,1,1,-1,-1,-1,-1
// TODO: Use NSSearchPathForDirectoriesInDomains instead?,1,1,1,1,-1,-1,-1,-1
"// TODO: getVertices(vertices, start * vertexSize, count * vertexSize);",1,1,0,1,-1,-1,-1,-1
// TODO: make a real approximate method,1,1,1,1,-1,-1,-1,-1
// TODO: probably better to add some weight value to sort on,1,1,1,1,-1,-1,-1,-1
"// TODO: setVertices(start * vertexSize, vertices, 0, vertices.length);",1,1,0,1,-1,-1,-1,-1
// TODO: split the group,1,1,1,1,-1,-1,-1,-1
// TODO_ERIN adjust linear velocity and torque to account for movement of center.,1,1,1,1,-1,-1,-1,-1
// TODO_ERIN might not need to return the separation,1,1,1,1,-1,-1,-1,-1
// TODO_ERIN not implemented,1,1,1,1,-1,-1,-1,-1
// TODO_ERIN there might be some problem with the joint edges in Joint.,1,1,1,1,-1,-1,-1,-1
// TODO_ERIN use a hash table to remove a potential bottleneck when both,1,1,1,1,-1,-1,-1,-1
// TODO_ERIN use deepest?,1,1,1,1,-1,-1,-1,-1
// Xperia hack for circle key. gah...,1,1,1,1,-1,-1,-1,-1
"// drawing a sprite created from an atlas, FIXME wut?! AtlasSprite#setPosition seems to be wrong",1,1,0,1,-1,-1,-1,-1
// hack for software keyboard support,1,1,1,1,-1,-1,-1,-1
"// jw: this hack is not working always, renderer ends with error for some devices - because of uninitialized gl context",1,1,1,1,-1,-1,-1,-1
"// massive hack, GLKView resets the viewport on each draw call, so IOSGLES20",1,1,1,1,-1,-1,-1,-1
"// new GwtInstancer() {public GdxTest instance(){return new FlickScrollPaneTest();}}, // FIXME this messes up stuff, why?",1,1,1,1,-1,-1,-1,-1
"// new GwtInstancer() {public GdxTest instance(){return new PixmapBlendingTest();}}, // FIXME no idea why this doesn't",1,1,0,1,-1,-1,-1,-1
"// new GwtInstancer() {public GdxTest instance(){return new ScrollPaneTest();}}, // FIXME this messes up stuff, why?",1,1,1,1,-1,-1,-1,-1
"// new GwtInstancer() {public GdxTest instance(){return new ShaderMultitextureTest();}}, // FIXME fucks up stuff",1,1,1,1,-1,-1,-1,-1
"// new GwtInstancer() {public GdxTest instance(){return new StagePerformanceTest();}}, // FIXME borks out",1,1,0,1,-1,-1,-1,-1
// this is a hack. reason: we have to set the glHandle to 0 for textures that are,1,1,1,1,-1,-1,-1,-1
"// todo : the setFromAxis(v3,float) method should replace the set(v3,float) method",1,1,1,1,-1,-1,-1,-1
"// }, new GwtInstancer() { public GdxTest instance () { return new NoncontinuousRenderingTest(); } // FIXME doesn't compile due to",1,1,0,1,-1,-1,-1,-1
"/**     * A distance proxy is used by the GJK algorithm. It encapsulates any shape. TODO: see if we can just do assignments with     * m_vertices, instead of copying stuff over     *     * @author daniel     */",1,1,1,1,-1,-1,-1,-1
/**     * Friction mixing law. Feel free to customize this. TODO djm: add customization     *     * @param friction1     * @param friction2     * @return     */,1,1,1,1,-1,-1,-1,-1
/**     * Restitution mixing law. Feel free to customize this. TODO djm: add customization     *     * @param restitution1     * @param restitution2     * @return     */,1,1,1,1,-1,-1,-1,-1
"/**     * parts of meshes, used by nodes that have a graphical representation FIXME not sure if superfluous, stored in Nodes as well,     * could be useful to create bullet meshes *     */",1,1,0,1,-1,-1,-1,-1
/**     * the id of the node animated by this animation FIXME should be nodeId *     */,1,1,0,1,-1,-1,-1,-1
"/**     * the id, may be null, FIXME is this unique? *     */",1,1,0,1,-1,-1,-1,-1
"/**     * the materials of the model, used by nodes that have a graphical representation FIXME not sure if superfluous, allows     * modification of materials without having to traverse the nodes *     */",1,1,0,1,-1,-1,-1,-1
"// FIXME glGetBufferPointerv needs a proper translation// return GL15.glGetBufferPointer(target, pname);",1,1,0,1,-1,-1,-1,-1
// FIXME implement better sorting algorithm// final boolean same = o1.shader == o2.shader && o1.mesh == o2.mesh && (o1.lights == null) == (o2.lights == null) &&// o1.material.equals(o2.material);,1,1,0,1,-1,-1,-1,-1
"// FIXME print the chosen config// printConfigs(egl, display, new EGLConfig[] { config });",1,1,0,1,-1,-1,-1,-1
"// FIXME remove this.// printConfigs(egl, display, configs);// chose the best one, taking into account multi sampling.",1,1,0,1,-1,-1,-1,-1
"// FIXME this is bad, but some APIs seem to use ""ISO-8859-1"", fuckers...// if (! encoding.equals(""UTF-8"")) {// throw new UnsupportedEncodingException(encoding);// }",1,1,1,1,-1,-1,-1,-1
"// FIXME: a/A is currently not following the specs because it lacks strong typed, fixed sized containers,// see: https://github.com/thebuzzmedia/universal-binary-json/issues/27",1,1,0,1,-1,-1,-1,-1
"// HACK: added null check to handle set wallpaper from preview null// error in renderer// jw: this hack is not working always, renderer ends with error for some devices - because of uninitialized gl context// jw: now it shouldn't be necessary - after wallpaper backend refactoring:)",1,1,1,1,-1,-1,-1,-1
"// Hack, shouldn't be done but after all the modifiers allocated their channels// it's possible to check if we need to allocate previous position channel",1,1,1,1,-1,-1,-1,-1
"// TODO : it would be convenient if {@link com.badlogic.gdx.graphics.Texture} had a getFormat() method to assume transparency// from RGBA,..",1,1,1,1,-1,-1,-1,-1
"// TODO : the matrix4 set(quaternion) doesnt set the last row+col of the matrix to 0,0,0,1 so... that's why there is this// method",1,1,1,1,-1,-1,-1,-1
"// TODO Seems unused. Delete when confirmed.// /** Called in {@link AndroidLiveWallpaperService} on tap// * @param x// * @param y */// public void onTap (int x, int y) {// postTap(x, y);// }//// /** Called in {@link AndroidLiveWallpaperService} on drop// * @param x// * @param y */// public void onDrop (int x, int y) {// postTap(x, y);// }//// protected void postTap (int x, int y) {// synchronized (this) {// TouchEvent event = usedTouchEvents.obtain();// event.timeStamp = System.nanoTime();// event.pointer = 0;// event.x = x;// event.y = y;// event.type = TouchEvent.TOUCH_DOWN;// touchEvents.add(event);//// event = usedTouchEvents.obtain();// event.timeStamp = System.nanoTime();// event.pointer = 0;// event.x = x;// event.y = y;// event.type = TouchEvent.TOUCH_UP;// touchEvents.add(event);// }// Gdx.app.getGraphics().requestRendering();// }",1,1,1,1,-1,-1,-1,-1
// TODO move this to a copy constructor?// TODO duplicate the buffers without double copying the data if possible.// TODO perhaps move this code to JNI if it turns out being too slow.,1,1,1,1,-1,-1,-1,-1
// TODO pool shapes// TODO pool fixtures,0,1,1,1,-1,-1,-1,-1
// TODO: Check if a HashMap.get calls are faster than iterating// through an Array,1,1,1,1,-1,-1,-1,-1
// TODO: Use NSSearchPathForDirectoriesInDomains instead?// $HOME should point to the app root dir.,1,1,1,1,-1,-1,-1,-1
// TODO_ERIN use a hash table to remove a potential bottleneck when both// bodies have a lot of contacts.// Does a contact already exist?,1,1,1,1,-1,-1,-1,-1
"// The constraints are redundant, just use one.// TODO_ERIN use deepest?",1,1,1,1,-1,-1,-1,-1
// hack for software keyboard support// uses a hidden textfield to capture input// see: https://web.archive.org/web/20171016192705/http://www.badlogicgames.com/forum/viewtopic.php?f=17&t=11788,1,1,1,1,-1,-1,-1,-1
"// massive hack, GLKView resets the viewport on each draw call, so IOSGLES20// stores the last known viewport and we reset it here...",1,1,1,1,-1,-1,-1,-1
"// public void write(char[] cbuf, int off, int len) throws IOException {// // TODO Auto-generated method stub//// }",1,1,1,1,-1,-1,-1,-1
// this is a hack. reason: we have to set the glHandle to 0 for textures that are// reloaded through the asset manager as we first remove (and thus dispose) the texture// and then reload it. the glHandle is set to 0 in invalidateAllTextures prior to// removal from the asset manager.,1,1,1,1,-1,-1,-1,-1
/* TODO use this validator instead of LaissezFaireSubTypeValidator    public static final PolymorphicTypeValidator TYPE_VALIDATOR = BasicPolymorphicTypeValidator.builder()            .allowIfBaseType(java.util.HashMap.class)            .allowIfSubType(org.jruby.RubyNil.class)            .allowIfSubType(org.jruby.RubyString.class)            .allowIfSubType(org.logstash.ConvertedMap.class)            .allowIfSubType(org.logstash.ConvertedList.class)            .allowIfSubType(org.logstash.Timestamp.class)            .build();     */,1,1,1,1,-1,-1,-1,-1
"/** * @throws Exception On Failure * @todo cleanup path here, works though if you plug in a correct path */",1,1,1,1,-1,-1,-1,-1
"/** * FileLockFactory provides a way to obtain an exclusive file lock for a given dir path and lock name. * The obtainLock() method will return a Filelock object which should be released using the releaseLock() * method. Normally the returned FileLock object should not be manipulated directly. Only the obtainLock() * and releaseLock() methods should be use to gain and release exclusive access. * This is threadsafe and will work across threads on the same JVM and will also work across processes/JVM. * * TODO: because of the releaseLock() method, strictly speaking this class is not only a factory anymore, * maybe we should rename it FileLockManager? */",1,1,0,1,-1,-1,-1,-1
/** * Method to determine whether the event has already been processed by the DLQ - currently this * just checks the metadata to see if metadata has been added to the event that indicates that * it has already gone through the DLQ. * TODO: Add metadata around 'depth' to enable >1 iteration through the DLQ if required. * @param event Logstash Event * @return boolean indicating whether the event is eligible to be added to the DLQ */,1,1,1,1,-1,-1,-1,-1
/** * Page is considered empty if it does not contain any element or if all elements are acked. * * TODO: note that this should be the same as isFullyAcked once fixed per https://github.com/elastic/logstash/issues/7570 * * @return true if the page has no element or if all elements are acked. */,1,1,1,1,-1,-1,-1,-1
/** * Queue is considered empty if it does not contain any tail page and the headpage has no element or all * elements are acked * * TODO: note that this should be the same as isFullyAcked once fixed per https://github.com/elastic/logstash/issues/7570 * * @return true if the queue has no tail page and the head page is empty. */,1,1,1,1,-1,-1,-1,-1
"/** * Tests for {@link Main}. * todo: These tests are ignored for now, their runtime is simply unreasonable for any CI scenario. * We will have to find a reasonable trade-off here for making sure the benchmark code is functional * without increasing test runtime by many minutes. */",1,1,1,1,-1,-1,-1,-1
"/** * The default Queue has a capacity of 0 bytes, meaning infinite capacity. * todo: Remove the ability to set infinite capacity. */",1,1,1,1,-1,-1,-1,-1
"/** * The default Queue has a capacity of 0 events, meaning infinite capacity. * todo: Remove the ability to set infinite capacity. */",1,1,1,1,-1,-1,-1,-1
"/** * The default max unread count 0, meaning infinite. * todo: Remove the ability to set infinite capacity. */",1,1,1,1,-1,-1,-1,-1
"/** * This is a temporary fix to solve a bug in JRuby where classes implementing the Map interface, like LinkedHashMap * have a bug in the has_key? method that is implemented in the Enumerable module that is somehow mixed in the Map interface. * this bug makes has_key? (and all its aliases) return false for a key that has a nil value. * Only LinkedHashMap is patched here because patching the Map interface is not working. * TODO find proper fix, and submit upstream * relevant JRuby files: * https://github.com/jruby/jruby/blob/master/core/src/main/ruby/jruby/java/java_ext/java.util.rb * https://github.com/jruby/jruby/blob/master/core/src/main/java/org/jruby/java/proxies/MapJavaProxy.java * * @param context Thread context * @param self Ruby map object * @param key Key to find * @return RubyBoolean of true if the map contains the key */",1,1,1,1,-1,-1,-1,-1
// @todo: Refactor codebase to not rely on global constant for Ruby Runtime,1,1,1,1,-1,-1,-1,-1
"// Hack to be able to retrieve the original, unconverted Ruby object from Map",1,1,1,1,-1,-1,-1,-1
// Holder for Java::JavaUtil::LinkedHashMap and Java::JavaUtil::HashMap hacks only,1,1,1,1,-1,-1,-1,-1
// Holder for RubyArray hacks only,1,1,1,1,-1,-1,-1,-1
// Holder for RubyHash hacks only,1,1,1,1,-1,-1,-1,-1
// Holder for java::util::Collection hacks.,1,1,1,1,-1,-1,-1,-1
// Holder for java::util::Map hacks,1,1,1,1,-1,-1,-1,-1
// TODO - build reader for this version,1,1,1,1,-1,-1,-1,-1
// TODO create unique list to join all,1,1,1,1,-1,-1,-1,-1
// TODO page.0 file name is hard coded here because we did not expose the page file naming.,1,1,1,1,-1,-1,-1,-1
// TODO(guy) should these tags be BiValues?,1,1,1,1,-1,-1,-1,-1
// TODO: (colin) should be guard against this?,1,1,1,1,-1,-1,-1,-1
"// TODO: (colin) this is potentially dangerous, and could produce OOM using arbitrary big numbers",1,1,1,1,-1,-1,-1,-1
// TODO: (colin) this should be moved somewhere else to make it reusable,1,1,1,1,-1,-1,-1,-1
// TODO: I know this isn't a great exception message but at the time of writing I couldn't come up with anything better :P,1,1,1,1,-1,-1,-1,-1
// TODO: add UTF-8 validation,1,1,1,1,-1,-1,-1,-1
// TODO: add randomized testing on the page size (but must be > single element size),1,1,1,1,-1,-1,-1,-1
"// TODO: caller seems to think that the args is `Map<String, IRubyObject>`, but",1,1,1,1,-1,-1,-1,-1
// TODO: do we need to check is the channel is still open? not sure how it could be closed,1,1,1,1,-1,-1,-1,-1
// TODO: eventually refactor to use new bithandling class,1,1,1,1,-1,-1,-1,-1
// TODO: fixup mocks,1,1,0,1,-1,-1,-1,-1
// TODO: go steal LocalCheckpointService in feature/seq_no from ES,1,1,1,1,-1,-1,-1,-1
// TODO: here do directory traversal and cleanup lingering pages? could be a background operations to not delay queue start?,1,1,1,1,-1,-1,-1,-1
// TODO: how should we handle double-closing?,1,1,1,1,-1,-1,-1,-1
// TODO: https://github.com/elastic/elasticsearch/blob/feature/seq_no/core/src/main/java/org/elasticsearch/index/seqno/LocalCheckpointService.java,1,1,0,1,-1,-1,-1,-1
// TODO: not sure if we need to do this here since the headpage close will also call ensurePersisted,1,1,1,1,-1,-1,-1,-1
"// TODO: remove spec, since `Instant` is UTC by default.",1,1,1,1,-1,-1,-1,-1
// TODO: replace with LRU cache and/or isolated intern pool,1,1,1,1,-1,-1,-1,-1
// TODO: review close strategy and exception handling and resiliency of first closing tail pages if crash in the middle,1,1,1,1,-1,-1,-1,-1
// TODO: see if we can make it final?,1,1,1,1,-1,-1,-1,-1
// TODO: to make minSeqNum final we have to pass in the minSeqNum in the constructor and not set it on first write,1,1,1,1,-1,-1,-1,-1
// TODO: verify queue state integrity WRT Queue.open()/recover() at each step of this process,1,1,1,1,-1,-1,-1,-1
// TODO: we could possibly reuse the same page file but just rename it?,1,1,1,1,-1,-1,-1,-1
// TODO: we should eventually look into using alternate data structures to do more efficient dedup but that will require properly defining the tagging API too,1,1,1,1,-1,-1,-1,-1
// TODO: we should probably refactor this with a factory to force the creation of a fully,1,1,1,1,-1,-1,-1,-1
// TODO: we will want to avoid initiating a new write operation if Thread.interrupted() was called.,1,1,1,1,-1,-1,-1,-1
// hacky workaround using the toString method to avoid mocking the Ruby runtime,1,1,1,1,-1,-1,-1,-1
// to add this fully hacked page into tailPages. a new head page will just be created.,1,1,1,1,-1,-1,-1,-1
"/**         * The default Queue has a capacity of 0 bytes, meaning infinite capacity.         * todo: Remove the ability to set infinite capacity.         */",1,1,1,1,-1,-1,-1,-1
"/**         * The default Queue has a capacity of 0 events, meaning infinite capacity.         * todo: Remove the ability to set infinite capacity.         */",1,1,1,1,-1,-1,-1,-1
"/**         * The default max unread count 0, meaning infinite.         * todo: Remove the ability to set infinite capacity.         */",1,1,1,1,-1,-1,-1,-1
"/**         * This is a temporary fix to solve a bug in JRuby where classes implementing the Map interface, like LinkedHashMap         * have a bug in the has_key? method that is implemented in the Enumerable module that is somehow mixed in the Map interface.         * this bug makes has_key? (and all its aliases) return false for a key that has a nil value.         * Only LinkedHashMap is patched here because patching the Map interface is not working.         * TODO find proper fix, and submit upstream         * relevant JRuby files:         * https://github.com/jruby/jruby/blob/master/core/src/main/ruby/jruby/java/java_ext/java.util.rb         * https://github.com/jruby/jruby/blob/master/core/src/main/java/org/jruby/java/proxies/MapJavaProxy.java         *         * @param context Thread context         * @param self Ruby map object         * @param key Key to find         * @return RubyBoolean of true if the map contains the key         */",1,1,1,1,-1,-1,-1,-1
"/**     * @throws Exception On Failure     * @todo cleanup path here, works though if you plug in a correct path     */",1,1,1,1,-1,-1,-1,-1
/**     * Method to determine whether the event has already been processed by the DLQ - currently this     * just checks the metadata to see if metadata has been added to the event that indicates that     * it has already gone through the DLQ.     * TODO: Add metadata around 'depth' to enable >1 iteration through the DLQ if required.     * @param event Logstash Event     * @return boolean indicating whether the event is eligible to be added to the DLQ     */,1,1,1,1,-1,-1,-1,-1
/**     * Page is considered empty if it does not contain any element or if all elements are acked.     *     * TODO: note that this should be the same as isFullyAcked once fixed per https://github.com/elastic/logstash/issues/7570     *     * @return true if the page has no element or if all elements are acked.     */,1,1,1,1,-1,-1,-1,-1
/**     * Queue is considered empty if it does not contain any tail page and the headpage has no element or all     * elements are acked     *     * TODO: note that this should be the same as isFullyAcked once fixed per https://github.com/elastic/logstash/issues/7570     *     * @return true if the queue has no tail page and the head page is empty.     */,1,1,1,1,-1,-1,-1,-1
"// Hack to be able to retrieve the original, unconverted Ruby object from Map// it seems the only method providing this is internalGet but it is declared protected.// I know this is bad practice but I think this is practically acceptable.",1,1,1,1,-1,-1,-1,-1
// TODO: (colin) this should be moved somewhere else to make it reusable// this is a quick fix to compile on JDK7 a not use String.join that is// only available in JDK8,1,1,1,1,-1,-1,-1,-1
"// TODO: caller seems to think that the args is `Map<String, IRubyObject>`, but// at least any `id` present is actually a `String`.",1,1,1,1,-1,-1,-1,-1
"// TODO: fixup mocks// Calling ""new"" here manually to allow mocking the ctor in RSpec Tests",1,1,1,1,-1,-1,-1,-1
"// Timestamp should always be in a UTC representation// TODO: remove spec, since `Instant` is UTC by default.",1,1,1,1,-1,-1,-1,-1
// bit 0 is minSeqNum// TODO: go steal LocalCheckpointService in feature/seq_no from ES// TODO: https://github.com/elastic/elasticsearch/blob/feature/seq_no/core/src/main/java/org/elasticsearch/index/seqno/LocalCheckpointService.java,1,1,1,1,-1,-1,-1,-1
"// grow array by adding trailing null items// this strategy reflects legacy Ruby impl behaviour and is backed by specs// TODO: (colin) this is potentially dangerous, and could produce OOM using arbitrary big numbers// TODO: (colin) should be guard against this?",1,1,1,1,-1,-1,-1,-1
// here we can just purge the data file and avoid beheading since we do not need// to add this fully hacked page into tailPages. a new head page will just be created.// TODO: we could possibly reuse the same page file but just rename it?,1,1,1,1,-1,-1,-1,-1
// if there is no room for the seqNum and length bytes stop here// TODO: I know this isn't a great exception message but at the time of writing I couldn't come up with anything better :P,1,1,1,1,-1,-1,-1,-1
// now we have a queue state where page 0 is fully acked but not purged// manually truncate page 0 to zero byte.// TODO page.0 file name is hard coded here because we did not expose the page file naming.,1,1,1,1,-1,-1,-1,-1
"// the concrete class should be constructed with the pageNum, capacity and dirPath attributes// and open/recover/create must first be called to setup with physical data file//// TODO: we should probably refactor this with a factory to force the creation of a fully// initialized concrete object with either open/recover/create instead of allowing// a partially initialized object using the concrete class constructor. Not sure.// open an existing data container and reconstruct internal state if required",1,1,1,1,-1,-1,-1,-1
// the thread interrupt() has been called while in the await() blocking call.// at this point the interrupted flag is reset and Thread.interrupted() will return false// to any upstream calls on it. for now our choice is to return normally and set back// the Thread.interrupted() flag so it can be checked upstream.// this is a bit tricky in the case of the queue full condition blocking state.// TODO: we will want to avoid initiating a new write operation if Thread.interrupted() was called.// set back the interrupted flag,1,1,0,1,-1,-1,-1,-1
"/**     * The default Queue has a capacity of 0 bytes, meaning infinite capacity.     * todo: Remove the ability to set infinite capacity.     */",1,1,1,1,-1,-1,-1,-1
"/**     * The default Queue has a capacity of 0 events, meaning infinite capacity.     * todo: Remove the ability to set infinite capacity.     */",1,1,1,1,-1,-1,-1,-1
"/**     * The default max unread count 0, meaning infinite.     * todo: Remove the ability to set infinite capacity.     */",1,1,1,1,-1,-1,-1,-1
"/**     * This is a temporary fix to solve a bug in JRuby where classes implementing the Map interface, like LinkedHashMap     * have a bug in the has_key? method that is implemented in the Enumerable module that is somehow mixed in the Map interface.     * this bug makes has_key? (and all its aliases) return false for a key that has a nil value.     * Only LinkedHashMap is patched here because patching the Map interface is not working.     * TODO find proper fix, and submit upstream     * relevant JRuby files:     * https://github.com/jruby/jruby/blob/master/core/src/main/ruby/jruby/java/java_ext/java.util.rb     * https://github.com/jruby/jruby/blob/master/core/src/main/java/org/jruby/java/proxies/MapJavaProxy.java     *     * @param context Thread context     * @param self Ruby map object     * @param key Key to find     * @return RubyBoolean of true if the map contains the key     */",1,1,1,1,-1,-1,-1,-1
"/*    //TODO 545 thread safety of all mockito    use cases:       - single threaded execution throughout       - single threaded mock creation, stubbing & verification, multi-threaded interaction with mock       - thread per test case    */",1,1,1,1,-1,-1,-1,-1
"/** * Creates strict stubs runner implementation * * TODO, let's try to apply Brice suggestion and use switch + Strictness */",1,1,1,1,-1,-1,-1,-1
"/** * Hack the <code>name</code> field of the given <code>ObjectStreamClass</code> with * the <code>newProxyClass</code>. * <p/> * The parent ObjectInputStream will check the name of the class in the stream matches the name of the one * that is created in this method. * <p/> * The CGLIB classes uses a hash of the classloader and/or maybe some other data that allow them to be * relatively unique in a JVM. * <p/> * When names differ, which happens when the mock is deserialized in another ClassLoader, a * <code>java.io.InvalidObjectException</code> is thrown, so this part of the code is hacking through * the given <code>ObjectStreamClass</code> to change the name with the newly created class. * * @param descInstance The <code>ObjectStreamClass</code> that will be hacked. * @param proxyClass   The proxy class whose name will be applied. * @throws java.io.InvalidObjectException */",1,1,1,1,-1,-1,-1,-1
"/** * Injection strategy based on constructor. * * <p> * The strategy will search for the constructor with most parameters * and try to resolve mocks by type. * </p> * * <blockquote> * TODO on missing mock type, shall it abandon or create ""noname"" mocks. * TODO and what if the arg type is not mockable. * </blockquote> * * <p> * For now the algorithm tries to create anonymous mocks if an argument type is missing. * If not possible the algorithm abandon resolution. * </p> */",1,1,1,1,-1,-1,-1,-1
"/** * Streamlines testing async code for Mockito tests. * * Instances of this class are NOT thread safe (intentionally, they are not required to be thread safe) * * //TODO convert to test rule */",1,1,1,1,-1,-1,-1,-1
"/** * This is responsible for serializing a mock, it is enabled if the mock is implementing {@link Serializable}. * * <p> *     The way it works is to enable serialization with mode {@link SerializableMode#ACROSS_CLASSLOADERS}, *     if the mock settings is set to be serializable the mock engine will implement the *     {@link CrossClassLoaderSerializableMock} marker interface. *     This interface defines a the {@link CrossClassLoaderSerializableMock#writeReplace()} *     whose signature match the one that is looked by the standard Java serialization. * </p> * * <p> *     Then in the proxy class there will be a generated <code>writeReplace</code> that will delegate to *     {@link ForWriteReplace#doWriteReplace(MockAccess)} of mockito, and in turn will delegate to the custom *     implementation of this class {@link #writeReplace(Object)}. This method has a specific *     knowledge on how to serialize a mockito mock that is based on ByteBuddy and will ignore other Mockito MockMakers. * </p> * * <p><strong>Only one instance per mock! See {@link MockMethodInterceptor}</strong></p> * * TODO check the class is mockable in the deserialization side * * @see SubclassByteBuddyMockMaker * @see org.mockito.internal.creation.bytebuddy.MockMethodInterceptor * @author Brice Dutheil * @since 1.10.0 */",1,1,0,1,-1,-1,-1,-1
"// I know, I know. We're doing nasty reflection hacks here...",1,1,1,1,-1,-1,-1,-1
"// TODO #793 - when completed, we should be able to get rid of the CreationSettings casting",1,1,1,1,-1,-1,-1,-1
"// TODO #793 - when completed, we should be able to get rid of the casting below",1,1,1,1,-1,-1,-1,-1
"// TODO - currently we warn about ""Unused"" instead of ""Arg mismatch"" below",1,1,1,1,-1,-1,-1,-1
// TODO 792 also move other Strictness tests to this package (unless they already have good package),1,1,1,1,-1,-1,-1,-1
// TODO 792: assertion duplicated with StrictnessPerMockTest,1,1,1,1,-1,-1,-1,-1
// TODO 792: let's make NoInteractionsWanted exception contain the Invocation,1,1,1,1,-1,-1,-1,-1
// TODO 792: let's make UnnecessaryStubbingException exception contain the,1,1,1,1,-1,-1,-1,-1
// TODO 792: this assertion is duplicated with StrictnessPerMockTest,1,1,1,1,-1,-1,-1,-1
// TODO Consider to move to separate test,1,1,1,1,-1,-1,-1,-1
// TODO SF (perf tweak) in our codebase we call mockMaker.getHandler() multiple times,1,1,1,1,-1,-1,-1,-1
// TODO SF - I don't think we really need CreationSettings type,1,1,1,1,-1,-1,-1,-1
// TODO SF - add this validation and also add missing coverage,1,1,1,1,-1,-1,-1,-1
// TODO SF Replace with RealMethod and get rid of (possibly).,1,1,1,1,-1,-1,-1,-1
// TODO SF add unit tests and integ test coverage for toString(),1,1,1,1,-1,-1,-1,-1
// TODO SF check if we can reuse it for Mockito ArgumentMatcher,1,1,1,1,-1,-1,-1,-1
// TODO SF hacky...,1,1,1,1,-1,-1,-1,-1
// TODO SF overlap with ValuePrinter,1,1,0,1,-1,-1,-1,-1
"// TODO SF we need to provide hash code implementation so that there are no unexpected,",1,1,1,1,-1,-1,-1,-1
// TODO can we have a reflection test here? We had a couple of bugs here in the past.,1,1,1,1,-1,-1,-1,-1
"// TODO clean up all other state, null out stubbingLookupListener",1,1,1,1,-1,-1,-1,-1
// TODO do we really need to copy the entire settings every time we create mock object? it,1,1,1,1,-1,-1,-1,-1
// TODO due to the limited scope of static mocks they cannot be processed,1,1,1,1,-1,-1,-1,-1
// TODO duplicated elsewhere,1,1,1,1,-1,-1,-1,-1
// TODO interface for tests,1,1,1,1,-1,-1,-1,-1
"// TODO it would be nice if all useful information was in the top level exception,",1,1,1,1,-1,-1,-1,-1
// TODO lazy filtered stacktrace initialization,1,1,0,1,-1,-1,-1,-1
// TODO let's have a specific exception vs. generic assertion error + message,1,1,0,1,-1,-1,-1,-1
// TODO make exception message nicer,1,1,1,1,-1,-1,-1,-1
// TODO make it also showing errors for doReturn(),1,1,1,1,-1,-1,-1,-1
"// TODO make it better, it's easy to forget to clean up mocks and we still create new",1,1,1,1,-1,-1,-1,-1
// TODO need to be able to opt in for full stack trace instead of just relying on the stack,1,1,1,1,-1,-1,-1,-1
// TODO nice to have,1,1,1,1,-1,-1,-1,-1
// TODO refactor : code duplicated in SpyAnnotationEngine,1,1,1,1,-1,-1,-1,-1
// TODO refactor to use ClassLoaders,1,1,1,1,-1,-1,-1,-1
// TODO specific exception,1,1,1,1,-1,-1,-1,-1
// TODO the exception message includes Mockito internals like the name of the generated,1,1,1,1,-1,-1,-1,-1
// TODO there is not good reason we should get Invocation and InvocationMatcher here,1,1,1,1,-1,-1,-1,-1
// TODO this needs documentation and further analysis - what if someone changes the answer?,1,1,1,1,-1,-1,-1,-1
// TODO ugly exception message!!!,1,1,1,1,-1,-1,-1,-1
// TODO use ClassLoaders,1,1,1,1,-1,-1,-1,-1
// TODO use widely,1,1,1,1,-1,-1,-1,-1
"// TODO we should mark stubbed at the point of stubbing, not at the point where",1,1,1,1,-1,-1,-1,-1
// TODO we should throw some sensible exception if this is null.,1,1,1,1,-1,-1,-1,-1
// TODO: Add mockMaker option for @Spy annotation (#2740),1,1,1,1,-1,-1,-1,-1
// TODO: Report this as a problem because it makes little sense.,1,1,1,1,-1,-1,-1,-1
// TODO: Support casting.,1,1,1,1,-1,-1,-1,-1
// TODO: add specific test for synchronization of this block (it is tested by,1,1,1,1,-1,-1,-1,-1
// TODO: add tests for generated equals() method,1,1,1,1,-1,-1,-1,-1
// TODO: filter stack trace?,1,1,1,1,-1,-1,-1,-1
// TODO: for the same reason catch and give better feedback when hamcrest core is not found.,1,1,1,1,-1,-1,-1,-1
"// TODO: in order to provide decent exception message when objenesis is not found,",1,1,1,1,-1,-1,-1,-1
"// TODO: investigate ""keepTop"" commit history - no effect!",1,1,1,1,-1,-1,-1,-1
// TODO: profile,1,1,0,1,-1,-1,-1,-1
// TODO: should not use javax in case it changes,1,1,1,1,-1,-1,-1,-1
// TODO: should show message from actual failure not at the bottom but at least below 'the,1,1,1,1,-1,-1,-1,-1
// TODO: stubbed with those args here -> stubbed with certain args here,1,1,1,1,-1,-1,-1,-1
// XXX: doesn't mention foo(4) at all,1,1,1,1,-1,-1,-1,-1
// temporary loosy hack to avoid stackoverflow,1,1,1,1,-1,-1,-1,-1
// this is a hack to simulate desired behavior,1,1,1,1,-1,-1,-1,-1
// we attempt to validate an interaction of two modules. This is of course a bit hacky as those,1,1,1,1,-1,-1,-1,-1
"/**         * Hack the <code>name</code> field of the given <code>ObjectStreamClass</code> with         * the <code>newProxyClass</code>.         * <p/>         * The parent ObjectInputStream will check the name of the class in the stream matches the name of the one         * that is created in this method.         * <p/>         * The CGLIB classes uses a hash of the classloader and/or maybe some other data that allow them to be         * relatively unique in a JVM.         * <p/>         * When names differ, which happens when the mock is deserialized in another ClassLoader, a         * <code>java.io.InvalidObjectException</code> is thrown, so this part of the code is hacking through         * the given <code>ObjectStreamClass</code> to change the name with the newly created class.         *         * @param descInstance The <code>ObjectStreamClass</code> that will be hacked.         * @param proxyClass   The proxy class whose name will be applied.         * @throws java.io.InvalidObjectException         */",1,1,1,1,-1,-1,-1,-1
"/**     * Creates strict stubs runner implementation     *     * TODO, let's try to apply Brice suggestion and use switch + Strictness     */",1,1,1,1,-1,-1,-1,-1
"// At this point, we don't need the mocks any more and we can mark all collected mocks for// gc// TODO make it better, it's easy to forget to clean up mocks and we still create new// instance of list that nobody will read, it's also duplicated",1,1,1,1,-1,-1,-1,-1
"// At this point, we don't need the mocks any more and we can mark all collected mocks for// gc// TODO make it better, it's easy to forget to clean up mocks and we still create new// instance of list that nobody will read, it's also duplicated// TODO clean up all other state, null out stubbingLookupListener",1,1,1,1,-1,-1,-1,-1
// Ignore calls that are not arguments to another method call.// TODO: Report this as a problem because it makes little sense.// TODO: Support casting.,1,1,1,1,-1,-1,-1,-1
"// It is not ideal that we modify the state of MockCreationSettings object// MockCreationSettings is intended to be an immutable view of the creation settings// In future, we should start passing MockSettings object to the creation listener// TODO #793 - when completed, we should be able to get rid of the CreationSettings casting// below",1,1,1,1,-1,-1,-1,-1
"// TODO - currently we warn about ""Unused"" instead of ""Arg mismatch"" below// because it was simpler to implement. This can be improved given we put priority to// improve the warnings.// then",1,1,1,1,-1,-1,-1,-1
// TODO 792: assertion duplicated with StrictnessPerMockTest// and we should use assertions based on content of the exception rather than the string,1,1,1,1,-1,-1,-1,-1
// TODO 792: let's make UnnecessaryStubbingException exception contain the// Invocation instance// so that we can write clean assertion rather than depending on string,1,1,1,1,-1,-1,-1,-1
"// TODO SF (perf tweak) in our codebase we call mockMaker.getHandler() multiple times// unnecessarily// This is not ideal because getHandler() can be expensive (reflective calls inside mock// maker)// The frequent pattern in the codebase are separate calls to: 1) isMock(mock) then 2)// getMockHandler(mock)// We could replace it with using mockingDetails().isMock()// Let's refactor the codebase and use new mockingDetails() in all relevant places.// Potentially we could also move other methods to MockitoMock, some other candidates:// getInvocationContainer, isSpy, etc.// This also allows us to reuse our public API MockingDetails",1,1,1,1,-1,-1,-1,-1
// TODO SF - I don't think we really need CreationSettings type// TODO do we really need to copy the entire settings every time we create mock object? it// does not seem necessary.,1,1,1,1,-1,-1,-1,-1
"// TODO SF - add this validation and also add missing coverage// validator.validateDelegatedInstance(classToMock, settings.getDelegatedInstance());",1,1,1,1,-1,-1,-1,-1
"// TODO SF we need to provide hash code implementation so that there are no unexpected,// slight perf issues",1,1,1,1,-1,-1,-1,-1
// TODO due to the limited scope of static mocks they cannot be processed// it would rather be required to trigger this stubbing control upon releasing// the static mock.,1,1,1,1,-1,-1,-1,-1
"// TODO it would be nice if all useful information was in the top level exception,// instead of in the exception's cause// also applies to other scenarios in this test",1,1,1,1,-1,-1,-1,-1
// TODO make it also showing errors for doReturn()// doReturn(j).when(toMock).getValue(i);,1,1,1,1,-1,-1,-1,-1
// TODO need to be able to opt in for full stack trace instead of just relying on the stack// trace filter,1,1,1,1,-1,-1,-1,-1
// TODO the exception message includes Mockito internals like the name of the generated// class name.// I suspect that we could make this exception message nicer.,1,1,1,1,-1,-1,-1,-1
// TODO there is not good reason we should get Invocation and InvocationMatcher here// we should pass 2 InvocationMatchers and testing is easier// it's also confusing that unstubbed invocation is passed as InvocationMatcher (should be// rather Invocation)// this information comes in pairs,1,1,1,1,-1,-1,-1,-1
// TODO this needs documentation and further analysis - what if someone changes the answer?// we might think about implementing it straight on MockSettings,1,1,1,1,-1,-1,-1,-1
"// TODO we should mark stubbed at the point of stubbing, not at the point where// the stub is being used",1,1,1,1,-1,-1,-1,-1
// TODO: add specific test for synchronization of this block (it is tested by// InvocationContainerImplTest at the moment),1,1,1,1,-1,-1,-1,-1
"// TODO: in order to provide decent exception message when objenesis is not found,// have a constructor in this class that tries to instantiate ObjenesisStd and if it fails then// show decent exception that dependency is missing// TODO: for the same reason catch and give better feedback when hamcrest core is not found.",1,1,1,1,-1,-1,-1,-1
"// TODO: profile// TODO: investigate ""keepTop"" commit history - no effect!",0,1,1,1,-1,-1,-1,-1
// TODO: should show message from actual failure not at the bottom but at least below 'the// actual failure is ...',1,1,1,1,-1,-1,-1,-1
// We do not list all packages but only roots and packages that interact with the mock where// we attempt to validate an interaction of two modules. This is of course a bit hacky as those// libraries would normally be entirely encapsulated in an automatic module with all their classes// but it is sufficient for the test and saves us a significant amount of code.,1,1,1,1,-1,-1,-1,-1
"// mark started flag // per thread, not per instance// temporary loosy hack to avoid stackoverflow",1,1,1,1,-1,-1,-1,-1
"/**     * Hack the <code>name</code> field of the given <code>ObjectStreamClass</code> with     * the <code>newProxyClass</code>.     * <p/>     * The parent ObjectInputStream will check the name of the class in the stream matches the name of the one     * that is created in this method.     * <p/>     * The CGLIB classes uses a hash of the classloader and/or maybe some other data that allow them to be     * relatively unique in a JVM.     * <p/>     * When names differ, which happens when the mock is deserialized in another ClassLoader, a     * <code>java.io.InvalidObjectException</code> is thrown, so this part of the code is hacking through     * the given <code>ObjectStreamClass</code> to change the name with the newly created class.     *     * @param descInstance The <code>ObjectStreamClass</code> that will be hacked.     * @param proxyClass   The proxy class whose name will be applied.     * @throws java.io.InvalidObjectException     */",1,1,1,1,-1,-1,-1,-1
"/** * @todo Although the HTTP code has been unified, there may still be opportunity * to refactor a higher level querying library out of this which could be shared * with StandardReconConfig * * It may also be possible to extract a library to query reconciliation services * which could be used outside of OpenRefine. */",1,1,1,1,-1,-1,-1,-1
"/** * A List implementation to match the characteristics needed by the * import process.  It's optimized for a relatively small number of * contiguous records at a potentially large offset from zero. * <p> * I suspect it's usually only a single row, but we support more, just * not as efficiently.  Depending on the behavior of the ColumnGroups * this may not be necessary at all, but I don't fully understand what it * does, so we'll just put this hack in place for now. * * @param <T> */",1,1,0,1,-1,-1,-1,-1
"/** * A store for the allowed language code for terms and monolingual text values * in Wikibase. * * @todo separate the languages allowed for terms from the ones allowed for monolingual text. * Currently the list is for monolingual texts (which is larger). * * Query to update this list: * curl ""https://www.wikidata.org/w/api.php?action=query&meta=wbcontentlanguages&wbclprop=code&wbclcontext=monolingualtext&format=json"" | jq "".query.wbcontentlanguages[].code"" | sed -e ""s/$/,/"" * * @author Antonin Delpeuch */",1,1,1,1,-1,-1,-1,-1
"/** * Constructor. * @todo remove this, it does not create a valid schema. */",1,1,1,1,-1,-1,-1,-1
"/** * Default strategy used in previous versions of the tool, where no * strategy could be specified. * TODO make it faithful to what it was before. */",1,1,1,1,-1,-1,-1,-1
/** * Generates the statement groups which should appear on this entity if it is created * as new. * @todo those statements are not currently deduplicated among themselves */,1,1,1,1,-1,-1,-1,-1
/** * TODO * - use JsonIdentityInfo on recon * - implement custom resolver to tie it to a pool * - figure it all out * @return */,1,1,1,1,-1,-1,-1,-1
"/** * TODO the following tests were written for LoginCommand but actually test ConnectionManager. They should be * rewritten to directly test this class. * * @Test public void testLogoutFailedBecauseCredentialsExpired() throws Exception { // if our credentials expire and *       we try to log out, // we should consider that the logout succeeded. // Workaround for *       https://github.com/Wikidata/Wikidata-Toolkit/issues/511 BasicApiConnection connection = *       mock(BasicApiConnection.class); *       whenNew(BasicApiConnection.class).withAnyArguments().thenReturn(connection); *       when(connection.getCurrentUser()).thenReturn(username); * *       when(request.getParameter(""csrf_token"")).thenReturn(Command.csrfFactory.getFreshToken()); *       when(request.getParameter(API_ENDPOINT)).thenReturn(apiEndpoint); *       when(request.getParameter(USERNAME)).thenReturn(username); *       when(request.getParameter(PASSWORD)).thenReturn(password); * *       // login first command.doPost(request, response); * *       assertTrue(ConnectionManager.getInstance().isLoggedIn(apiEndpoint)); * *       // logout when(request.getParameter(""logout"")).thenReturn(""true""); doThrow(new *       MediaWikiApiErrorException(""assertuserfailed"", ""No longer logged in"")).when(connection).logout(); *       command.doPost(request, response); * *       // not logged in anymore assertFalse(ConnectionManager.getInstance().isLoggedIn(apiEndpoint)); } * * @Test public void testMultipleConnections() throws Exception { BasicApiConnection connection = *       mock(BasicApiConnection.class); *       whenNew(BasicApiConnection.class).withAnyArguments().thenReturn(connection); *       when(connection.getCurrentUser()).thenReturn(username); * *       String wikibase1 = ""https://www.wikibase1.org/w/api.php""; String wikibase2 = *       ""https://www.wikibase2.org/w/api.php""; * *       when(request.getParameter(""csrf_token"")).thenReturn(Command.csrfFactory.getFreshToken()); *       when(request.getParameter(USERNAME)).thenReturn(username); *       when(request.getParameter(PASSWORD)).thenReturn(password); * *       // login to one endpoint first when(request.getParameter(API_ENDPOINT)).thenReturn(wikibase1); *       command.doPost(request, response); * *       // not logged in to another endpoint assertFalse(ConnectionManager.getInstance().isLoggedIn(wikibase2)); * *       // login to another endpoint when(request.getParameter(API_ENDPOINT)).thenReturn(wikibase2); *       command.doPost(request, response); * *       // logged in to both endpoints assertTrue(ConnectionManager.getInstance().isLoggedIn(wikibase1)); *       assertTrue(ConnectionManager.getInstance().isLoggedIn(wikibase2)); * *       // logout from the first endpoint when(request.getParameter(""logout"")).thenReturn(""true""); *       when(request.getParameter(API_ENDPOINT)).thenReturn(wikibase1); command.doPost(request, response); * *       // logged out from the first endpoint assertFalse(ConnectionManager.getInstance().isLoggedIn(wikibase1)); * *       // still logged in to another endpoint assertTrue(ConnectionManager.getInstance().isLoggedIn(wikibase2)); } */",1,1,1,1,-1,-1,-1,-1
/** * The UI format and the backend format differ for serialization (the UI never deserializes and the backend * serialization did not matter). TODO: change the frontend so it uses the same format. */,1,1,1,1,-1,-1,-1,-1
"// ""1=1"", // TODO: Throws NullPointerException",1,1,1,1,-1,-1,-1,-1
"// ""2^3"" // TODO: Should this generate an error?",1,1,1,1,-1,-1,-1,-1
// .setRedirectStrategy(new LaxRedirectStrategy()) // TODO: No longer needed since default doesn't exclude POST?,1,1,1,1,-1,-1,-1,-1
// FIXME - should we try and use mock(Project.class); - seems unnecessary complexity,1,1,0,1,-1,-1,-1,-1
// FIXME is adding a null cell (to represent no data) OK?,1,1,0,1,-1,-1,-1,-1
"// FIXME is adding a null cell (to represent no data, or a zero width column) OK?",1,1,0,1,-1,-1,-1,-1
// FIXME this line break is doubled - is this correct??,1,1,0,1,-1,-1,-1,-1
// FIXME what should be the behaviour if metadata is null? i.e. not found,1,1,0,1,-1,-1,-1,-1
// FIXME what should be the behaviour if project is null? i.e. not found or loaded.,1,1,0,1,-1,-1,-1,-1
"// FIXME what should happen if the metadata is found, but not the project? or vice versa?",1,1,0,1,-1,-1,-1,-1
// FIXME(SM): this initialization logic depends on the fact that the JVM's,1,1,0,1,-1,-1,-1,-1
"// FIXME: A LocalDate has no timezone, by definition.",1,1,0,1,-1,-1,-1,-1
// FIXME: Date/times without timezone info were interpreted as local up until May 2018 at which point they,1,1,0,1,-1,-1,-1,-1
// FIXME: Our JSON guesser doesn't work on small files,1,1,0,1,-1,-1,-1,-1
// FIXME: Probably need a test for this,1,1,1,1,-1,-1,-1,-1
// FIXME: Redundant? already includes in client builder,1,1,0,1,-1,-1,-1,-1
// FIXME: These return null instead of an EvalError,1,1,0,1,-1,-1,-1,-1
// FIXME: This error will get lost,1,1,0,1,-1,-1,-1,-1
// FIXME: This is English specific,1,1,0,1,-1,-1,-1,-1
// FIXME: This is fragile. Can we find out how many columns we have rather than assuming,1,1,0,1,-1,-1,-1,-1
"// FIXME: This is not a good error reporting mechanism, but it's what there today",1,1,1,1,-1,-1,-1,-1
// FIXME: This is wasteful of space and time. We should try to process on the fly,1,1,0,1,-1,-1,-1,-1
"// FIXME: We have a 10MB cap on the request size, but I'm not sure we've got a good",1,1,0,1,-1,-1,-1,-1
// FIXME: is trimming quotation marks appropriate?,1,1,0,1,-1,-1,-1,-1
// HACK to work around preferences corruption,1,1,1,1,-1,-1,-1,-1
// Latin Extended C - TODO: not supported yet,1,1,1,1,-1,-1,-1,-1
// TODO : Not sure what to do here?,1,1,1,1,-1,-1,-1,-1
"// TODO Antonin, 2022-02-11: remove this casting once we have https://github.com/Wikidata/Wikidata-Toolkit/issues/651",1,1,1,1,-1,-1,-1,-1
// TODO Do we want to make sure we can successfully deserialize the file too?,1,1,1,1,-1,-1,-1,-1
"// TODO For now, we know that they are all item updates because items are the only things we can create",1,1,1,1,-1,-1,-1,-1
// TODO This should ideally be hidden in a helper:,1,1,1,1,-1,-1,-1,-1
// TODO add EvalError instead? That is not so convenient,1,1,1,1,-1,-1,-1,-1
// TODO add checks for new MediaInfoEntities,1,1,1,1,-1,-1,-1,-1
// TODO check record,1,1,1,1,-1,-1,-1,-1
// TODO check that the datatype of the property matches that of the datavalue,1,1,1,1,-1,-1,-1,-1
// TODO find a way to report these errors to the user in a nice way,1,1,1,1,-1,-1,-1,-1
"// TODO instead of returning an empty (and invalid) schema, we should just return an error",1,1,1,1,-1,-1,-1,-1
"// TODO make the processManager variable private, and force all calls through this method",1,1,1,1,-1,-1,-1,-1
"// TODO migrate to System.getProperty(""user.home"")?",1,1,1,1,-1,-1,-1,-1
// TODO need to mock Timer and inject it into RefineServlet. Also need to deal with ProjectManager.singleton,1,1,1,1,-1,-1,-1,-1
"// TODO need to stub super.init(), mock Timer and inject it into RefineServlet",1,1,1,1,-1,-1,-1,-1
"// TODO possible improvements: bounds support, timezone support",1,1,1,1,-1,-1,-1,-1
"// TODO refactor getEngine to use dependency injection, so a mock Engine",1,1,1,1,-1,-1,-1,-1
// TODO refactor this so that we check if the save is needed before writing to the file!,1,1,1,1,-1,-1,-1,-1
// TODO revisit this when (if?) federation support makes it possible,1,1,1,1,-1,-1,-1,-1
// TODO support for deleted statements,1,1,1,1,-1,-1,-1,-1
// TODO test canSaveAllModifiedWithRaceCondition,1,1,1,1,-1,-1,-1,-1
// TODO test ensureProjectSave in race condition,1,1,1,1,-1,-1,-1,-1
// TODO test registerProject in race condition,1,1,1,1,-1,-1,-1,-1
// TODO this does not seem to do anything - maybe we need to pass it to OpenRefine in some other way?,1,1,1,1,-1,-1,-1,-1
// TODO what format here?,1,1,1,1,-1,-1,-1,-1
// TODO would need to mock Timer and inject it into RefineServlet. Also need to deal with ProjectManager.singleton,1,1,1,1,-1,-1,-1,-1
// TODO(dfhuynh): Temporary solution until we figure out why cross butterfly module class resolution,1,1,1,1,-1,-1,-1,-1
// TODO: Add support for processing in record mode instead of just by rows,1,1,1,1,-1,-1,-1,-1
// TODO: Add tests for non-Western languages,1,1,1,1,-1,-1,-1,-1
// TODO: An array of doubles would be more memmory efficient - double[] allValues,1,1,1,1,-1,-1,-1,-1
// TODO: Do we need to preserve the original filename? Take first piece before #?,1,1,1,1,-1,-1,-1,-1
// TODO: Do we really want the following two tests to return different results?,1,1,1,1,-1,-1,-1,-1
"// TODO: From a human factors point of view, we probably want",1,1,1,1,-1,-1,-1,-1
// TODO: Guess based on sniffing magic numbers,1,1,1,1,-1,-1,-1,-1
// TODO: How do we do output hyperlinks?,1,1,1,1,-1,-1,-1,-1
"// TODO: If different files have different encodings, we're only able to present a single",1,1,0,1,-1,-1,-1,-1
"// TODO: If we had a time datatype, we could use something like the following",1,1,1,1,-1,-1,-1,-1
// TODO: Internationalize (i18n),1,1,1,1,-1,-1,-1,-1
// TODO: Make private? At least protected?,1,1,1,1,-1,-1,-1,-1
// TODO: Make thresholds proportional to the amount of data read?,1,1,1,1,-1,-1,-1,-1
// TODO: Move this to the CSV project?,1,1,1,1,-1,-1,-1,-1
// TODO: Not sure what to do yet,1,1,1,1,-1,-1,-1,-1
// TODO: Only increment for first instance in record?,1,1,1,1,-1,-1,-1,-1
"// TODO: Only use ""key column"" if it's 100% populated?",1,1,1,1,-1,-1,-1,-1
// TODO: Option to keep partial results after cancellation?,1,1,1,1,-1,-1,-1,-1
// TODO: Placeholder for future Basic Auth implementation,1,1,1,1,-1,-1,-1,-1
// TODO: Should these be converted to spaces instead of being removed?,1,1,1,1,-1,-1,-1,-1
// TODO: Should this return an empty array?,1,1,1,1,-1,-1,-1,-1
// TODO: Should this use ServletException instead of respondException?,1,1,1,1,-1,-1,-1,-1
"// TODO: The escape below looks wrong, but is probably harmless in most cases",1,1,1,1,-1,-1,-1,-1
"// TODO: The standard lang name is ""JSONLD""",1,1,1,1,-1,-1,-1,-1
"// TODO: The standard lang name is ""N-TRIPLE""",1,1,0,1,-1,-1,-1,-1
// TODO: These don't get folded to ASCII equivalents. Not sure if they should be,1,1,1,1,-1,-1,-1,-1
// TODO: This can fail silently if the Freebase extension is not installed.,1,1,1,1,-1,-1,-1,-1
"// TODO: This doesn't really make sense since a LocalDate, by definition, doesn't have timezone info",1,1,1,1,-1,-1,-1,-1
"// TODO: This is current behavior, but is it what we want?",1,1,1,1,-1,-1,-1,-1
// TODO: This is using the default locale. Is that what we want?,1,1,1,1,-1,-1,-1,-1
// TODO: This needs to be refactored to be able to test import from archives,1,1,1,1,-1,-1,-1,-1
// TODO: This seems like a lot,1,1,1,1,-1,-1,-1,-1
// TODO: This test fails because the HTML table exporter,1,1,1,1,-1,-1,-1,-1
"// TODO: This will save a separate copy for each file in the import, but they're",1,1,1,1,-1,-1,-1,-1
// TODO: Throw exception instead?,1,1,1,1,-1,-1,-1,-1
// TODO: We could probably lazily initialize these when needed for efficiency,1,1,1,1,-1,-1,-1,-1
// TODO: We need a way to provide progress to the user during long uploads,1,1,1,1,-1,-1,-1,-1
// TODO: We really want the column/group with the highest % of,1,1,1,1,-1,-1,-1,-1
// TODO: We really want to store this on the request so it's available for everyone,1,1,1,1,-1,-1,-1,-1
// TODO: We should switch from using the internal compiler class,1,1,1,1,-1,-1,-1,-1
// TODO: We should to switch from using Compiler.load,1,1,1,1,-1,-1,-1,-1
"// TODO: We'd like things to be more strongly typed a la the following, but",1,1,1,1,-1,-1,-1,-1
// TODO: We'll never see this after decomposition,1,1,1,1,-1,-1,-1,-1
// TODO: add more test cases,1,1,1,1,-1,-1,-1,-1
// TODO: better error reporting,1,1,1,1,-1,-1,-1,-1
// TODO: cell.getHyperlink();,1,1,1,1,-1,-1,-1,-1
// TODO: check data types,1,1,1,1,-1,-1,-1,-1
"// TODO: check validity of new cell index, e.g., it's not in any group",1,1,1,1,-1,-1,-1,-1
// TODO: how can we tell if a cell contains an error?,1,1,1,1,-1,-1,-1,-1
// TODO: hyperlink.getAddress();,1,1,0,1,-1,-1,-1,-1
// TODO: look for other mexican indian words,1,1,1,1,-1,-1,-1,-1
// TODO: make customizable?,1,1,1,1,-1,-1,-1,-1
// TODO: more tests for datetimes with timezones and/or offsets,1,1,1,1,-1,-1,-1,-1
// TODO: more thorough URL validation instead,1,1,1,1,-1,-1,-1,-1
// TODO: remove currentDocs.isEmpty() once https://github.com/Wikidata/Wikidata-Toolkit/issues/402 is solved,1,1,1,1,-1,-1,-1,-1
// TODO: return null instead (like fallthrough case),1,1,1,1,-1,-1,-1,-1
// TODO: support exponent e notation,1,1,1,1,-1,-1,-1,-1
// TODO: support repeating keys in this mode too,1,1,1,1,-1,-1,-1,-1
// TODO: test with column reconciled against different identifier space,1,1,1,1,-1,-1,-1,-1
// TODO: this can be hoisted into superclass,1,1,1,1,-1,-1,-1,-1
// XXX see if we can shift things around,0,1,1,1,-1,-1,-1,-1
// hack to make sure we have a non-null snak,1,1,1,1,-1,-1,-1,-1
// } else if (v instanceof EvalError) { // @ToDo fix this with issue #2562,1,1,1,1,-1,-1,-1,-1
"/**     * @todo Although the HTTP code has been unified, there may still be opportunity     * to refactor a higher level querying library out of this which could be shared     * with StandardReconConfig     *     * It may also be possible to extract a library to query reconciliation services     * which could be used outside of OpenRefine.     */",1,1,1,1,-1,-1,-1,-1
"/**     * A List implementation to match the characteristics needed by the     * import process.  It's optimized for a relatively small number of     * contiguous records at a potentially large offset from zero.     * <p>     * I suspect it's usually only a single row, but we support more, just     * not as efficiently.  Depending on the behavior of the ColumnGroups     * this may not be necessary at all, but I don't fully understand what it     * does, so we'll just put this hack in place for now.     *     * @param <T>     */",1,1,0,1,-1,-1,-1,-1
"/**     * Constructor.     * @todo remove this, it does not create a valid schema.     */",1,1,1,1,-1,-1,-1,-1
"/**     * Default strategy used in previous versions of the tool, where no     * strategy could be specified.     * TODO make it faithful to what it was before.     */",1,1,1,1,-1,-1,-1,-1
/**     * Generates the statement groups which should appear on this entity if it is created     * as new.     * @todo those statements are not currently deduplicated among themselves     */,1,1,1,1,-1,-1,-1,-1
/**     * TODO     * - use JsonIdentityInfo on recon     * - implement custom resolver to tie it to a pool     * - figure it all out     * @return     */,1,1,1,1,-1,-1,-1,-1
"/**     * TODO the following tests were written for LoginCommand but actually test ConnectionManager. They should be     * rewritten to directly test this class.     *     * @Test public void testLogoutFailedBecauseCredentialsExpired() throws Exception { // if our credentials expire and     *       we try to log out, // we should consider that the logout succeeded. // Workaround for     *       https://github.com/Wikidata/Wikidata-Toolkit/issues/511 BasicApiConnection connection =     *       mock(BasicApiConnection.class);     *       whenNew(BasicApiConnection.class).withAnyArguments().thenReturn(connection);     *       when(connection.getCurrentUser()).thenReturn(username);     *     *       when(request.getParameter(""csrf_token"")).thenReturn(Command.csrfFactory.getFreshToken());     *       when(request.getParameter(API_ENDPOINT)).thenReturn(apiEndpoint);     *       when(request.getParameter(USERNAME)).thenReturn(username);     *       when(request.getParameter(PASSWORD)).thenReturn(password);     *     *       // login first command.doPost(request, response);     *     *       assertTrue(ConnectionManager.getInstance().isLoggedIn(apiEndpoint));     *     *       // logout when(request.getParameter(""logout"")).thenReturn(""true""); doThrow(new     *       MediaWikiApiErrorException(""assertuserfailed"", ""No longer logged in"")).when(connection).logout();     *       command.doPost(request, response);     *     *       // not logged in anymore assertFalse(ConnectionManager.getInstance().isLoggedIn(apiEndpoint)); }     *     * @Test public void testMultipleConnections() throws Exception { BasicApiConnection connection =     *       mock(BasicApiConnection.class);     *       whenNew(BasicApiConnection.class).withAnyArguments().thenReturn(connection);     *       when(connection.getCurrentUser()).thenReturn(username);     *     *       String wikibase1 = ""https://www.wikibase1.org/w/api.php""; String wikibase2 =     *       ""https://www.wikibase2.org/w/api.php"";     *     *       when(request.getParameter(""csrf_token"")).thenReturn(Command.csrfFactory.getFreshToken());     *       when(request.getParameter(USERNAME)).thenReturn(username);     *       when(request.getParameter(PASSWORD)).thenReturn(password);     *     *       // login to one endpoint first when(request.getParameter(API_ENDPOINT)).thenReturn(wikibase1);     *       command.doPost(request, response);     *     *       // not logged in to another endpoint assertFalse(ConnectionManager.getInstance().isLoggedIn(wikibase2));     *     *       // login to another endpoint when(request.getParameter(API_ENDPOINT)).thenReturn(wikibase2);     *       command.doPost(request, response);     *     *       // logged in to both endpoints assertTrue(ConnectionManager.getInstance().isLoggedIn(wikibase1));     *       assertTrue(ConnectionManager.getInstance().isLoggedIn(wikibase2));     *     *       // logout from the first endpoint when(request.getParameter(""logout"")).thenReturn(""true"");     *       when(request.getParameter(API_ENDPOINT)).thenReturn(wikibase1); command.doPost(request, response);     *     *       // logged out from the first endpoint assertFalse(ConnectionManager.getInstance().isLoggedIn(wikibase1));     *     *       // still logged in to another endpoint assertTrue(ConnectionManager.getInstance().isLoggedIn(wikibase2)); }     */",1,1,1,1,-1,-1,-1,-1
/**     * The UI format and the backend format differ for serialization (the UI never deserializes and the backend     * serialization did not matter). TODO: change the frontend so it uses the same format.     */,1,1,1,1,-1,-1,-1,-1
"// -------------------AutoSaveTimerTask tests-----------// TODO would need to mock Timer and inject it into RefineServlet. Also need to deal with ProjectManager.singleton// -------------------init tests------------------------// TODO need to stub super.init(), mock Timer and inject it into RefineServlet// -------------------destroy tests---------------------// TODO need to mock Timer and inject it into RefineServlet. Also need to deal with ProjectManager.singleton// --------------------doGet tests----------------------",1,1,1,1,-1,-1,-1,-1
"// FIXME(SM): this initialization logic depends on the fact that the JVM's// current working directory is the root of the OpenRefine distributions// or the development checkouts. While this works in practice, it would// be preferable to have a more reliable address space, but since we// don't have access to the servlet context from this class this is// the best we can do for now.",1,1,0,1,-1,-1,-1,-1
"// FIXME: Date/times without timezone info were interpreted as local up until May 2018 at which point they// switch to UTC// assertEquals(invoke(""toDate"", ""2013-06-01T13:12:11""), CalendarParser.parseAsOffsetDateTime(""2013-06-01// 13:12:11""));// These match current behavior, but would fail with the historic (pre-2018) behavior",1,1,0,1,-1,-1,-1,-1
"// FIXME: Probably need a test for this// Comparable[] is a (slight) lie since nulls can be included, but our comparator will handle them",1,1,0,1,-1,-1,-1,-1
"// FIXME: These return null instead of an EvalError// assertTrue(invoke(""chomp"") instanceof EvalError);// assertTrue(invoke(""chomp"", """") instanceof EvalError);// assertTrue(invoke(""chomp"", 1, 1) instanceof EvalError);",1,1,0,1,-1,-1,-1,-1
// FIXME: This is fragile. Can we find out how many columns we have rather than assuming// it'll always be the default A-Z?,1,1,0,1,-1,-1,-1,-1
"// FIXME: We have a 10MB cap on the request size, but I'm not sure we've got a good// way to quickly tell how big our request is. Just reduce row count for now.",1,1,0,1,-1,-1,-1,-1
// NOTE: both year and day are set// XXX see if we can shift things around,0,1,1,1,-1,-1,-1,-1
// Start a new row on our beginning of record key// TODO: Add support for processing in record mode instead of just by rows,1,1,1,1,-1,-1,-1,-1
// TODO This should ideally be hidden in a helper:// https://github.com/Wikidata/Wikidata-Toolkit/issues/471,1,1,1,1,-1,-1,-1,-1
// TODO add EvalError instead? That is not so convenient// for users because they would lose the cell contents.// Better leave the cell unreconciled so they can be reconciled again later.,1,1,1,1,-1,-1,-1,-1
// TODO check that the datatype of the property matches that of the datavalue// (important when we introduce property variables),1,1,1,1,-1,-1,-1,-1
"// TODO refactor getEngine to use dependency injection, so a mock Engine// object can be used.",1,1,1,1,-1,-1,-1,-1
// TODO test canSaveAllModifiedWithRaceCondition// -------------helpers-------------,0,1,1,1,-1,-1,-1,-1
// TODO(dfhuynh): Temporary solution until we figure out why cross butterfly module class resolution// doesn't entirely work,1,1,1,1,-1,-1,-1,-1
"// TODO: Do we need to preserve the original filename? Take first piece before #?// JSONUtilities.safePut(options, ""fileSource"", fileSource + ""#"" + sheet.getSheetName());",1,1,1,1,-1,-1,-1,-1
"// TODO: If different files have different encodings, we're only able to present a single// encoding to the user currently. Should we check for conflicts? Warn the user?",1,1,1,1,-1,-1,-1,-1
"// TODO: If we had a time datatype, we could use something like the following// to distinguish times from dates (although Excel doesn't really make the distinction)// Another alternative would be to look for values < 0.60// String format = cell.getCellStyle().getDataFormatString();// if (!format.contains(""d"") && !format.contains(""m"") && !format.contains(""y"") ) {// // It's just a time// }",1,1,1,1,-1,-1,-1,-1
"// TODO: Placeholder for future Basic Auth implementation// String userinfo = url.getUserInfo();// // HTTPS only - no sending password in the clear over HTTP// if (""https"".equals(url.getProtocol()) && userinfo != null) {// int s = userinfo.indexOf(':');// if (s > 0) {// String user = userinfo.substring(0, s);// String pw = userinfo.substring(s + 1, userinfo.length());// CredentialsProvider credsProvider = new BasicCredentialsProvider();// credsProvider.setCredentials(new AuthScope(url.getHost(), 443),// new UsernamePasswordCredentials(user, pw.toCharArray()));// httpClientBuilder = httpClientBuilder.setDefaultCredentialsProvider(credsProvider);// }// }",1,1,1,1,-1,-1,-1,-1
"// TODO: The standard lang name is ""N-TRIPLE""// we may need to switch if we change packagings",1,1,1,1,-1,-1,-1,-1
"// TODO: These don't get folded to ASCII equivalents. Not sure if they should be// {""ƄƅƉƊƋƌƔƕƖƗƘƙƚƛƜƝƞƟƠơƢƣƤƥƦƧƨƩƪƫƬƭƮƯưƱƲƳƴƵƶƷƸƹƺƻƼƽƾƿǀǁǂǃǄǅǆǇǈǉǊǋǌǍǎǏǐǑǒǓǔǕǖǗǘǙǚǛǜǝ"",// ""bbddddhiikkllmnnooooopprssssttttuuuuyyzz                      aaiioouuuuuuuuuux""},// {""ǞǟǠǡǢǣǤǥǦǧǨǩǪǫǬǭǮǯǰǱǲǳǴǵǶǷǸǹǺǻǼǽǾǿȀȁȂȃȄȅȆȇȈȉȊȋȌȍȎȏȐȑȒȓȔȕȖȗȘșȚțȜȝȞȟȠȡȢȣȤȥȦȧȨȩȪȫȬȭȮȯȰȱȲȳȴȵȶȷȸȹȺȻȼȽȾȿɀɁɂɃɄɅɆɇɈɉɊɋɌɍɎɏ"",// ""aaaaaeaeggggkkqqqqqssjdzdzggpnnaaaeaeooaaaeeeeeiiiioooorrrruuuusstt    zzaaeeooooooooyy""},// Latin Extended Additional",1,1,1,1,-1,-1,-1,-1
// TODO: This test fails because the HTML table exporter// apparently doesn't honor the column header option. Should it?,1,1,1,1,-1,-1,-1,-1
"// TODO: This will save a separate copy for each file in the import, but they're// going to be mostly the same",1,1,1,1,-1,-1,-1,-1
"// TODO: We really want the column/group with the highest % of// records with at least one row populated, so popular optional// elements with multiple instances per record don't// outweigh mandatory elements with a single occurrence per record// TODO: From a human factors point of view, we probably want// to try to preserve the order that we found things in the XML// Sort by most populated first, but leave order unchanged if they're equal",1,1,1,1,-1,-1,-1,-1
"// TODO: We really want to store this on the request so it's available for everyone// request.getParameterMap().put(name, value);",1,1,1,1,-1,-1,-1,-1
"// TODO: We should switch from using the internal compiler class// final static private Var CLOJURE_READ_STRING = RT.var(""clojure.core"", ""read-string"");// final static private Var CLOJURE_EVAL = RT.var(""clojure.core"", ""eval"");",1,1,1,1,-1,-1,-1,-1
"// TODO: We should to switch from using Compiler.load// because it's technically an internal interface// Object code = CLOJURE_READ_STRING.invoke(// ""(fn [value cell cells row rowIndex] "" + s + "")""// );",1,1,1,1,-1,-1,-1,-1
"// TODO: We'd like things to be more strongly typed a la the following, but// it's too involved to change right now// abstract public class Key implements Comparable<Key> {// abstract public int compareTo(Key key);// }",1,1,1,1,-1,-1,-1,-1
// TODO: how can we tell if a cell contains an error?// String formula = cell.getFormula();,1,1,1,1,-1,-1,-1,-1
// TODO: look for other mexican indian words// where 'X' is usually pronounced this way,1,1,1,1,-1,-1,-1,-1
"// TODO: more tests for datetimes with timezones and/or offsets// assertEquals(invoke(""toDate"", ""2013-06-01T13:12:11+06:00""),// CalendarParser.parseAsOffsetDateTime(""2013-06-01 13:12:11""));",1,1,1,1,-1,-1,-1,-1
// We assume first key encountered is the beginning of record key// TODO: make customizable?,1,1,1,1,-1,-1,-1,-1
"// null, true, false 0,1,-2.1,0.23,-0.24,3.14e100// TODO: check data types",1,1,0,1,-1,-1,-1,-1
"// only compare the string ids, not the siteIRIs, to avoid// federation-related issues. We expect that in a given context,// only entities from a given Wikibase can appear.// TODO revisit this when (if?) federation support makes it possible// to mix up entities from different Wikibases in the same data slot",1,1,1,1,-1,-1,-1,-1
"// wrapper of processManager variable to allow unit testing// TODO make the processManager variable private, and force all calls through this method",1,1,1,1,-1,-1,-1,-1
"// } else if (v instanceof EvalError) { // @ToDo fix this with issue #2562// return ""error"";",1,1,1,1,-1,-1,-1,-1
"/*             * TODO `resultSet.getTime(columnIndex)` returns wrong value if JVM's zone had forward offset change during 1970-01-01             * and the time value being retrieved was not present in local time (a 'gap'), e.g. time retrieved is 00:10:00 and JVM zone is America/Hermosillo             * The problem can be averted by using `resultSet.getObject(columnIndex, LocalTime.class)` -- but this is not universally supported by JDBC drivers.             */",1,1,1,1,-1,-1,-1,-1
"/*             * TODO `resultSet.getTimestamp(columnIndex)` returns wrong value if JVM's zone had forward offset change and the local time             * corresponding to timestamp value being retrieved was not present (a 'gap'), this includes regular DST changes (e.g. Europe/Warsaw)             * and one-time policy changes (Asia/Kathmandu's shift by 15 minutes on January 1, 1986, 00:00:00).             * The problem can be averted by using `resultSet.getObject(columnIndex, LocalDateTime.class)` -- but this is not universally supported by JDBC drivers.             */",1,1,1,1,-1,-1,-1,-1
"/*         *   HACK!         *         *   Currently cost model always has to compute the total cost of an operation.         *   For JOIN the total cost consist of 4 parts:         *     - Cost of exchanges that have to be introduced to execute a JOIN         *     - Cost of building a hash table         *     - Cost of probing a hash table         *     - Cost of building an output for matched rows         *         *   When output size for a JOIN cannot be estimated the cost model returns         *   UNKNOWN cost for the join.         *         *   However assuming the cost of JOIN output is always the same, we can still make         *   cost based decisions based on the input cost for different types of JOINs.         *         *   Although the side flipping can be made purely based on stats (smaller side         *   always goes to the right), determining JOIN type is not that simple. As when         *   choosing REPLICATED over REPARTITIONED join the cost of exchanging and building         *   the hash table scales with the number of nodes where the build side is replicated.         *         *   TODO Decision about the distribution should be based on LocalCostEstimate only when PlanCostEstimate cannot be calculated. Otherwise cost comparator cannot take query.max-memory into account.         */",1,1,1,1,-1,-1,-1,-1
"/*         *   HACK!         *         *   Currently cost model always has to compute the total cost of an operation.         *   For SEMI-JOIN the total cost consist of 4 parts:         *     - Cost of exchanges that have to be introduced to execute a JOIN         *     - Cost of building a hash table         *     - Cost of probing a hash table         *     - Cost of building an output for matched rows         *         *   When output size for a SEMI-JOIN cannot be estimated the cost model returns         *   UNKNOWN cost for the join.         *         *   However assuming the cost of SEMI-JOIN output is always the same, we can still make         *   cost based decisions based on the input cost for different types of SEMI-JOINs.         *         *   TODO Decision about the distribution should be based on LocalCostEstimate only when PlanCostEstimate cannot be calculated. Otherwise cost comparator cannot take query.max-memory into account.         */",1,1,1,1,-1,-1,-1,-1
/*         * HACK!         *         * Stats model doesn't multiply the number of rows by the number of tasks for replicated         * exchange to avoid misestimation of the JOIN output.         *         * Thus the cost estimation for the operations that come after a replicated exchange is         * underestimated. And the cost of operations over the replicated copies must be explicitly         * added here.         */,1,1,1,1,-1,-1,-1,-1
"/*     * In theory, recoverable grouped execution should be decided at query section level (i.e. a connected component of stages connected by remote exchanges).     * This is because supporting mixed recoverable execution and non-recoverable execution within a query section adds unnecessary complications but provides little benefit,     * because a single task failure is still likely to fail the non-recoverable stage.     * However, since the concept of ""query section"" is not introduced until execution time as of now, it needs significant hacks to decide at fragmenting time.     * TODO: We should introduce ""query section"" and make recoverability analysis done at query section level.     */",1,1,0,1,-1,-1,-1,-1
/*     * Sentinel unicode comment character (http://www.unicode.org/faq/private_use.html#nonchar_codes).     * It is expected that \uFDD0 sentinel comment character is not the first character in any row of user's CSV S3 object.     * The rows starting with \uFDD0 will be skipped by S3Select and will not be a part of the result set or aggregations.     * To process CSV objects that may contain \uFDD0 as first row character please disable S3SelectPushdown.     * TODO: Remove this proxy logic when S3Select API supports disabling of row level comments.     */,1,1,0,1,-1,-1,-1,-1
"/*     * Since plan matching is done through SymbolAlias, which does not include type information, we cannot directly use     * VariableReferenceExpression::equals to check whether two specification are equivalent once they include VariableReferenceExpression.     * TODO Directly use equals once SymbolAlias is converted to something with type information.     */",1,1,1,1,-1,-1,-1,-1
/*     * TODO: the close() method will shutdown the external process     */,1,1,1,1,-1,-1,-1,-1
/* * TODO Eventually we should only need to inline VariableReferenceExpression to RowExpression. We should remove this once https://github.com/prestodb/presto/issues/12828 is done. */,1,1,1,1,-1,-1,-1,-1
/* TODO TIMESTAMP_WITH_TIMEZONE */,1,1,1,1,-1,-1,-1,-1
/* TODO TIME_WITH_TIMEZONE */,1,1,1,1,-1,-1,-1,-1
"/* TODO:       This class could be extended to handle any expressions like:       A.a * sin(A.b) / log(B.x) < cos(B.z)       by transforming it to:       f(A.a, A.b) < g(B.x, B.z)       Where f(...) and g(...) would be some functions/expressions. That       would allow us to perform binary search on arbitrary complex expressions       by sorting position links according to the result of f(...) function.     */",1,1,1,1,-1,-1,-1,-1
/** * <tt>_key</tt> - Represents the key as a text column. Format is UTF-8 which may be wrong for topics. TODO: make charset configurable. */,1,1,1,1,-1,-1,-1,-1
/** * <tt>_message</tt> - Represents the full topic as a text column. Format is UTF-8 which may be wrong for some topics. TODO: make charset configurable. */,1,1,1,1,-1,-1,-1,-1
/** * Alter the specified function. * TODO: Support transaction */,1,1,1,1,-1,-1,-1,-1
/** * Create or replace the specified function. * TODO: Support transaction */,1,1,1,1,-1,-1,-1,-1
/** * Drop the specified function. * TODO: Support transaction */,1,1,1,1,-1,-1,-1,-1
"/** * Given a list of plan node hashes, returns historical statistics for them. * Some entries in return value may be missing if no corresponding history exists. * This can be called even when hash of a plan node is not present. * * TODO: Using PlanNode as map key can be expensive, we can use Plan node id as a map key. */",1,1,1,1,-1,-1,-1,-1
"/** * List all functions managed by the {@link FunctionNamespaceManager}. * likePattern and escape are from `SHOW FUNCTIONS LIKE [likePattern] escape [escape]`. * Backends supporting like pattern / escape matching can use this to prefilter functions, but Presto will filter again, so it is fine if the backend doesn't * use these parameters. * TODO: Support transaction */",1,1,0,1,-1,-1,-1,-1
"/** * NativeExecutionOperator is responsible for launching the external native process and managing the communication * between Java process and native process (by using the {@Link NativeExecutionTask}). The NativeExecutionOperator will send  necessary meta information * (e.g, plan fragment, session properties etc) will be sent to native process and collect the execution results (data, metrics etc) back and propagate out as * the operator output through the operator's getOutput method. * <p> * TODO: The lifecycle of NativeExecutionOperator is (will be added in next PR): *  1. Launch the native engine external process when initializing the operator. *  2. Serialize and pass the planFragment, tableWriteInfo and taskSource to the external process through {@link NativeExecutionTask} APIs. *  3. Call {@link NativeExecutionTask}'s pollResult() to retrieve {@link SerializedPage} back from external process. *  4. Deserialize {@link SerializedPage} to {@link Page} and return it back to driver from the getOutput method. *  5. The close() will be called by the driver when {@link NativeExecutionTask} completes and pollResult() returns an empty result. *  6. Shut down the external process upon calling of close() method */",1,1,0,1,-1,-1,-1,-1
/** * Reference implementation: https://tools.ietf.org/html/draft-eastlake-fnv-17#section-6 * TODO: Move this utility class to airlift:slice */,1,1,1,1,-1,-1,-1,-1
"/** * See Hacker's Delight, Section 9.3 */",1,1,0,1,-1,-1,-1,-1
/** * TODO: Decouple node and partition management in presto-main and remove this hack */,1,1,1,1,-1,-1,-1,-1
"/** * TODO: Remove this function? pretty similar to createForStruct(StandardStructObjectInspector, RowType) */",1,1,1,1,-1,-1,-1,-1
/** * TODO: The getOutput method will call NativeExecutionTask APIs to: *  1. Submit the plan to the external process *  2. Call pollResult method to get latest buffered result. *  3. Call getTaskInfo method to get the TaskInfo and propagate it *  4. Deserialize the polled {@link SerializedPage} to {@link Page} and return it back */,1,1,1,1,-1,-1,-1,-1
/** * TODO: implement full thrift support for v1/task */,1,1,1,1,-1,-1,-1,-1
/** * TODO: this method is required since not all RPC calls are supported by thrift. *     It should be merged into {@code createTaskLocation} once full thrift support is in-place for v1/task */,1,1,1,1,-1,-1,-1,-1
/** * TODO: this needs to be merged with RowType at some point (when the type system is unified) */,1,1,1,1,-1,-1,-1,-1
/** * TODO: this should be merged into getTaskStatus once full thrift support is in-place for v1/task */,1,1,1,1,-1,-1,-1,-1
"/** * TODO: use RowBlock in the future * * @param block of the form [key1, count1, key2, count2, ...] */",1,1,1,1,-1,-1,-1,-1
"/** * This method exists only because it is currently impossible to create a function namespace from the query engine, * and therefore the query runner needs to be aware of the H2 handle in order to create function namespaces when * required by the tests. * <p> * TODO: Remove when there is a generic way of creating function namespaces as if creating schemas. */",1,1,1,1,-1,-1,-1,-1
/** * This page builder creates pages with dictionary blocks: * normal dictionary blocks for the probe side and the original blocks for the build side. * <p> * TODO use dictionary blocks (probably extended kind) to avoid data copying for build side */,1,1,1,1,-1,-1,-1,-1
/** * Todo - configurable time zones and locales. */,1,1,1,1,-1,-1,-1,-1
/** * Use it in optimizer {@link com.facebook.presto.sql.planner.iterative.Rule} only if you truly do not have a better option * <p> * TODO: replace it with a support for plan (physical) properties in rules pattern matching */,1,1,1,1,-1,-1,-1,-1
/** * Visitor to count number of tables scanned in the current fragment * (fragments separated by ExchangeNodes). * <p> * TODO: remove this class after we make colocated_join always true */,1,1,1,1,-1,-1,-1,-1
"// At that point, we'll be able to fully deprecate Type.equalTo (and friends) and remove this hack.",1,1,1,1,-1,-1,-1,-1
// FIXME - nulls shouldn't be restored,1,1,0,1,-1,-1,-1,-1
"// FIXME make sure there's a proper toString,",1,1,0,1,-1,-1,-1,-1
// FIXME should I reuse or not?,1,1,1,1,-1,-1,-1,-1
"// FIXME, weights to average. left and right should be equal in most cases anyway",1,1,0,1,-1,-1,-1,-1
// FileSystemFactory is used to hack around the abuse of Configuration as a,1,1,1,1,-1,-1,-1,-1
// HACK,1,1,1,1,-1,-1,-1,-1
// HACK WARNING!,1,1,1,1,-1,-1,-1,-1
// HACK!,1,1,1,1,-1,-1,-1,-1
"// HACK: bigint grouped aggregation has special operators that do not use precomputed hash, so we can skip hash generation",1,1,1,1,-1,-1,-1,-1
"// HACK: this binding is needed by SystemConnectorModule, but will only be used on the coordinator",1,1,1,1,-1,-1,-1,-1
// HACK: we need to serialize VARBINARY in a format that can be embedded in an expression to be,1,1,1,1,-1,-1,-1,-1
"// Hack to allow Presto Admin to access the ""system"" catalog for retrieving server status.",1,1,1,1,-1,-1,-1,-1
// Hack to just allow map constructor,1,1,1,1,-1,-1,-1,-1
// Hack to work around the metastore not being configured for S3 or other FS.,1,1,1,1,-1,-1,-1,-1
// Hack: this wrapping is required to circumvent https://github.com/prestodb/presto/issues/16206,1,1,1,1,-1,-1,-1,-1
"// MAJOR HACK: if searchFunction is of shape `f(probe) > build_symbol` it is not fit for binary search below,",1,1,1,1,-1,-1,-1,-1
// Only zone-offset timezones are supported (TODO remove political timezones support for TIME WITH TIME ZONE),1,1,1,1,-1,-1,-1,-1
// Skip structural types. TODO: Evaluate Apache Iceberg's support for predicate on structural types,1,1,1,1,-1,-1,-1,-1
// So we have to hack here in order to get valid representation,1,1,1,1,-1,-1,-1,-1
// TODO #7122,1,1,0,1,-1,-1,-1,-1
"// TODO #7122 assertQuery(chicago, ""SELECT TIME '3:04:05'"");",1,1,1,1,-1,-1,-1,-1
"// TODO #7122 assertQuery(chicago, ""SELECT TIMESTAMP '1960-01-22 3:04:05.123'"");",1,1,1,1,-1,-1,-1,-1
"// TODO #7122 assertQuery(kathmandu, ""SELECT TIME '3:04:05'"");",1,1,1,1,-1,-1,-1,-1
"// TODO #7122 assertQuery(kathmandu, ""SELECT TIMESTAMP '1960-01-22 3:04:05.123'"");",1,1,1,1,-1,-1,-1,-1
// TODO #7122 should be 1970-01-01 00:00:00,1,1,1,1,-1,-1,-1,-1
// TODO #7122 should match DATE_TIME_LOCAL,1,1,1,1,-1,-1,-1,-1
// TODO #7122 support non-legacy TIMESTAMP,1,1,1,1,-1,-1,-1,-1
// TODO #7122: line 1:8: '00:39:05' is not a valid time literal,1,1,1,1,-1,-1,-1,-1
// TODO #7122: line 1:8: '1970-01-01 00:14:15.123' is not a valid timestamp literal; the expected values will pro,1,1,1,1,-1,-1,-1,-1
// TODO #7784,1,1,0,1,-1,-1,-1,-1
// TODO (Issue #13231) add back printing unresolved plan once we have no need to translate OriginalExpression to RowExpression,1,1,1,1,-1,-1,-1,-1
// TODO (https://github.com/prestosql/presto/issues/1218) requires https://issues.apache.org/jira/browse/HIVE-21002,1,1,1,1,-1,-1,-1,-1
// TODO (https://github.com/prestosql/presto/issues/1218) requires https://issues.apache.org/jira/browse/HIVE-22167,1,1,1,1,-1,-1,-1,-1
// TODO - Alluxio should return the actual table type,1,1,1,1,-1,-1,-1,-1
// TODO - There is no reason why the row can't have a formatHint and it could be used,1,1,1,1,-1,-1,-1,-1
// TODO - move this to a RowExpressionUtil class,1,1,1,1,-1,-1,-1,-1
// TODO ... this one is failing,1,1,1,1,-1,-1,-1,-1
"// TODO .estimate(distinctValuesCount(""sub""), defaultTolerance())",1,1,1,1,-1,-1,-1,-1
// TODO .setAverageRowSize(4 + 1. / 3),1,1,0,1,-1,-1,-1,-1
// TODO : Add e2e tests for this class,1,1,1,1,-1,-1,-1,-1
// TODO : Eventually move this component to its own dedicated directory,1,1,1,1,-1,-1,-1,-1
// TODO : Find a way to add response size from thrift,1,1,1,1,-1,-1,-1,-1
// TODO : Use thrift to serialize metadata objects instead of json serde on catalog server in the future,1,1,1,1,-1,-1,-1,-1
// TODO Add support for metadata delete for any filter on partition columns.,1,1,1,1,-1,-1,-1,-1
// TODO Add tagging support for revocable memory reservations if needed,1,1,1,1,-1,-1,-1,-1
// TODO Adjust statistics to take into account required subfields,1,1,1,1,-1,-1,-1,-1
// TODO Avoid writing empty row group,1,1,1,1,-1,-1,-1,-1
"// TODO Cassandra connector supports CTAS and inserts, but the test would fail",1,1,1,1,-1,-1,-1,-1
"// TODO Cassandra connector supports inserts, but the test would fail",1,1,1,1,-1,-1,-1,-1
"// TODO Collect MIN,MAX once it is used by the optimizer",1,1,1,1,-1,-1,-1,-1
// TODO Consider pushing is-null and is-empty checks into a filter below the join,1,1,1,1,-1,-1,-1,-1
// TODO Construct predicate like AddExchanges's LayoutConstraintEvaluator,1,1,1,1,-1,-1,-1,-1
// TODO Do not throw if outputRequired == false,1,1,1,1,-1,-1,-1,-1
// TODO Fix arbitrary flush every 100k rows,1,1,1,1,-1,-1,-1,-1
// TODO Following types are not supported now. We need to change null into the value after fixing it,1,1,1,1,-1,-1,-1,-1
// TODO If we detect a whole WHEN statement as CSE we should probably only keep one,1,1,1,1,-1,-1,-1,-1
// TODO Implement me,1,1,1,1,-1,-1,-1,-1
// TODO Implement size reporting,1,1,1,1,-1,-1,-1,-1
// TODO Implement subfield pruning,1,1,1,1,-1,-1,-1,-1
"// TODO In case of all nulls, the stream type will be LongDirect",1,1,1,1,-1,-1,-1,-1
// TODO Look into any use of the metadata for writing out the rows,1,1,1,1,-1,-1,-1,-1
"// TODO MySQL datetime is not correctly read (see comment in StandardReadMappings.timestampReadMapping), but testing this is hard because of #7122",1,1,1,1,-1,-1,-1,-1
"// TODO MySQL timestamp is not correctly read (see comment in StandardReadMappings.timestampReadMapping), but testing this is hard because of #7122",1,1,1,1,-1,-1,-1,-1
// TODO Not sure whether file_offset is used,1,1,1,1,-1,-1,-1,-1
// TODO Support LZO and LZ4 compression,1,1,1,1,-1,-1,-1,-1
// TODO The type should be from sourceVariable.getType,1,1,1,1,-1,-1,-1,-1
// TODO There should be a combined interface for this,1,1,1,1,-1,-1,-1,-1
// TODO These tests hang (or take way too long).,1,1,1,1,-1,-1,-1,-1
// TODO This is a hack. Engine should provide an API for connectors to overwrite functions. Connector should not hard code the builtin function namespace.,1,1,1,1,-1,-1,-1,-1
// TODO This should be a config option as it may be different for different log files,1,1,1,1,-1,-1,-1,-1
// TODO This should take Signature!,1,1,1,1,-1,-1,-1,-1
// TODO This use case can be supported,1,1,1,1,-1,-1,-1,-1
// TODO Types.TIMESTAMP_WITH_TIMEZONE,1,1,1,1,-1,-1,-1,-1
// TODO Types.TIME_WITH_TIMEZONE,1,1,1,1,-1,-1,-1,-1
// TODO Use residual. Right now there is no way to propagate residual to presto but at least we can,1,1,1,1,-1,-1,-1,-1
// TODO We can eliminate (a || b) && a if a is deterministic even b is not.,1,1,1,1,-1,-1,-1,-1
"// TODO When com.facebook.presto.sql.planner.optimizations.EliminateCrossJoins is removed, remove 'joinGraphs'",1,1,1,1,-1,-1,-1,-1
"// TODO When com.facebook.presto.sql.planner.optimizations.EliminateCrossJoins is removed, remove 'shallow' flag",1,1,1,1,-1,-1,-1,-1
// TODO accept long,1,1,1,1,-1,-1,-1,-1
// TODO add a test with long decimal,1,1,1,1,-1,-1,-1,-1
// TODO add config,1,1,1,1,-1,-1,-1,-1
// TODO add dedicated test cases and remove `extends AbstractTestAggregation`,1,1,1,1,-1,-1,-1,-1
"// TODO add more negative tests, i.e. operators that do not propagate keys like",1,1,1,1,-1,-1,-1,-1
"// TODO add some outer join tests, including negative tests where keys should not propagate",1,1,1,1,-1,-1,-1,-1
// TODO add testing to expressions that need desugaring like 'try',1,1,1,1,-1,-1,-1,-1
// TODO also check for database name equality,1,1,1,1,-1,-1,-1,-1
"// TODO avoid stat (but not cost) recalculation for all considered (distribution,flip) pairs, since resulting relation is the same in all case",1,1,1,1,-1,-1,-1,-1
// TODO change expected return type to createVarcharType(6) when function resolving is fixed,1,1,1,1,-1,-1,-1,-1
// TODO change io.prestosql.plugin.jdbc.JdbcClient.getSchemaNames to return a List,1,1,1,1,-1,-1,-1,-1
// TODO check if dataSize estimation method is correct,1,1,1,1,-1,-1,-1,-1
// TODO check indeterminate,1,1,1,1,-1,-1,-1,-1
// TODO coercion of non-canonical values should be supported,1,1,1,1,-1,-1,-1,-1
// TODO compressedDataSize > bytes.length?,1,1,1,1,-1,-1,-1,-1
// TODO configurable,1,1,1,1,-1,-1,-1,-1
// TODO consider allowing nulls,1,1,1,1,-1,-1,-1,-1
"// TODO consider cost of aggregation itself, not only exchanges, based on aggregation's properties",1,1,1,1,-1,-1,-1,-1
"// TODO convert to a pattern that allows for a sequence of ProjectNode, instead",1,1,1,1,-1,-1,-1,-1
// TODO convert to immutableTable + TableDefinition once immutableTable supports partitioned tables,1,1,1,1,-1,-1,-1,-1
// TODO design new variadic functions binding mechanism that will allow to produce VARCHAR(x) where x < MAX_LENGTH.,1,1,1,1,-1,-1,-1,-1
// TODO do something with the hyperparameters,1,1,1,1,-1,-1,-1,-1
// TODO don't use analysis as a side-channel. Use outputExpressions to look up the type,1,1,1,1,-1,-1,-1,-1
// TODO enable once #13133 is merged,1,1,1,1,-1,-1,-1,-1
// TODO enabled when DECIMAL is default for literal:,1,1,1,1,-1,-1,-1,-1
"// TODO enabled when DECIMAL is default for literal: assertOptimizedEquals(""cast(12345678901234567890.123 as VARCHAR)"", ""'12345678901234567890.123'"");",1,1,1,1,-1,-1,-1,-1
"// TODO fields in streamDescriptor may be out of order (due to schema evolution, e.g. remove field?)",1,1,1,1,-1,-1,-1,-1
// TODO figure out a better way to compute the size of data that will be transferred over the network,1,1,1,1,-1,-1,-1,-1
// TODO find a more generic way to do this,1,1,1,1,-1,-1,-1,-1
// TODO getSpilledPages should not need flush last buffer to disk,1,1,1,1,-1,-1,-1,-1
// TODO https://github.com/prestodb/presto/issues/12892,1,1,0,1,-1,-1,-1,-1
// TODO if all arguments are input reference or constant (maybe variable reference?) we could skip a projection,1,1,1,1,-1,-1,-1,-1
"// TODO if jdbcExpression is not present, walk through translated subtree to find out which parts can be pushed down",1,1,1,1,-1,-1,-1,-1
"// TODO if the non-deterministic operation only appears in the only sub-predicates that has size >1, we can still expand it.",1,1,0,1,-1,-1,-1,-1
// TODO implement column level access control,1,1,1,1,-1,-1,-1,-1
// TODO implement cost estimates for all plan nodes,1,1,1,1,-1,-1,-1,-1
// TODO implement logic for other node types and return LocalCostEstimate.unknown() here (or throw),1,1,1,1,-1,-1,-1,-1
"// TODO implement simple aggregations like: min, max, count, sum",1,1,1,1,-1,-1,-1,-1
// TODO implement support for `decimals < 0`,1,1,1,1,-1,-1,-1,-1
// TODO implementation does not take into account overlapping of ranges for source and filtering source.,1,1,1,1,-1,-1,-1,-1
// TODO improve estimation,1,1,1,1,-1,-1,-1,-1
// TODO inline back this method,1,1,1,1,-1,-1,-1,-1
// TODO instead of cursor use pageSource method.,1,1,1,1,-1,-1,-1,-1
"// TODO introduce explicit state (enum), like in HBO",1,1,1,1,-1,-1,-1,-1
// TODO invoke the interpreter unconditionally when the interpreter becomes cheap enough.,1,1,1,1,-1,-1,-1,-1
// TODO is there a better way to get the node column?,1,1,1,1,-1,-1,-1,-1
// TODO make it Optional,1,1,1,1,-1,-1,-1,-1
// TODO merge this into MaterializedRow,1,1,1,1,-1,-1,-1,-1
// TODO merge this with MaterializedResult,1,1,1,1,-1,-1,-1,-1
// TODO merge with TestTpchDistributedStats.testEnforceSingleRow once that class tests new calculator,1,1,1,1,-1,-1,-1,-1
// TODO merge with TestTpchDistributedStats.testLimit once that class tests new calculator,1,1,1,1,-1,-1,-1,-1
// TODO migrate this to RowExpressionMatcher,1,1,1,1,-1,-1,-1,-1
"// TODO more join, complex query tests",1,1,1,1,-1,-1,-1,-1
// TODO move spill tracking to the new memory tracking framework,1,1,1,1,-1,-1,-1,-1
// TODO move this to a common place and reuse in all resource,1,1,1,1,-1,-1,-1,-1
// TODO normalize distinctValuesCount for an empty range (or validate it is already normalized),1,1,1,1,-1,-1,-1,-1
// TODO once the reserved pool is removed we can remove this method. We can also update,1,1,1,1,-1,-1,-1,-1
// TODO optimize when idea is generally approved,1,1,1,1,-1,-1,-1,-1
// TODO perhaps put this in AssignmentsUtils or ProjectUtils,1,1,1,1,-1,-1,-1,-1
// TODO probably shouldn't copy to reduce memory and for memory accounting's sake,1,1,1,1,-1,-1,-1,-1
// TODO prometheus warnings (success|error|warning) could be handled separately,1,1,1,1,-1,-1,-1,-1
// TODO remove REFERENCE_TIMESTAMP_UTC when removing support for political time zones in TIME WIT TIME ZONE,1,1,1,1,-1,-1,-1,-1
// TODO remove cast once assignment can be RowExpression,1,1,1,1,-1,-1,-1,-1
// TODO remove config option once efficacy is proven,1,1,1,1,-1,-1,-1,-1
// TODO remove handling of Expression once all optimization rule uses RowExpression,1,1,1,1,-1,-1,-1,-1
// TODO remove once all UnaliasSymbolReference are above translateExpressions,1,1,1,1,-1,-1,-1,-1
// TODO remove once all pruneInputs rules are below translateExpressions.,1,1,1,1,-1,-1,-1,-1
// TODO remove table layout once it is fully deprecated.,1,1,1,1,-1,-1,-1,-1
"// TODO remove the second part of the if statement, when these operators are fixed",1,1,1,1,-1,-1,-1,-1
// TODO remove this when double statistics are changed to correctly deal with NaNs,1,1,1,1,-1,-1,-1,-1
// TODO rename to getAggregationSql,1,1,1,1,-1,-1,-1,-1
// TODO replace this with a ModelFactory interface,1,1,1,1,-1,-1,-1,-1
// TODO replace this with a more efficient data structure,1,1,1,1,-1,-1,-1,-1
// TODO results from array_agg() are not deterministic so we just compare cardinality for the time being,1,1,1,1,-1,-1,-1,-1
// TODO results from map_union() are not deterministic so we just compare cardinality for the time being,1,1,1,1,-1,-1,-1,-1
"// TODO return node value without ""DECIMAL '..'"" when FeaturesConfig#parseDecimalLiteralsAsDouble switch is removed",1,1,1,1,-1,-1,-1,-1
// TODO reuse com.facebook.presto.sql.planner.iterative.rule.SimplifyExpressions.rewrite,1,1,1,1,-1,-1,-1,-1
"// TODO reuse row object and use FieldSetters, like we do at the top level",1,1,1,1,-1,-1,-1,-1
// TODO revocable memory reservations can also leak and may need to be detected in the future,1,1,1,1,-1,-1,-1,-1
// TODO should it be supported really?,1,1,1,1,-1,-1,-1,-1
"// TODO since we care only about ""some count > 0"", we could have specialized node instead of leftOuterJoin that does the job without materializing join results",1,1,1,1,-1,-1,-1,-1
"// TODO some test cases from overridden method succeed to create table, but with wrong number or rows.",1,1,1,1,-1,-1,-1,-1
// TODO specialized functions variants support is missing here,1,1,1,1,-1,-1,-1,-1
// TODO split into multiple rules (https://github.com/prestodb/presto/issues/7292),1,1,1,1,-1,-1,-1,-1
"// TODO streamDescriptor may be missing some fields (due to schema evolution, e.g. add field?)",1,1,1,1,-1,-1,-1,-1
// TODO support other comparison operators,1,1,1,1,-1,-1,-1,-1
"// TODO the client sees the bytearray's tostring output instead of seeing actual bytes, needs to be fixed.",1,1,1,1,-1,-1,-1,-1
"// TODO the count of coordinator drops from 2 sometimes, we need to investigate the cause and remove this",1,1,1,1,-1,-1,-1,-1
// TODO the expected values here are non-sensical due to https://github.com/prestodb/presto/issues/7122,1,1,1,1,-1,-1,-1,-1
"// TODO the function map should be updated, so that this cast can be removed",1,1,1,1,-1,-1,-1,-1
"// TODO the pattern of this function is similar with ClusterStatsResource and QueryResource, we can move it to a common place and re-use.",1,1,1,1,-1,-1,-1,-1
// TODO this could be optimized to VALUES with values from partitions,1,1,1,1,-1,-1,-1,-1
"// TODO this is wrong, we're going to construct malformed Slice representation if source > charLength",1,1,1,1,-1,-1,-1,-1
"// TODO this needs a custom Option type to work , or NPEs will happen.",1,1,1,1,-1,-1,-1,-1
"// TODO this should fail, as there no java.sql.Time representation for TIME '00:39:07' in America/Bahia_Banderas",1,1,1,1,-1,-1,-1,-1
"// TODO this should fail, as there no java.sql.Timestamp representation for TIMESTAMP '1970-01-01 00:14:15.227ó' in America/Bahia_Banderas",1,1,1,1,-1,-1,-1,-1
"// TODO this should fail, or represent TIME '01:39:07'",1,1,1,1,-1,-1,-1,-1
"// TODO this should fail, or represent TIME '09:39:07'",1,1,1,1,-1,-1,-1,-1
"// TODO this should fail, or represent TIMESTAMP '1970-01-01 09:14:15.227'",1,1,1,1,-1,-1,-1,-1
"// TODO this should fail, or represent TIMESTAMP '2018-02-13 13:14:15.227'",1,1,1,1,-1,-1,-1,-1
// TODO this should represent TIME '00:39:07 +01:00',1,1,1,1,-1,-1,-1,-1
// TODO this should represent TIME '01:39:07 +01:00',1,1,1,1,-1,-1,-1,-1
// TODO this should represent TIME '09:39:07 +01:00',1,1,1,1,-1,-1,-1,-1
// TODO this should represent TIMESTAMP '1970-01-01 00:14:15.227 Europe/Warsaw',1,1,1,1,-1,-1,-1,-1
// TODO this should represent TIMESTAMP '1970-01-01 09:14:15.227 Europe/Warsaw',1,1,1,1,-1,-1,-1,-1
// TODO this should represent TIMESTAMP '2018-02-13 13:14:15.227 Europe/Warsaw',1,1,1,1,-1,-1,-1,-1
// TODO this will be checking against VariableExpression once getOutput returns VariableReferenceExpression,1,1,1,1,-1,-1,-1,-1
"// TODO timestamp is not correctly read (see comment in StandardReadMappings.timestampReadMapping), but testing this is hard because of #7122",1,1,1,1,-1,-1,-1,-1
"// TODO try pageIndex.compact(); before spilling, as in com.facebook.presto.operator.HashBuilderOperator.startMemoryRevoke",1,1,1,1,-1,-1,-1,-1
// TODO tunnel through CAST functions?,1,1,1,1,-1,-1,-1,-1
// TODO unify field and method names with SymbolStatsEstimate,1,1,1,1,-1,-1,-1,-1
// TODO update to take advantage of precomputed hash,1,1,1,1,-1,-1,-1,-1
"// TODO use correlated predicate, it requires support for correlated subqueries in plan matchers",1,1,1,1,-1,-1,-1,-1
// TODO use result.getOutputVariable() after symbol to variable refactoring is done. This is a temporary hack since we know the value should be exchangeOutputLayout.,1,1,1,1,-1,-1,-1,-1
// TODO valueBlock.getRegion is really-really-really inefficient.,1,1,1,1,-1,-1,-1,-1
// TODO verify if this is the correct function displayName,1,1,1,1,-1,-1,-1,-1
// TODO we should optimize the filter expression,1,1,1,1,-1,-1,-1,-1
// TODO we should systematically test Block::getRetainedSizeInBytes(),1,1,1,1,-1,-1,-1,-1
"// TODO when one left.getMaxMemory() and right.getMaxMemory() exceeds query memory limit * configurable safety margin, choose the plan with lower memory usage",1,1,1,1,-1,-1,-1,-1
"// TODO when support for political time zones is removed, change the pattern to ""HH:mm:ss.SSS XXX"" and reuse in TestingPrestoClient",1,1,1,1,-1,-1,-1,-1
// TODO where are the constraints use cases?!,1,1,1,1,-1,-1,-1,-1
// TODO(leiqing): Add a test where the first submission fails but resubmission succeeds.,1,1,1,1,-1,-1,-1,-1
// TODO(pranjalssh): Support plan statistics tracking for other query managers,1,1,1,1,-1,-1,-1,-1
// TODO(spershin): Need to add use cases with non-numeric types when implemented.,1,1,1,1,-1,-1,-1,-1
"// TODO, should be 2",1,1,1,1,-1,-1,-1,-1
// TODO: ARBITRARY_DISTRIBUTION is something very weird.,1,1,1,1,-1,-1,-1,-1
// TODO: Add HAVING validation to the validator https://github.com/prestodb/presto/issues/16406,1,1,1,1,-1,-1,-1,-1
// TODO: Add INT96 and FIXED_LEN_BYTE_ARRAY later,1,1,1,1,-1,-1,-1,-1
// TODO: Add LIFESPAN_ADDED into SourcePartitionedScheduler#State and remove this boolean,1,1,1,1,-1,-1,-1,-1
// TODO: Add column size accounting to ORC column writers,1,1,1,1,-1,-1,-1,-1
"// TODO: Add count to NonAssociativeFunctionHandler, add more functions",1,1,1,1,-1,-1,-1,-1
// TODO: Add more cases https://github.com/prestodb/presto/issues/16032,1,1,1,1,-1,-1,-1,-1
// TODO: Add multiple aggregation states support to aggregation framework to avoid,1,1,1,1,-1,-1,-1,-1
// TODO: Add support for more manifest versions,1,1,1,1,-1,-1,-1,-1
// TODO: Add support for translating a property on a single column to multiple columns,1,1,1,1,-1,-1,-1,-1
// TODO: Add test case for a sliced MapBlock,1,1,1,1,-1,-1,-1,-1
// TODO: Add tests for timestamp as value type,1,1,1,1,-1,-1,-1,-1
// TODO: Add views on the server side,1,1,1,1,-1,-1,-1,-1
"// TODO: After initial scheduling, tasks would only be available after they finished at least one bucket.",1,1,1,1,-1,-1,-1,-1
// TODO: Allow updating statistics for 2 tables in the same transaction,1,1,1,1,-1,-1,-1,-1
"// TODO: Alternatively, we can store com.facebook.presto.spi.type.Type",1,1,1,1,-1,-1,-1,-1
// TODO: Are we sure this is thread safe?,1,1,1,1,-1,-1,-1,-1
// TODO: Avoid copy value block associated with the same key by using strategy similar to multimap_from_entries,1,1,1,1,-1,-1,-1,-1
// TODO: Cache user defined types at query level as well.,1,1,1,1,-1,-1,-1,-1
// TODO: Check body contains no SQL invoked functions,1,1,1,1,-1,-1,-1,-1
// TODO: Clean up this gatekeeper config and related code/session property once the roll out is done.,1,1,1,1,-1,-1,-1,-1
"// TODO: Collect file count, on-disk size and in-memory size during ANALYZE",1,1,1,1,-1,-1,-1,-1
// TODO: Collect predicates in outer queries and apply the union to this criteria. i.e. in,1,1,1,1,-1,-1,-1,-1
// TODO: Configure,1,1,1,1,-1,-1,-1,-1
// TODO: Consider adding this in sourceInfo,1,1,1,1,-1,-1,-1,-1
// TODO: Consider whether cpu limit math should be performed on softConcurrency or hardConcurrency,1,1,1,1,-1,-1,-1,-1
"// TODO: DEFAULT strategy has a very different canonicalizaiton implementation, refactor it into a separate class.",1,1,1,1,-1,-1,-1,-1
// TODO: Decide what to do with bucketFilter when canonicalizing,1,1,1,1,-1,-1,-1,-1
// TODO: Decouple CacheKey by encoding PlanNode and SplitIdentifier separately so we don't have to keep too many objects in memory,1,1,1,1,-1,-1,-1,-1
// TODO: Decouple and remove: required by ConnectorManager,1,1,1,1,-1,-1,-1,-1
"// TODO: Decouple and remove: required by LocalExecutionPlanner, PlanFragmenter",1,1,1,1,-1,-1,-1,-1
// TODO: Decouple and remove: required by PluginManager,1,1,1,1,-1,-1,-1,-1
"// TODO: Decouple and remove: required by SessionPropertyDefaults, PluginManager, InternalResourceGroupManager, ConnectorManager",1,1,1,1,-1,-1,-1,-1
// TODO: Decouple node specific system tables,0,1,1,1,-1,-1,-1,-1
// TODO: Deprecate compatible table partitioning,1,1,1,1,-1,-1,-1,-1
// TODO: Enable NullifyingIterator once migrated to one task per JVM model,1,1,1,1,-1,-1,-1,-1
// TODO: Enable this check once distributed UNION can handle both partitioned and single node sources at the same time,1,1,1,1,-1,-1,-1,-1
// TODO: Extend metastore cache scope to the entire transaction,1,1,1,1,-1,-1,-1,-1
// TODO: Figure out a better way of synchronization,1,1,1,1,-1,-1,-1,-1
"// TODO: Fix pagesHashStrategy to allow specifying channels for comparison, it currently requires us to rearrange the right side blocks in consecutive channel order",1,1,1,1,-1,-1,-1,-1
// TODO: For future cases we may want to start tracing from client. Then continuation of tracing,1,1,1,1,-1,-1,-1,-1
// TODO: Hack to make System connector work,1,1,1,1,-1,-1,-1,-1
// TODO: Hack to make TPCH connector work,1,1,1,1,-1,-1,-1,-1
// TODO: Implement EncryptionInformation in IcebergSplit instead of Optional.empty(),1,1,1,1,-1,-1,-1,-1
// TODO: Implement chunking if the result set is ginormous,1,1,1,1,-1,-1,-1,-1
// TODO: Implement column level access control,1,1,1,1,-1,-1,-1,-1
// TODO: Implement column level permissions,1,1,1,1,-1,-1,-1,-1
// TODO: Implement correct size,1,1,1,1,-1,-1,-1,-1
// TODO: Implement method that utilizes external SAT solver libraries. https://github.com/prestodb/presto/issues/16536,1,1,1,1,-1,-1,-1,-1
// TODO: Implement ways to handle non-optimizable query without throw/catch. https://github.com/prestodb/presto/issues/16541,1,1,1,1,-1,-1,-1,-1
"// TODO: Instead of having BigDecimal as an intermediate step,",1,1,1,1,-1,-1,-1,-1
// TODO: Investigate if we can use FixedBucketNodeMap and a node to taskId map to replace NodePartitionMap,1,1,1,1,-1,-1,-1,-1
"// TODO: It doesn't have partitioning function, and it is never set as a fragment partitioning.",1,1,1,1,-1,-1,-1,-1
// TODO: It is a known deficiency that some empty directory does not get cleaned up in S3.,1,1,1,1,-1,-1,-1,-1
"// TODO: It would be better if we just tracked QueryContexts, but their lifecycle is managed by a weak reference, so we can't do that",1,1,1,1,-1,-1,-1,-1
// TODO: Local temp storage should be configurable,1,1,1,1,-1,-1,-1,-1
// TODO: Make cache state persistent on disk so we do not need to wipe out cache every time we reboot a server.,1,1,1,1,-1,-1,-1,-1
// TODO: Make this configurable,1,1,1,1,-1,-1,-1,-1
// TODO: Move out this class. Ideally this class should not be in presto-common module.,1,1,1,1,-1,-1,-1,-1
// TODO: NOT YET SUPPORTED AS A PARTITION KEY,1,1,1,1,-1,-1,-1,-1
// TODO: Native execution related session properties that are temporarily put here. They will be relocated in the future.,1,1,1,1,-1,-1,-1,-1
"// TODO: Once CAST function supports cachedInstanceFactory or directly write to BlockBuilder,",1,1,1,1,-1,-1,-1,-1
"// TODO: Once the arguments in CallExpression are pure RowExpressions, move the method to VariablesExtractor",1,1,1,1,-1,-1,-1,-1
"// TODO: Once the final aggregation function call representation is fixed,",1,1,1,1,-1,-1,-1,-1
"// TODO: Once we've migrated handling all the plan node types, replace uses of PruneUnreferencedOutputs with an IterativeOptimizer containing these rules.",1,1,1,1,-1,-1,-1,-1
// TODO: Originally the dictionary row group sizes were not included in memory accounting due,1,1,1,1,-1,-1,-1,-1
// TODO: PRECISION LOST. IMPLEMENT IT AS STRING,1,1,1,1,-1,-1,-1,-1
"// TODO: Properly support utilized column check. Correct output should be just ""b.x""",1,1,1,1,-1,-1,-1,-1
"// TODO: Properly support utilized column check. Currently, we prune whole columns, if they are not utilized.",1,1,1,1,-1,-1,-1,-1
// TODO: Provide a more encapsulated way for TransactionManager to register FunctionNamespaceManager,1,1,1,1,-1,-1,-1,-1
// TODO: Refactor code to inject metastore headers using AccessControlContext instead of empty(),1,1,1,1,-1,-1,-1,-1
// TODO: Refactor query optimization code https://github.com/prestodb/presto/issues/16759,1,1,1,1,-1,-1,-1,-1
// TODO: Remove once minimum Java version is increased 11.0.10,1,1,1,1,-1,-1,-1,-1
// TODO: Remove once minimum Java version is increased to 8u261 and 11.0.8,1,1,1,1,-1,-1,-1,-1
// TODO: Remove query_max_stage_count session property and use queryManagerConfig.getMaxStageCount() here,1,1,1,1,-1,-1,-1,-1
// TODO: Remove this conversion once we move to next iceberg version,1,1,1,1,-1,-1,-1,-1
// TODO: Remove this extra get call once Presto no longer supports JDK-8,1,1,1,1,-1,-1,-1,-1
// TODO: Remove this once URI is replaced,1,1,1,1,-1,-1,-1,-1
// TODO: Remove this once we can display the plan on Spark UI.,1,1,1,1,-1,-1,-1,-1
// TODO: Remove when we fix intermediate types on aggregations.,1,1,1,1,-1,-1,-1,-1
// TODO: Replace this logic with an analyzer which specifies whether it evaluates to null,1,1,1,1,-1,-1,-1,-1
// TODO: Replace this logic with rule-based validation framework.,1,1,1,1,-1,-1,-1,-1
// TODO: Revisit and make this class more robust,1,1,1,1,-1,-1,-1,-1
// TODO: Select the most compatible and efficient materialized view for query rewrite optimization https://github.com/prestodb/presto/issues/16431,1,1,1,1,-1,-1,-1,-1
// TODO: Should we use NUMERIC_VALUE_OUT_OF_RANGE instead?,1,1,1,1,-1,-1,-1,-1
// TODO: Simplify the commit logic of the transaction manager.,1,1,1,1,-1,-1,-1,-1
// TODO: Specialize for bigint using LongOpenHashSet,1,1,1,1,-1,-1,-1,-1
// TODO: Staging dir and storage dir are the same in this StorageService implementation,1,1,1,1,-1,-1,-1,-1
// TODO: Support DynamicConfigurationProvider which consumes context and URI,1,1,1,1,-1,-1,-1,-1
// TODO: Support canonicalization for more plan node types,1,1,1,1,-1,-1,-1,-1
// TODO: Support coercion of return type of lambda,1,1,1,1,-1,-1,-1,-1
// TODO: Support more clickhouse error code,1,1,1,1,-1,-1,-1,-1
// TODO: Support other forms for producers,1,1,1,1,-1,-1,-1,-1
// TODO: Support schema evolution for PARQUET. Schema evolution should be id based.,1,1,1,1,-1,-1,-1,-1
// TODO: Support selecting layout with best local property once connector can participate in query optimization.,1,1,1,1,-1,-1,-1,-1
// TODO: Temporary hack that should be removed with new planner.,1,1,1,1,-1,-1,-1,-1
// TODO: There's no way to represent string value of a custom type,1,1,1,1,-1,-1,-1,-1
"// TODO: These should be moved to another class, when more connectors support arrays",1,1,1,1,-1,-1,-1,-1
// TODO: This can be optimized further if non-deterministic elements are not repeated,1,1,1,1,-1,-1,-1,-1
// TODO: This class is similar to SpnegoAuthentication in Airlift. Consider extracting a library.,1,1,1,1,-1,-1,-1,-1
"// TODO: This class might be useful to other Map functions (transform_key, cast map to map, map_concat, etc)",1,1,1,1,-1,-1,-1,-1
// TODO: This could be broader. We can push down conjuncts if they are constant for all rows in a window partition.,1,1,1,1,-1,-1,-1,-1
"// TODO: This could be quite slow, it should use parametric equals",1,1,1,1,-1,-1,-1,-1
"// TODO: This field should be final. However, due to the way QueryContext is constructed the memory limit is not known in advance",1,1,1,1,-1,-1,-1,-1
// TODO: This is a big hack.,1,1,1,1,-1,-1,-1,-1
// TODO: This is a bug in the RC text reader,1,1,1,1,-1,-1,-1,-1
// TODO: This is a hack. Presto engine should be able to handle identifiers in a case insensitive way where necessary.,1,1,1,1,-1,-1,-1,-1
// TODO: This may change based on metadata redesign,1,1,1,1,-1,-1,-1,-1
"// TODO: This method should be removed, and the correct limit set in the constructor. However, due to the way QueryContext is constructed the memory limit is not known in advance",1,1,1,1,-1,-1,-1,-1
"// TODO: This should be refactored, so that there's an optimizer that merges scan-filter-project into a single PlanNode",1,1,1,1,-1,-1,-1,-1
"// TODO: This should have been done when the QueryContext was created. However, the session isn't available at that point.",1,1,1,1,-1,-1,-1,-1
// TODO: This should move to something like GraphvizRenderer,1,1,1,1,-1,-1,-1,-1
// TODO: This should use an iterator like the HiveFileIterator,1,1,1,1,-1,-1,-1,-1
// TODO: To support non-null column. (NOT_NULL_COLUMN_CONSTRAINT),1,1,1,1,-1,-1,-1,-1
"// TODO: Under current implementation, one block can only hold INT_MAX many rows",1,1,1,1,-1,-1,-1,-1
// TODO: Update the query state machine and stage state machine to depend on TaskStatus instead,1,1,1,1,-1,-1,-1,-1
// TODO: Use ConnectorPartitionHandle (instead of int) to represent individual buckets.,1,1,1,1,-1,-1,-1,-1
// TODO: Use DistributedQueryRunner to perform query,1,1,1,1,-1,-1,-1,-1
// TODO: Use QueryManager to unload keys rather relying on LoadingCache,1,1,1,1,-1,-1,-1,-1
// TODO: Use SystemTablesMetadata instead of introducing a special case,1,1,1,1,-1,-1,-1,-1
// TODO: Use a regular number once better hash function is used for table write shuffle partitioning.,1,1,1,1,-1,-1,-1,-1
// TODO: Use builder pattern for SplitContext if we are to add optional field,1,1,1,1,-1,-1,-1,-1
// TODO: Use com.facebook.presto.sql.planner.iterative.rule.test.PlanBuilder#tableScan with required node/stream,1,1,1,1,-1,-1,-1,-1
"// TODO: Use injector-created SqlParser, which could potentially be different from the adhoc SqlParser.",1,1,1,1,-1,-1,-1,-1
// TODO: Use linear regression to predict stats if we have only 1 table.,1,1,1,1,-1,-1,-1,-1
// TODO: We are storing duplicated information at multiple levels. Look into if we can optimize it.,1,1,1,1,-1,-1,-1,-1
// TODO: We decrypted data before filter projection. This could send unnecessary traffic to KMS. This so far not seen a problem in production.,1,1,1,1,-1,-1,-1,-1
// TODO: We should also set storage parameters here when they are available in alluxio.grpc.table.layout.hive.Storage,1,1,1,1,-1,-1,-1,-1
"// TODO: We should be able to add more functions (e.g. BOOL_AND, BOOL_OR) to simple associative case",1,1,1,1,-1,-1,-1,-1
// TODO: We should be able to leverage this information in the StatementAnalyzer as well.,1,1,1,1,-1,-1,-1,-1
// TODO: We should consider removing ARBITRARY_DISTRIBUTION.,1,1,1,1,-1,-1,-1,-1
// TODO: We should leverage residual expression and convert that to TupleDomain.,1,1,1,1,-1,-1,-1,-1
// TODO: We should make context generic type in Drift library to avoid parsing and create address every time,1,1,1,1,-1,-1,-1,-1
"// TODO: When SourcePartitionedScheduler is used as a SourceScheduler, it shouldn't need to worry about",1,1,1,1,-1,-1,-1,-1
"// TODO: When we move RowExpressions to the SPI, we should get rid of this. This is effectively a ConstantExpression.",1,1,1,1,-1,-1,-1,-1
// TODO: Will merge these new function with old function once new feature is stable,1,1,1,1,-1,-1,-1,-1
"// TODO: With current implementation, a newly completed driver group won't trigger immediate HTTP response,",1,1,1,1,-1,-1,-1,-1
// TODO: account for non-equi conditions,1,1,1,1,-1,-1,-1,-1
// TODO: add FIXED_ARBITRARY_DISTRIBUTION support on non empty singleNodeChildren,1,1,1,1,-1,-1,-1,-1
// TODO: add RowExpression support,1,1,1,1,-1,-1,-1,-1
// TODO: add a check requiring GROUP BY or WHERE to be present,1,1,1,1,-1,-1,-1,-1
// TODO: add a cleanup process for leftover index tables,1,1,1,1,-1,-1,-1,-1
// TODO: add a mechanism to avoid sending the whole completedDriverGroups set over the wire for every task status reply,1,1,1,1,-1,-1,-1,-1
// TODO: add adaptations so these will pass,1,1,1,1,-1,-1,-1,-1
// TODO: add comments to explain the condition,1,1,1,1,-1,-1,-1,-1
// TODO: add config option/session property to force parallel plan if child is unpartitioned and window has a PARTITION BY clause,1,1,1,1,-1,-1,-1,-1
// TODO: add heuristic to jump to load strategy that is most likely to succeed,1,1,1,1,-1,-1,-1,-1
// TODO: add more checks after NaN info is collected,1,1,1,1,-1,-1,-1,-1
"// TODO: add network cost, based on input size in bytes? Or let connector provide this cost?",1,1,1,1,-1,-1,-1,-1
// TODO: add simple algebraic solver for projection translation (right now only considers identity projections),1,1,1,1,-1,-1,-1,-1
// TODO: add support for BLOOM_FILTER_UTF8,1,1,1,1,-1,-1,-1,-1
// TODO: add support for hash symbol in aggregation node,1,1,1,1,-1,-1,-1,-1
// TODO: add support for non inner joins,1,1,1,1,-1,-1,-1,-1
"// TODO: add support for non-equality conditions (e.g: <=, !=, >)",1,1,1,1,-1,-1,-1,-1
// TODO: add support for other types e.g. POLYGON,1,1,1,1,-1,-1,-1,-1
// TODO: add test case for a sliced RowBlock,1,1,1,1,-1,-1,-1,-1
// TODO: allow repartitioning if unpartitioned to increase parallelism,1,1,1,1,-1,-1,-1,-1
// TODO: analyze output,1,1,1,1,-1,-1,-1,-1
// TODO: announcement does not work for coordinator,1,1,1,1,-1,-1,-1,-1
// TODO: arguments will be pure RowExpression once we introduce subquery expression for RowExpression.,1,1,1,1,-1,-1,-1,-1
// TODO: be more precise in determining the cost of an RowExpression,1,1,1,1,-1,-1,-1,-1
// TODO: can we insert LOCAL exchange for one child SOURCE distributed and another HASH distributed?,1,1,1,1,-1,-1,-1,-1
// TODO: change connector SPI to make this resumable and have memory tracking,1,1,1,1,-1,-1,-1,-1
// TODO: change such that CallExpressions only capture the inputs they actually depend on,1,1,1,1,-1,-1,-1,-1
// TODO: check if the pager exited and verify the exit status?,1,1,1,1,-1,-1,-1,-1
"// TODO: check that rendered plan is as expected, once stats are collected in a consistent way",1,1,1,1,-1,-1,-1,-1
// TODO: clean up cast path,1,1,1,1,-1,-1,-1,-1
// TODO: cleanup open transaction,1,1,1,1,-1,-1,-1,-1
// TODO: close all column reader and value selectors,1,1,1,1,-1,-1,-1,-1
// TODO: collect errors and return them all at once,1,1,1,1,-1,-1,-1,-1
// TODO: come up with a more general form of this operation for other streaming operators,1,1,1,1,-1,-1,-1,-1
"// TODO: conditionally return well-known properties (e.g., orderkey > 0, etc)",1,1,1,1,-1,-1,-1,-1
// TODO: consider adding a formal final plan sanitization optimizer that prepares the plan for transmission/execution/logging,1,1,1,1,-1,-1,-1,-1
// TODO: consider materialized view predicates https://github.com/prestodb/presto/issues/16034,1,1,1,1,-1,-1,-1,-1
// TODO: consider two 7 bytes operations,1,1,1,1,-1,-1,-1,-1
// TODO: convert SqlFunctionId to be a native Thrift struct,1,1,1,1,-1,-1,-1,-1
// TODO: convert SqlInvokedFunction to be a native Thrift struct,1,1,1,1,-1,-1,-1,-1
// TODO: correctly determine if stream is parallelised,1,1,1,1,-1,-1,-1,-1
"// TODO: could optimize the growth algorithm to be resize this only when necessary; this wastes memory but guarantees that if every value has a distinct hash, we have space",1,1,1,1,-1,-1,-1,-1
// TODO: create ColumnarSlice class and expose the offset through it,1,1,1,1,-1,-1,-1,-1
// TODO: create ColumnarSlice class and expose the rawSlice through it,1,1,1,1,-1,-1,-1,-1
// TODO: create a case-insensitive completer,1,1,1,1,-1,-1,-1,-1
// TODO: decimal type might not support yet,1,1,1,1,-1,-1,-1,-1
// TODO: decouple configuration properties that don't make sense on Spark,1,1,1,1,-1,-1,-1,-1
// TODO: decouple query-level configuration that is not needed for Resource Manager,1,1,1,1,-1,-1,-1,-1
// TODO: decrement when the running task is finished (not immediately on cancel),1,1,1,1,-1,-1,-1,-1
// TODO: define max identifier length,0,1,1,1,-1,-1,-1,-1
// TODO: differentiate aggregation with empty grouping set,1,1,1,1,-1,-1,-1,-1
// TODO: disabled until https://github.com/prestodb/presto/issues/8926 is resolved,1,1,1,1,-1,-1,-1,-1
// TODO: disabled until we fix stackoverflow error in ExpressionTreeRewriter,1,1,1,1,-1,-1,-1,-1
// TODO: discover columns lazily based on where they are needed (to support connectors that can't enumerate all tables),1,1,1,1,-1,-1,-1,-1
// TODO: distinguish between process unresponsiveness (e.g GC pause) and host reboot,1,1,1,1,-1,-1,-1,-1
// TODO: do not limit the max size of blocks to read for now; enable the limit when the Hive connector is ready,1,1,1,1,-1,-1,-1,-1
"// TODO: do we need a full function call? (nullability checks, etc)",1,1,1,1,-1,-1,-1,-1
// TODO: do we need to call logout() on the LoginContext?,1,1,1,1,-1,-1,-1,-1
// TODO: drop column from index table,1,1,1,1,-1,-1,-1,-1
// TODO: drop special serialization code as soon as all clients,1,1,1,1,-1,-1,-1,-1
// TODO: duration from config,1,1,0,1,-1,-1,-1,-1
// TODO: dynamic batch sizing,1,1,1,1,-1,-1,-1,-1
// TODO: empty arrays or maps with null keys don't seem to work,1,1,1,1,-1,-1,-1,-1
// TODO: enable optimization related to lambda expression,1,1,1,1,-1,-1,-1,-1
// TODO: enable when https://github.com/facebook/presto/issues/4571 is fixed,1,1,1,1,-1,-1,-1,-1
"// TODO: enforce that sqlState is 01[5,6,7,8,9,I-Z][0-9A-Z]{3}",1,1,1,1,-1,-1,-1,-1
// TODO: expose transform information in Iceberg library,1,1,1,1,-1,-1,-1,-1
// TODO: extract TZ from pattern,1,1,1,1,-1,-1,-1,-1
"// TODO: extract candidate names from SELECT, WHERE, HAVING, GROUP BY and ORDER BY expressions",1,1,1,1,-1,-1,-1,-1
// TODO: extract frames of type RANGE and allow optimization on them,1,1,1,1,-1,-1,-1,-1
// TODO: extract to its own optimization after AddLocalExchanges once the,1,1,1,1,-1,-1,-1,-1
// TODO: figure out a better way to do this,1,1,1,1,-1,-1,-1,-1
// TODO: figure out a type-agnostic way of dealing with this. Maybe add a special unary operator,1,1,1,1,-1,-1,-1,-1
// TODO: figure out a way to know what exactly stage has caused a failure,1,1,1,1,-1,-1,-1,-1
// TODO: figure out how to improve the set flattening optimizer so that it can run at any point,1,1,1,1,-1,-1,-1,-1
// TODO: filtering mechanism could be used to return NoOp method when only precision is increased,1,1,1,1,-1,-1,-1,-1
// TODO: find a better way to directly optimize FALSE LITERAL in join predicate,1,1,1,1,-1,-1,-1,-1
// TODO: find a better way to do this,1,1,1,1,-1,-1,-1,-1
// TODO: fix DictionaryBlock so that dictionaryIsCompacted can be set to true when the underlying block over-retains memory.,1,1,1,1,-1,-1,-1,-1
// TODO: fix Tempto to allow empty passwords,1,1,1,1,-1,-1,-1,-1
// TODO: fix coercion for JSON or PAGEFILE,1,1,1,1,-1,-1,-1,-1
// TODO: fix in OkHttp: https://github.com/square/okhttp/issues/3111,1,1,1,1,-1,-1,-1,-1
// TODO: format block,1,1,1,1,-1,-1,-1,-1
// TODO: get rid of the time column by creating Presto's SimpleQueryableIndex impl,1,1,1,1,-1,-1,-1,-1
"// TODO: hack because there could be ""type only"" coercions (which aren't necessarily included as implicit casts),",1,1,1,1,-1,-1,-1,-1
// TODO: handle correlated projection,1,1,1,1,-1,-1,-1,-1
// TODO: handle this properly,1,1,1,1,-1,-1,-1,-1
// TODO: how to inject something with having constructor with parameter.,1,1,1,1,-1,-1,-1,-1
"// TODO: if all children have the same partitioning, pass this partitioning to the parent",1,1,1,1,-1,-1,-1,-1
"// TODO: if input is grouped, create streaming join",1,1,1,1,-1,-1,-1,-1
// TODO: implement N arguments char concat,1,1,0,1,-1,-1,-1,-1
// TODO: implement column level permissions,1,1,1,1,-1,-1,-1,-1
// TODO: implement full properties for local exchanges,1,1,1,1,-1,-1,-1,-1
// TODO: implement masking based on maskChannel field once Window Functions support DISTINCT arguments to the functions.,1,1,1,1,-1,-1,-1,-1
// TODO: implement specialized version for short decimals,1,1,1,1,-1,-1,-1,-1
// TODO: implement this,1,1,1,1,-1,-1,-1,-1
// TODO: implement this feature SWARM-353,1,1,1,1,-1,-1,-1,-1
// TODO: implement this feature SWARM-354,1,1,1,1,-1,-1,-1,-1
// TODO: implement this feature SWARM-355,1,1,1,1,-1,-1,-1,-1
// TODO: implement this method in subclasses and remove this default implementation,1,1,1,1,-1,-1,-1,-1
"// TODO: in case of grouping sets, we should be able to push the filters over grouping keys below the aggregation",1,1,1,1,-1,-1,-1,-1
// TODO: include all equivalent columns in partitioning properties,1,1,1,1,-1,-1,-1,-1
// TODO: include attemptId in taskId,1,1,1,1,-1,-1,-1,-1
// TODO: inline,1,1,1,1,-1,-1,-1,-1
"// TODO: instead of having this function, we should add feature extractors that extend Model and extract features from Strings",1,1,1,1,-1,-1,-1,-1
// TODO: investigate alternative split discovery strategies when this error is hit.,1,1,1,1,-1,-1,-1,-1
"// TODO: iterator based implementation, instead of fetching all result at once",1,1,1,1,-1,-1,-1,-1
// TODO: keys can have the same problem. But usually they are primitive types (given the nature of comparison).,1,1,1,1,-1,-1,-1,-1
// TODO: leave partial aggregation above Join?,1,1,1,1,-1,-1,-1,-1
// TODO: make autocommit isolation level a session parameter,1,1,1,1,-1,-1,-1,-1
// TODO: make generateEqualitiesPartitionedBy take left and right scope,1,1,1,1,-1,-1,-1,-1
// TODO: make it a whitelist (a failure-detecting service selector) and maybe build in support for injecting this in airlift,1,1,1,1,-1,-1,-1,-1
// TODO: make it cost based decision based on symbol statistics,1,1,1,1,-1,-1,-1,-1
// TODO: make maxUsedSpaceThreshold configurable,1,1,1,1,-1,-1,-1,-1
// TODO: make serializer optional in case of non decomposable aggregation,1,1,1,1,-1,-1,-1,-1
// TODO: may need to use trySetMemoryReservation with a compaction to free memory (but that may cause GC pressure),1,1,1,1,-1,-1,-1,-1
"// TODO: migrate docker containers to a newer JVM, then re-enable it",1,1,1,1,-1,-1,-1,-1
// TODO: move this before optimization if possible!!,1,1,1,1,-1,-1,-1,-1
// TODO: move this class to TransformCorrelatedScalarAggregationToJoin when old optimizer is gone,1,1,1,1,-1,-1,-1,-1
// TODO: move this logic to PlanChecker once PropertyDerivations.deriveProperties fully supports local exchanges,1,1,1,1,-1,-1,-1,-1
// TODO: move this to a background thread,1,1,1,1,-1,-1,-1,-1
// TODO: move this to airlift or jmxutils,1,1,1,1,-1,-1,-1,-1
// TODO: move to Airlift,1,1,1,1,-1,-1,-1,-1
// TODO: move to CoordinatorModule when NodeScheduler is moved,1,1,1,1,-1,-1,-1,-1
// TODO: need to handle race condition on all workers,1,1,1,1,-1,-1,-1,-1
// TODO: need to know if alias was quoted,1,1,1,1,-1,-1,-1,-1
// TODO: need to know whether the qualified name and the name of this field were quoted,1,1,1,1,-1,-1,-1,-1
// TODO: need to support widening conversion for numbers,1,1,1,1,-1,-1,-1,-1
// TODO: optimize and convert directly to double in similar fashion as in double to decimal casts,1,1,1,1,-1,-1,-1,-1
// TODO: optimize and convert directly to float in similar fashion as in double to decimal casts,1,1,1,1,-1,-1,-1,-1
// TODO: pass compliance tests,1,1,1,1,-1,-1,-1,-1
"// TODO: pass in the ""assignments"" and the ""outputs"" separately (i.e., get rid if the symbol := symbol idiom)",1,1,1,1,-1,-1,-1,-1
// TODO: predicates,1,1,1,1,-1,-1,-1,-1
// TODO: preserve quotedness,1,1,1,1,-1,-1,-1,-1
// TODO: presto cli doesn't handle empty field name row type yet,1,1,1,1,-1,-1,-1,-1
// TODO: properly handle the failed vs closed state,1,1,1,1,-1,-1,-1,-1
// TODO: purge retryable queries slower than normal ones,1,1,1,1,-1,-1,-1,-1
// TODO: pushdownFilter for icebergLayout,1,1,1,1,-1,-1,-1,-1
// TODO: re-enable this check once we fix the type coercions in the optimizers,1,1,1,1,-1,-1,-1,-1
"// TODO: refactor calling code, so that input can be a byte[]. (See comment above about performance)",1,1,1,1,-1,-1,-1,-1
// TODO: refactor the entire LocationFactory interfaces to completely replace URI with more efficient/expressive data structures,1,1,1,1,-1,-1,-1,-1
// TODO: refactor this method into ExchangeNode#partitionedExchange once,1,1,1,1,-1,-1,-1,-1
// TODO: refactor this to avoid creating an empty table on failure,1,1,1,1,-1,-1,-1,-1
"// TODO: reimplement this check? Currently ""varchar(Integer.MAX_VALUE)"" fails with ""varchar""",1,1,1,1,-1,-1,-1,-1
// TODO: remove Once Joda version supports this Timezone.,1,1,1,1,-1,-1,-1,-1
// TODO: remove Once this recently renamed Timezone is supported.,1,1,1,1,-1,-1,-1,-1
// TODO: remove after updating to Okio 1.15.0+,1,1,1,1,-1,-1,-1,-1
// TODO: remove angle brackets support once ROW<TYPE>(name) will be dropped,1,1,1,1,-1,-1,-1,-1
// TODO: remove expectation that UNION DISTINCT => distinct aggregation directly above union node,1,1,1,1,-1,-1,-1,-1
// TODO: remove from NodePartitioningManager and move to CoordinatorModule,1,1,1,1,-1,-1,-1,-1
"// TODO: remove once minimum Java version is increased to 8u161 and 9.0.4, see PrestoSystemRequirement.",1,1,1,1,-1,-1,-1,-1
// TODO: remove the table type change after Hive 3.0 update.,1,1,1,1,-1,-1,-1,-1
// TODO: remove the table type change after Hive 3.0 upgrade.,1,1,1,1,-1,-1,-1,-1
"// TODO: remove this ""if"" branch when output symbols selection is supported by nested loop join",1,1,1,1,-1,-1,-1,-1
// TODO: remove this after PR #7987 is landed,1,1,1,1,-1,-1,-1,-1
// TODO: remove this huge hack,1,1,1,1,-1,-1,-1,-1
// TODO: remove this test when we have a more unified testWith() using assertBlock(),1,1,1,1,-1,-1,-1,-1
// TODO: remove this when the new expression tree is implemented,1,1,1,1,-1,-1,-1,-1
// TODO: remove this when we upgrade to Java 9 (replace with java.lang.Runtime.getVersion()),1,1,1,1,-1,-1,-1,-1
"// TODO: remove when introducing nullable comparisons (<=, <, >, >=)",1,1,1,1,-1,-1,-1,-1
// TODO: replace arguments with RowExpression once we introduce subquery expression for RowExpression (#12745).,1,1,1,1,-1,-1,-1,-1
// TODO: replace min/max with LongDecimal/ShortDecimal to calculate retained size,1,1,1,1,-1,-1,-1,-1
// TODO: revisit this when spillable hash aggregation operator is turned on,1,1,1,1,-1,-1,-1,-1
// TODO: sdruzkin - byte should use IntegerStatisticsBuilder,1,1,1,1,-1,-1,-1,-1
// TODO: see if there are predicates that can be inferred from the semi join output,1,1,0,1,-1,-1,-1,-1
// TODO: sharding key,1,1,1,1,-1,-1,-1,-1
// TODO: should WarningCollector be added?,1,1,1,1,-1,-1,-1,-1
// TODO: should we change all indices into buckets nodePointers to longs?,1,1,1,1,-1,-1,-1,-1
// TODO: specialize the class at creation time,1,1,1,1,-1,-1,-1,-1
// TODO: split this method into two: createPartitionedDriverRunner and createUnpartitionedDriverRunner.,1,1,1,1,-1,-1,-1,-1
// TODO: still there is limitation for RowExpression. Example types could be Regex,1,1,1,1,-1,-1,-1,-1
"// TODO: storage and dataColumns is required from MOR record cursor, might be able to remove later",1,1,1,1,-1,-1,-1,-1
// TODO: streaming,1,1,1,1,-1,-1,-1,-1
"// TODO: support CBO, supply real nodes count",1,1,1,1,-1,-1,-1,-1
// TODO: support batch updates,1,1,1,1,-1,-1,-1,-1
// TODO: support convert,1,1,1,1,-1,-1,-1,-1
// TODO: support explain analyze for Spark,1,1,1,1,-1,-1,-1,-1
"// TODO: support for complex inequalities, e.g. left < right + 10, NOT, LIKE",1,1,1,1,-1,-1,-1,-1
// TODO: support hive flavour system tables,1,1,1,1,-1,-1,-1,-1
// TODO: support insert into non partitioned table,1,1,1,1,-1,-1,-1,-1
// TODO: support java.util.Logging,1,1,1,1,-1,-1,-1,-1
// TODO: support more reference types,1,1,1,1,-1,-1,-1,-1
"// TODO: support more types, e.g. ROW",1,1,1,1,-1,-1,-1,-1
// TODO: support null values and determine if timestamp and binary are allowed as partition keys,1,1,1,1,-1,-1,-1,-1
// TODO: support other return place convention,1,1,1,1,-1,-1,-1,-1
// TODO: support path override in Iceberg table creation,1,1,1,1,-1,-1,-1,-1
// TODO: support quoted identifiers properly,1,1,1,1,-1,-1,-1,-1
// TODO: support stored procedure escape syntax,1,1,1,1,-1,-1,-1,-1
// TODO: support subfield pushdown,1,1,1,1,-1,-1,-1,-1
// TODO: support this,1,1,1,1,-1,-1,-1,-1
// TODO: support transactional inserts,1,1,1,1,-1,-1,-1,-1
// TODO: support transactional metadata,1,1,1,1,-1,-1,-1,-1
"// TODO: technically, AddExchanges generates a broken plan that this rule ""fixes""",1,1,1,1,-1,-1,-1,-1
// TODO: temporary kill switch until we're confident the new error handling logic is,1,1,1,1,-1,-1,-1,-1
// TODO: the client currently only supports exchange; more methods (for /v1/task) should be supported,1,1,1,1,-1,-1,-1,-1
// TODO: the server currently only supports exchange; more end points (for /v1/task) should be supported,1,1,1,1,-1,-1,-1,-1
// TODO: the shuffle partitioning could use a better hash function (instead of Hive bucket function),1,1,1,1,-1,-1,-1,-1
"// TODO: theoretically, filterExpression could be a constant value (true or false) after optimization; we could possibly optimize the execution.",1,1,1,1,-1,-1,-1,-1
// TODO: these should be in airlift,1,1,1,1,-1,-1,-1,-1
// TODO: these two fields will not be effective if they are created by connectors until we have refactored PickTableLayout,1,1,1,1,-1,-1,-1,-1
// TODO: think about how to get rid of this in new planner,1,1,1,1,-1,-1,-1,-1
// TODO: this can be relaxed,1,1,1,1,-1,-1,-1,-1
// TODO: this class does not yield wrt memory limit; enable it,1,1,1,1,-1,-1,-1,-1
// TODO: this code is likely wrong and should switch to Decimals.readBigDecimal(),1,1,1,1,-1,-1,-1,-1
// TODO: this is a big hack,1,1,1,1,-1,-1,-1,-1
// TODO: this is a hack and should be removed,1,1,1,1,-1,-1,-1,-1
// TODO: this is a hack that should be removed,1,1,1,1,-1,-1,-1,-1
// TODO: this is a hack to force scheduling on the coordinator,1,1,1,1,-1,-1,-1,-1
"// TODO: this is a hack, because we apply coercions to the output of expressions, rather than the arguments to expressions.",1,1,1,1,-1,-1,-1,-1
"// TODO: this is a hack, we should change type coercions to coerce the inputs to functions/operators instead of coercing the output",1,1,1,1,-1,-1,-1,-1
// TODO: this metastore should not have global cache,1,1,1,1,-1,-1,-1,-1
"// TODO: this method seems to be copied in multiple test classes in this package, should it be moved to a utility?",1,1,1,1,-1,-1,-1,-1
// TODO: this might explode stats,1,1,1,1,-1,-1,-1,-1
"// TODO: this might fail (even though we have just released memory), but we don't",1,1,1,1,-1,-1,-1,-1
// TODO: this only works for hard file affinity; but good for a prototype,1,1,1,1,-1,-1,-1,-1
// TODO: this really should a be relation type,1,1,1,1,-1,-1,-1,-1
// TODO: this rewrite can probably be made more sophisticated,1,1,1,1,-1,-1,-1,-1
// TODO: this section should be rewritten when support is added for GROUP BY columns to reference an outer scope,1,1,1,1,-1,-1,-1,-1
// TODO: this should be asynchronous,1,1,1,1,-1,-1,-1,-1
// TODO: this should have the same global properties as the stream taking the replicated data,1,1,1,1,-1,-1,-1,-1
// TODO: this should not be callable from SQL,1,1,1,1,-1,-1,-1,-1
// TODO: this should use GROUPING() instead of relying on specific group numbering,1,1,1,1,-1,-1,-1,-1
// TODO: this should use onDemand(),1,1,1,1,-1,-1,-1,-1
// TODO: this time limit should be configurable,1,1,1,1,-1,-1,-1,-1
"// TODO: this will technically cause an NPE in httpClient, but it's not triggered because",1,1,1,1,-1,-1,-1,-1
// TODO: thrift server port should be announced by discovery server similar to http/https ports,1,1,1,1,-1,-1,-1,-1
// TODO: total hack to figure out if a function is deterministic. martint should fix this when he refactors the planning code,1,1,1,1,-1,-1,-1,-1
// TODO: transactional when FunctionManager is made transactional,1,1,1,1,-1,-1,-1,-1
// TODO: translate the RIGHT join into a mirrored LEFT join when we refactor (@martint),1,1,1,1,-1,-1,-1,-1
// TODO: uncomment below test once #8456 is fixed,1,1,1,1,-1,-1,-1,-1
// TODO: uncomment when https://github.com/facebook/presto/issues/4571 is fixed,1,1,1,1,-1,-1,-1,-1
// TODO: update default value of organization_enabled to true,1,1,0,1,-1,-1,-1,-1
// TODO: update error message,1,1,1,1,-1,-1,-1,-1
// TODO: update in the interface after the new memory tracking framework is landed,1,1,1,1,-1,-1,-1,-1
// TODO: update in the interface after the new memory tracking framework is landed (#9049),1,1,1,1,-1,-1,-1,-1
// TODO: update unit tests after CacheManager.reset() is available to avoid using reflection to modify singleton,1,1,1,1,-1,-1,-1,-1
// TODO: use Apache ORC library in OrcTester,1,1,1,1,-1,-1,-1,-1
// TODO: use RowExpression once the Expression-to-RowExpression is done,1,1,1,1,-1,-1,-1,-1
// TODO: use a more precise way to determine overlapping conjuncts (e.g. commutative predicates),1,1,1,1,-1,-1,-1,-1
// TODO: use batch value selector,1,1,1,1,-1,-1,-1,-1
// TODO: use function annotation instead of assume all function can return NULL,1,1,1,1,-1,-1,-1,-1
// TODO: use import when Java 7 compiler bug is fixed,1,1,1,1,-1,-1,-1,-1
// TODO: use invokeVirtual on the set instead. This requires swapping the two elements in the stack,1,1,1,1,-1,-1,-1,-1
// TODO: use locking to do this properly,1,1,1,1,-1,-1,-1,-1
// TODO: use mapper in other methods,1,1,1,1,-1,-1,-1,-1
// TODO: use range methods when they have defined (and consistent) semantics,1,1,1,1,-1,-1,-1,-1
// TODO: use the code generator here,1,1,1,1,-1,-1,-1,-1
"// TODO: v, ns, sparse fields",1,1,0,1,-1,-1,-1,-1
// TODO: validate output,1,1,1,1,-1,-1,-1,-1
// TODO: validate that catalog exists,1,1,1,1,-1,-1,-1,-1
// TODO: verify contents,1,1,1,1,-1,-1,-1,-1
// TODO: verify output,1,1,0,1,-1,-1,-1,-1
// TODO: verify the parametric types too,1,1,1,1,-1,-1,-1,-1
// TODO: verify this,1,1,1,1,-1,-1,-1,-1
// TODO: we can further improve simplifying the equalities by considering other relationships from the outer side,1,1,1,1,-1,-1,-1,-1
// TODO: we could skip memory reservation for hashAggregationBuilder.getGroupIdsSortingSize(),1,1,1,1,-1,-1,-1,-1
// TODO: we need to get rid of hash from Block and rely on HASH_CODE operators only,1,1,1,1,-1,-1,-1,-1
// TODO: we need to reason about how pre-computed hashes from child relate to distinct variables. We should be able to include any precomputed hash,1,1,1,1,-1,-1,-1,-1
// TODO: we should account for the memory used for collecting build-side values using MemoryContext,1,1,1,1,-1,-1,-1,-1
// TODO: we should be able to infer if conditions on grouping() correspond to global grouping sets to determine whether,1,1,1,1,-1,-1,-1,-1
// TODO: we shouldn't need to create a new analyzer. The access control should be carried in the context object,1,1,1,1,-1,-1,-1,-1
// TODO: what if a new connector is added by an existing one,1,1,1,1,-1,-1,-1,-1
// TODO: when correlations list empty this should return immediately. However this isn't correct,1,1,1,1,-1,-1,-1,-1
"// TODO: when min == max (i.e., singleton ranges, the construction of Domains can be done more efficiently",1,1,1,1,-1,-1,-1,-1
"// TODO: when tests are run on a non-UTC time zone machine, this breaks.",1,1,1,1,-1,-1,-1,-1
// TODO: when this happens we should switch to either BERNOULLI or page sampling,1,1,1,1,-1,-1,-1,-1
"// TODO: will be implemented once the ""SET ROLE"" statement is introduced",1,1,1,1,-1,-1,-1,-1
// TODO: will be used to create the {@link NativeExecutionTask},1,1,1,1,-1,-1,-1,-1
// TODO: will be used to deserialize the  {@link SerializedPage},1,1,1,1,-1,-1,-1,-1
// TODO: will merge BigQueryEmptySplitPageSource into BigQueryResultPageSource to simplify the logic,1,1,1,1,-1,-1,-1,-1
// TODO: workaround for the fact that QualifiedName lowercases parts,1,1,1,1,-1,-1,-1,-1
// TODO: write optimized implementation,1,1,1,1,-1,-1,-1,-1
// TODO: your code should also have tests for all types that you support and for the state machine of your cursor,1,1,1,1,-1,-1,-1,-1
"// This code was copied from PrestoServer, and is a hack that should be removed when the connectorId property is removed",1,1,1,1,-1,-1,-1,-1
// This is a hack for development and does not support nested classes.,1,1,1,1,-1,-1,-1,-1
// This is a hack for performance reasons.,1,1,1,1,-1,-1,-1,-1
// This is hack that we need to use as the timezone interpretation depends on date (not only on time),1,1,1,1,-1,-1,-1,-1
// This method bypasses transaction interface because this method is inherently hacky and doesn't work well with the transaction abstraction.,1,1,1,1,-1,-1,-1,-1
// To hack around the first issue we reserve the memory in the constructor and we release it in the close() method.,1,1,1,1,-1,-1,-1,-1
// Todo: 1) The stream.slice() in both MultiBufferInputStream and SingleBufferInputStream will clone the memory.,1,1,1,1,-1,-1,-1,-1
// Todo: pass real columns to ProjectionBasedDwrfKeyProvider instead of ImmutableList.of(),1,1,1,1,-1,-1,-1,-1
// Todo: using orc file column name,1,1,0,1,-1,-1,-1,-1
"// UTC zone would be printed as ""Z"" in ""XXX"" format",0,1,1,1,-1,-1,-1,-1
"// XXX: This should be removed when the client protocol is improved, so that we don't need to hold onto so much query history",1,1,1,1,-1,-1,-1,-1
"// and all of that is from the Cache keys. Storing them in place though is hacky,",1,1,1,1,-1,-1,-1,-1
// and the query should succeed. This is a bit hacky way to check whether service waitTime,1,1,1,1,-1,-1,-1,-1
// format string below is a hack to construct a vendor specific SQLState value,1,1,1,1,-1,-1,-1,-1
// hack to work around the metastore not being configured for S3 or other FS,1,1,1,1,-1,-1,-1,-1
// hack: java classes for types that can be used with magic literals,1,1,1,1,-1,-1,-1,-1
// hack: replaceView can be used as replaceTable despite its name,1,1,1,1,-1,-1,-1,-1
"// is currently a hack: it takes intermediate type as input, and may not be a valid",1,1,1,1,-1,-1,-1,-1
// this is hack!!!. Ideally we want to clone the scan pipeline and create/update the filter in the scan pipeline to contain this filter and,1,1,1,1,-1,-1,-1,-1
// this supplier is thread-safe. TODO: this logic should probably move to the scheduler since the choice of which node to run in should be,1,1,1,1,-1,-1,-1,-1
// todo - make this general postprocessing rule.,1,1,1,1,-1,-1,-1,-1
"// todo Change userRegex from "".*"" to one particular user that Presto Admin will be restricted to run as",1,1,1,1,-1,-1,-1,-1
// todo I have no idea why this is needed... maybe there is a propagation delay in the metastore?,1,1,1,1,-1,-1,-1,-1
// todo adapt input types to the file types as Hive does,1,1,1,1,-1,-1,-1,-1
// todo add DROP VIEW test... not all connectors have view support,1,1,1,1,-1,-1,-1,-1
// todo add a dummy resource to airlift jaxrs in this case,1,1,1,1,-1,-1,-1,-1
// todo add bound timestamp with time zone,1,1,1,1,-1,-1,-1,-1
// todo add cases for decimal,1,1,1,1,-1,-1,-1,-1
// todo add more group counts when JMH support programmatic ability to set OperationsPerInvocation,1,1,1,1,-1,-1,-1,-1
// todo add tests for filter function,1,1,1,1,-1,-1,-1,-1
// todo change this if session properties support null,1,1,1,1,-1,-1,-1,-1
// todo check transaction id roll back,1,1,1,1,-1,-1,-1,-1
// todo compiled implementation of lookup join does not support when we are joining with empty join channels.,1,1,1,1,-1,-1,-1,-1
// todo consider changing this implementation to more performant one which does not use intermediate String objects,1,1,1,1,-1,-1,-1,-1
// todo dictionary processing should be able to tolerate failures of unused elements,1,1,1,1,-1,-1,-1,-1
// todo do something smarter after https://github.com/prestodb/presto/pull/5877 is merged,1,1,1,1,-1,-1,-1,-1
// todo do we need to invalidate all partitions?,1,1,1,1,-1,-1,-1,-1
// todo does cassandra allow null partition keys?,1,1,1,1,-1,-1,-1,-1
// todo enable when null output type is supported,1,1,1,1,-1,-1,-1,-1
// todo escape string,1,1,1,1,-1,-1,-1,-1
// todo eventually add some notion of statistic reliability,1,1,1,1,-1,-1,-1,-1
// todo fail if format is not known,1,1,1,1,-1,-1,-1,-1
// todo find a better algorithm for this,1,1,1,1,-1,-1,-1,-1
// todo format as graphviz,1,1,1,1,-1,-1,-1,-1
// todo format as json,1,1,1,1,-1,-1,-1,-1
// todo get rid of BigInteger,1,1,1,1,-1,-1,-1,-1
// todo get rid of that and only use revocable memory,1,1,1,1,-1,-1,-1,-1
// todo handle low/high value changes if range gets narrower due to cast (e.g. BIGINT -> SMALLINT),1,1,1,1,-1,-1,-1,-1
"// todo if repeatable read, this must be recorded",1,1,1,1,-1,-1,-1,-1
// todo implement safer overwrite code,1,1,1,1,-1,-1,-1,-1
// todo it is likely we end up with redundant filters here because the predicate push down has already been run... the fix is to run predicate push down again,1,1,1,1,-1,-1,-1,-1
// todo maybe make this more precise and only match base package,1,1,1,1,-1,-1,-1,-1
// todo most of this should be rewritten for readability and performance,1,1,1,1,-1,-1,-1,-1
// todo optimize me,1,1,1,1,-1,-1,-1,-1
// todo parse file by hand since Properties ignores duplicate entries,1,1,0,1,-1,-1,-1,-1
// todo pass in desired projection,1,1,1,1,-1,-1,-1,-1
// todo reenable when cast as timestamp with time zone is implemented,1,1,1,1,-1,-1,-1,-1
// todo remove lower case when presto supports mixed case names,1,1,1,1,-1,-1,-1,-1
"// todo rewrite MockRemoteTask to fire a tate transition when splits are cleared, and then validate blocked future completes",1,1,1,1,-1,-1,-1,-1
// todo rewrite without BigInteger,1,1,1,1,-1,-1,-1,-1
// todo shard change roll back,1,1,1,1,-1,-1,-1,-1
// todo should we just skip partition pruning instead of throwing an exception?,1,1,1,1,-1,-1,-1,-1
"// todo support DECIMAL, FLOAT, DATE, TIMESTAMP, and CHAR",1,1,1,1,-1,-1,-1,-1
// todo there are better ways to do this,1,1,1,1,-1,-1,-1,-1
// todo there should be a way to manage the admins list,1,1,1,1,-1,-1,-1,-1
"// todo this check should be inside of TupleDescriptor.withAlias, but the exception needs the node object",1,1,1,1,-1,-1,-1,-1
// todo this should asynchronously wait a standard timeout period before failing,1,1,1,1,-1,-1,-1,-1
// todo this should be checked in analysis,1,1,1,1,-1,-1,-1,-1
// todo this should be more efficient by selectively walking the directory tree,1,1,1,1,-1,-1,-1,-1
// todo this should be moved to a helper,1,1,1,1,-1,-1,-1,-1
"// todo to test with compression, the file must be renamed with the compression extension",1,1,1,1,-1,-1,-1,-1
// todo use RLE blocks,1,1,1,1,-1,-1,-1,-1
// todo verify list contains single type,1,1,1,1,-1,-1,-1,-1
// todo wait for all running transactions using the connector to complete before removing the services,1,1,1,1,-1,-1,-1,-1
// todo we can do better,1,1,1,1,-1,-1,-1,-1
// todo we need an unmodifiable view,1,1,1,1,-1,-1,-1,-1
// todo we should be able to pass the stats down to avoid recalculating min and max,1,1,1,1,-1,-1,-1,-1
// todo: Explicitly handle less-than and greater-than functions separately.,1,1,1,1,-1,-1,-1,-1
// todo: add streaming aggregation support when grouping keys contain all of the partition keys,1,1,1,1,-1,-1,-1,-1
"// todo: for segmented aggregation, add optimizations for the fields that need to compute hash",1,1,1,1,-1,-1,-1,-1
// todo: make COUNT(null) work,1,1,1,1,-1,-1,-1,-1
// todo: rate-limit new assignments,1,1,1,1,-1,-1,-1,-1
// todo: remove the code when we have support for filter function in nested loop join,1,1,1,1,-1,-1,-1,-1
// todo: support all known type,1,1,1,1,-1,-1,-1,-1
// which will advance the state. TODO: We could advance the state on false and not advance on true. Consider the,1,1,1,1,-1,-1,-1,-1
/**     * <tt>_key</tt> - Represents the key as a text column. Format is UTF-8 which may be wrong for topics. TODO: make charset configurable.     */,1,1,1,1,-1,-1,-1,-1
/**     * <tt>_message</tt> - Represents the full topic as a text column. Format is UTF-8 which may be wrong for some topics. TODO: make charset configurable.     */,1,1,1,1,-1,-1,-1,-1
/**     * Alter the specified function.     * TODO: Support transaction     */,1,1,1,1,-1,-1,-1,-1
/**     * Create or replace the specified function.     * TODO: Support transaction     */,1,1,1,1,-1,-1,-1,-1
/**     * Drop the specified function.     * TODO: Support transaction     */,1,1,1,1,-1,-1,-1,-1
"/**     * Given a list of plan node hashes, returns historical statistics for them.     * Some entries in return value may be missing if no corresponding history exists.     * This can be called even when hash of a plan node is not present.     *     * TODO: Using PlanNode as map key can be expensive, we can use Plan node id as a map key.     */",1,1,1,1,-1,-1,-1,-1
"/**     * List all functions managed by the {@link FunctionNamespaceManager}.     * likePattern and escape are from `SHOW FUNCTIONS LIKE [likePattern] escape [escape]`.     * Backends supporting like pattern / escape matching can use this to prefilter functions, but Presto will filter again, so it is fine if the backend doesn't     * use these parameters.     * TODO: Support transaction     */",1,1,0,1,-1,-1,-1,-1
"/**     * See Hacker's Delight, Section 9.3     */",1,1,0,1,-1,-1,-1,-1
"/**     * TODO: Remove this function? pretty similar to createForStruct(StandardStructObjectInspector, RowType)     */",1,1,1,1,-1,-1,-1,-1
/**     * TODO: The getOutput method will call NativeExecutionTask APIs to:     *  1. Submit the plan to the external process     *  2. Call pollResult method to get latest buffered result.     *  3. Call getTaskInfo method to get the TaskInfo and propagate it     *  4. Deserialize the polled {@link SerializedPage} to {@link Page} and return it back     */,1,1,1,1,-1,-1,-1,-1
/**     * TODO: implement full thrift support for v1/task     */,1,1,1,1,-1,-1,-1,-1
/**     * TODO: this method is required since not all RPC calls are supported by thrift.     *     It should be merged into {@code createTaskLocation} once full thrift support is in-place for v1/task     */,1,1,1,1,-1,-1,-1,-1
/**     * TODO: this should be merged into getTaskStatus once full thrift support is in-place for v1/task     */,1,1,1,1,-1,-1,-1,-1
"/**     * TODO: use RowBlock in the future     *     * @param block of the form [key1, count1, key2, count2, ...]     */",1,1,1,1,-1,-1,-1,-1
"/**     * This method exists only because it is currently impossible to create a function namespace from the query engine,     * and therefore the query runner needs to be aware of the H2 handle in order to create function namespaces when     * required by the tests.     * <p>     * TODO: Remove when there is a generic way of creating function namespaces as if creating schemas.     */",1,1,1,1,-1,-1,-1,-1
/**     * Todo - configurable time zones and locales.     */,1,1,1,1,-1,-1,-1,-1
/**     * Use it in optimizer {@link com.facebook.presto.sql.planner.iterative.Rule} only if you truly do not have a better option     * <p>     * TODO: replace it with a support for plan (physical) properties in rules pattern matching     */,1,1,1,1,-1,-1,-1,-1
// 1009 is chosen as a prime number greater than 1000.// This is because Hive bucket function can result in skewed distribution when bucket number of power of 2// TODO: Use a regular number once better hash function is used for table write shuffle partitioning.,1,1,1,1,-1,-1,-1,-1
"// 3. Post-projection// Add back the implicit casts that we removed in 2.a// TODO: this is a hack, we should change type coercions to coerce the inputs to functions/operators instead of coercing the output",1,1,1,1,-1,-1,-1,-1
// Allow metadata delete for range filters on partition columns.// TODO Add support for metadata delete for any filter on partition columns.,1,1,1,1,-1,-1,-1,-1
"// Analyzer checks for select permissions but DELETE has a separate permission, so disable access checks// TODO: we shouldn't need to create a new analyzer. The access control should be carried in the context object",1,1,1,1,-1,-1,-1,-1
// Assumes producer uses DataFileWriter or data comes in this particular format.// TODO: Support other forms for producers,1,1,1,1,-1,-1,-1,-1
// BIND returns a function type rather than a value type// WHEN is part of CASE expression. We do not have a separate code generator to generate code for WHEN expression separately so do not consider them as CSE// TODO If we detect a whole WHEN statement as CSE we should probably only keep one,1,1,1,1,-1,-1,-1,-1
// Check NaN value count// TODO: add more checks after NaN info is collected,1,1,1,1,-1,-1,-1,-1
"// ConnectorTableHandle will represent the engine's view of data set on a table, we will deprecate ConnectorTableLayoutHandle later.// TODO remove table layout once it is fully deprecated.",1,1,1,1,-1,-1,-1,-1
// Current cost heuristic:// 1) Prefer fewer input symbols// 2) Prefer smaller expression trees// 3) Sort the expressions alphabetically - creates a stable consistent ordering (extremely useful for unit testing)// TODO: be more precise in determining the cost of an RowExpression,1,1,1,1,-1,-1,-1,-1
"// Currently, invoking the expression interpreter is very expensive.// TODO invoke the interpreter unconditionally when the interpreter becomes cheap enough.",1,1,1,1,-1,-1,-1,-1
// Do not distribute boolean expressions if there are any non-deterministic elements// TODO: This can be optimized further if non-deterministic elements are not repeated,1,1,1,1,-1,-1,-1,-1
// Do not eliminate predicates contain non-deterministic value// (a || b) && a should be kept same if a is non-deterministic.// TODO We can eliminate (a || b) && a if a is deterministic even b is not.,1,1,1,1,-1,-1,-1,-1
"// Explicitly limit the following functions for WindowNode.// TODO: Once the arguments in CallExpression are pure RowExpressions, move the method to VariablesExtractor",1,1,1,1,-1,-1,-1,-1
"// FIXME make sure there's a proper toString,// like with(propName)\n\tfilter(isEmpty)// or with(propName) map(isEmpty) equalTo(true)",1,1,0,1,-1,-1,-1,-1
// FileSystemFactory is used to hack around the abuse of Configuration as a// cache for FileSystem. See FileSystemFactory class for more details.//// It is caller's responsibility to create a copy if FileSystemFactory is used.,1,1,1,1,-1,-1,-1,-1
// Find the intersection of predicates across all sources// TODO: use a more precise way to determine overlapping conjuncts (e.g. commutative predicates),1,1,1,1,-1,-1,-1,-1
"// For HiveBasicStatistics, we only overwrite the original statistics if the new one is not empty.// For HiveColumnStatistics, we always overwrite every statistics.// TODO: Collect file count, on-disk size and in-memory size during ANALYZE",1,1,1,1,-1,-1,-1,-1
"// For a plan like this, if the fragment participates in grouped execution,// the LookupOuterOperator corresponding to the RJoin will not work execute properly.//// * The operator has to execute as not-grouped because it can only look at the ""used"" flags in// join build after all probe has finished.// * The operator has to execute as grouped the subsequent LJoin expects that incoming// operators are grouped. Otherwise, the LJoin won't be able to throw out the build side// for each group as soon as the group completes.//// LJoin// /   \// RJoin   Scan// /   \// Scan Remote//// TODO:// The RJoin can still execute as grouped if there is no subsequent operator that depends// on the RJoin being executed in a grouped manner. However, this is not currently implemented.// Support for this scenario is already implemented in the execution side.",1,1,0,1,-1,-1,-1,-1
// For now heuristically pick sort expression which has most search expressions assigned to it.// TODO: make it cost based decision based on symbol statistics,1,1,1,1,-1,-1,-1,-1
"// Generate states and serializers:// For value that is a Block or Slice, we store them as Block/position combination// to avoid generating long-living objects through getSlice or getBlock.// This can also help reducing cross-region reference in G1GC engine.// TODO: keys can have the same problem. But usually they are primitive types (given the nature of comparison).",1,1,1,1,-1,-1,-1,-1
"// Given base query's filter condition and materialized view's filter condition, the goal is to check if materialized view's// filters contain Base's filters (Base implies materialized view).// Let base query's filter condition be A, and materialized view's filter condition be B.// One way to evaluate A implies B is to evaluate logical expression A^~B and check if the output domain is none.// If the resulting domain is none, then A^~B is false. Thus A implies B.// For more information and examples: https://fb.quip.com/WwmxA40jLMxR// TODO: Implement method that utilizes external SAT solver libraries. https://github.com/prestodb/presto/issues/16536",1,1,0,1,-1,-1,-1,-1
"// HACK WARNING!// This method does calculate difference between timezone offset on current date (session start)// and 1970-01-01 (same timezone). This is used to be able to avoid using fixed offset TZ for// places where TZ offset is explicitly accessed (namely AT TIME ZONE).// DateTimeFormatter does format specified instance in specified time zone calculating offset for// that time zone based on provided instance. As Presto TIME type is represented as millis since// 00:00.000 of some day UTC, we always use timezone offset that was valid on 1970-01-01.// Best effort without changing representation of TIME WITH TIME ZONE is to use offset of the timezone// based on session start time.// By adding this difference to instance that we would like to convert to other TZ, we can// get exact value of utcMillis for current session start time.// Silent assumption is made, that no changes in TZ offsets were done on 1970-01-01.",1,1,1,1,-1,-1,-1,-1
"// HACK!// The writePages() method is called in a separate thread pool and it's possible that// these spiller thread can run concurrently with the close() method.// Due to this race when the spiller thread is running, the driver thread:// 1. Can zero out the memory reservation even though the spiller thread physically holds onto that memory.// 2. Can close/delete the temp file(s) used for spilling, which doesn't have any visible side effects, but still not desirable.// To hack around the first issue we reserve the memory in the constructor and we release it in the close() method.// This means we start accounting for the memory before the spiller thread allocates it, and we release the memory reservation// before/after the spiller thread allocates that memory -- -- whether before or after depends on whether writePages() is in the// middle of execution when close() is called (note that this applies to both readPages() and writePages() methods).",1,1,1,1,-1,-1,-1,-1
// HACK// Certain operations like 0 / 0 or likeExpression may throw exceptions.// Wrap them in a FunctionCall that will throw the exception if the expression is actually executed,1,1,1,1,-1,-1,-1,-1
// HACK// Certain operations like 0 / 0 or likeExpression may throw exceptions.// Wrap them in a call that will throw the exception if the expression is actually executed,1,1,1,1,-1,-1,-1,-1
// HACK: we need to serialize VARBINARY in a format that can be embedded in an expression to be// able to encode it in the plan that gets sent to workers.// We do this by transforming the in-memory varbinary into a call to from_base64(<base64-encoded value>),1,1,1,1,-1,-1,-1,-1
"// Hack to allow Presto Admin to access the ""system"" catalog for retrieving server status.// todo Change userRegex from "".*"" to one particular user that Presto Admin will be restricted to run as",1,1,1,1,-1,-1,-1,-1
"// Hack to work around the metastore not being configured for S3 or other FS.// The metastore tries to validate the location when creating the// table, which fails without explicit configuration for file system.// We work around that by using a dummy location when creating the// table and update it here to the correct location.",1,1,1,1,-1,-1,-1,-1
"// However, those UTC millis are pointing to the correct UTC timestamp// Our TIME WITH TIME ZONE representation does use UTC 1970-01-01 representation// So we have to hack here in order to get valid representation// of TIME WITH TIME ZONE",1,1,1,1,-1,-1,-1,-1
"// If the WindowNode has pre-partitioned inputs, then it will not change the order of those inputs at output,// so we should just propagate those underlying local properties that guarantee the pre-partitioning.// TODO: come up with a more general form of this operation for other streaming operators",1,1,1,1,-1,-1,-1,-1
"// If there is only one operator, finish it// Some operators (LookupJoinOperator and HashBuildOperator) are broken and requires finish to be called continuously// TODO remove the second part of the if statement, when these operators are fixed// Note: finish should not be called on the natural source of the pipeline as this could cause the task to finish early",1,1,1,1,-1,-1,-1,-1
"// In a broadcast join, output buffers of the tasks in build source stage have to// hold onto all data produced before probe side task scheduling finishes,// even if the data is acknowledged by all known consumers. This is because// new consumers may be added until the probe side task scheduling finishes.//// As a result, the following line is necessary to prevent deadlock// due to neither build nor probe can make any progress.// The build side blocks due to a full output buffer.// In the meantime the probe side split cannot be consumed since// builder side hash table construction has not finished.//// TODO: When SourcePartitionedScheduler is used as a SourceScheduler, it shouldn't need to worry about// task scheduling and creation -- these are done by the StageScheduler.",1,1,0,1,-1,-1,-1,-1
// It is used in CostCalculator so currently we need to handle both Expression and RowExpression// TODO remove handling of Expression once all optimization rule uses RowExpression,1,1,1,1,-1,-1,-1,-1
// JDK-8 acquires the write lock unconditionally in computeIfAbsent// TODO: Remove this extra get call once Presto no longer supports JDK-8,1,1,1,1,-1,-1,-1,-1
// Jersey with jetty 9 requires at least one resource// todo add a dummy resource to airlift jaxrs in this case,1,1,1,1,-1,-1,-1,-1
"// Local exchanges are only created in AddLocalExchanges, at the end of optimization, and// local exchanges do not produce all global properties as represented by ActualProperties.// This is acceptable because AddLocalExchanges does not use global properties and is only// interested in the local properties.// However, for the purpose of validation, some global properties (single-node vs distributed)// are computed for local exchanges.// TODO: implement full properties for local exchanges",1,1,0,1,-1,-1,-1,-1
"// Lower case the struct field names.// Otherwise, Presto will refuse to write to columns whose struct type has field names containing upper case characters.// Users can't work around this by casting in their queries because Presto parser always lower case types.// TODO: This is a hack. Presto engine should be able to handle identifiers in a case insensitive way where necessary.",1,1,1,1,-1,-1,-1,-1
"// MAJOR HACK: if searchFunction is of shape `f(probe) > build_symbol` it is not fit for binary search below,// but it does not imply extra constraints on start position; so we just ignore it.// It does not break logic for `f(probe) < build_symbol` as the binary search below would return same value.// todo: Explicitly handle less-than and greater-than functions separately.",1,1,1,1,-1,-1,-1,-1
"// Negative test cases// TODO add more negative tests, i.e. operators that do not propagate keys like",1,1,1,1,-1,-1,-1,-1
// No need to create parent as we only have 2 levels of directory now// TODO: This may change based on metadata redesign,1,1,1,1,-1,-1,-1,-1
"// No source distributed child, we can use insert LOCAL exchange// TODO: if all children have the same partitioning, pass this partitioning to the parent// instead of ""arbitraryPartition"".",1,1,1,1,-1,-1,-1,-1
// OkHttp throws this after clearing the interrupt status// TODO: remove after updating to Okio 1.15.0+,1,1,1,1,-1,-1,-1,-1
"// Only verify names here as filter expression would contain type cast, which will be translated to an non-existent variable in// SqlToRowExpressionTranslator// TODO https://github.com/prestodb/presto/issues/12892",1,1,1,1,-1,-1,-1,-1
// Perform a naive single-pass traversal to try to rewrite non-compliant portions of the tree. Prefers to replace// larger subtrees over smaller subtrees// TODO: this rewrite can probably be made more sophisticated,1,1,1,1,-1,-1,-1,-1
"// Processing of dictionary failed, but we ignore the exception here// and force reprocessing of the whole block using the normal code.// The second pass may not fail due to filtering.// todo dictionary processing should be able to tolerate failures of unused elements",1,1,1,1,-1,-1,-1,-1
// Remove sort if the child is already sorted and in a single stream// TODO: extract to its own optimization after AddLocalExchanges once the// constraint optimization framework is in a better state to be extended,1,1,1,1,-1,-1,-1,-1
// Report memory usage but do not yield for memory.// This is specially used for spillable hash aggregation operator.// TODO: revisit this when spillable hash aggregation operator is turned on,1,1,1,1,-1,-1,-1,-1
"// Return a new future even if newDriverGroupReady has not finished.// Returning the same SettableFuture instance could lead to ListenableFuture retaining too many listener objects.// TODO: After initial scheduling, tasks would only be available after they finished at least one bucket.// This is not necessarily the case if the initial scheduling covered all buckets and// the available slots is not fully utilized (concurrentLifespansPerTask is large or infinite).// In this case if a task failed, the recovered driver groups have to wait for tasks to be available again after finishing at least one bucket,// even though by definition of concurrentLifespansPerTask they are already available.",1,1,1,1,-1,-1,-1,-1
"// Returns true without advancing to the next filter because this is a pre-check followed by a test on the value,// which will advance the state. TODO: We could advance the state on false and not advance on true. Consider the// case where testLength is the only filter on a list/map inside another. This would imply exposing advancing as a// separate operation.",1,1,1,1,-1,-1,-1,-1
// Some of DNF conversions on (A^~B) might not be successful due to exponential explosion of sub-expressions// TODO: Implement method that utilizes external SAT solver libraries. https://github.com/prestodb/presto/issues/16536,1,1,1,1,-1,-1,-1,-1
"// StripeStreamId is used as a cache key. Multiple StripeStreamId share the StripeId,// but they have unique streamId. Storing a reference to the StreamId double the// number of objects. On some installations, StreamId accounts to 8% of the objects// and all of that is from the Cache keys. Storing them in place though is hacky,// removes the 8% of the objects for faster GC and object overhead.// This is analogous to using primitive integer, instead of boxed Object Integer.// There are multiple StreamId for same StripeId, so expanding StripeId is unnecessary.",1,1,0,1,-1,-1,-1,-1
"// TODO #7122 assertQuery(chicago, ""SELECT TIME '3:04:05'"");// TODO #7122 assertQuery(kathmandu, ""SELECT TIME '3:04:05'"");",0,1,1,1,-1,-1,-1,-1
"// TODO #7122 assertQuery(chicago, ""SELECT TIMESTAMP '1960-01-22 3:04:05.123'"");// TODO #7122 assertQuery(kathmandu, ""SELECT TIMESTAMP '1960-01-22 3:04:05.123'"");",0,1,1,1,-1,-1,-1,-1
"// TODO #7122: line 1:8: '00:39:05' is not a valid time literal// checkRepresentation(""TIME '00:39:05'"", Types.TIME, (rs, column) -> {// ...// });",1,1,1,1,-1,-1,-1,-1
"// TODO #7122: line 1:8: '1970-01-01 00:14:15.123' is not a valid timestamp literal; the expected values will pro// checkRepresentation(""TIMESTAMP '1970-01-01 00:14:15.123'"", Types.TIMESTAMP, (rs, column) -> {// ...// });",1,1,1,1,-1,-1,-1,-1
"// TODO #7784// assertFails(// MUST_BE_AGGREGATE_OR_GROUP_BY,// ""line 1:34: Subquery uses '\""u.a\""' which must appear in GROUP BY clause"",// ""SELECT (SELECT apply(0, x -> x + u.a) from (values 1) x(a)) "" +// ""FROM t1 u GROUP BY b"");// name shadowing",1,1,1,1,-1,-1,-1,-1
// TODO - There is no reason why the row can't have a formatHint and it could be used// to set the charset here.,1,1,1,1,-1,-1,-1,-1
// TODO : Use thrift to serialize metadata objects instead of json serde on catalog server in the future// TODO : Add e2e tests for this class,1,1,1,1,-1,-1,-1,-1
"// TODO Following types are not supported now. We need to change null into the value after fixing it// blob, frozen<set<type>>, inet, list<type>, map<type,type>, set<type>, timeuuid, decimal, uuid, varint",1,1,1,1,-1,-1,-1,-1
"// TODO Following types are not supported now. We need to change null into the value after fixing it// blob, frozen<set<type>>, inet, list<type>, map<type,type>, set<type>, timeuuid, decimal, uuid, varint// timestamp can be inserted but the expected and actual values are not same",1,1,1,1,-1,-1,-1,-1
"// TODO Support LZO and LZ4 compression// When using airlift LZO or LZ4 compressor, decompressing page in reader throws exception.",1,1,1,1,-1,-1,-1,-1
"// TODO These tests hang (or take way too long).// testNestedBlock(createMapType(createMapType(createMapType(BIGINT, BIGINT), BIGINT), createMapType(BIGINT, BIGINT)));// testNestedBlock(createMapType(// createMapType(createMapType(createDecimalType(MAX_SHORT_PRECISION + 1), createDecimalType(MAX_SHORT_PRECISION + 1)), createDecimalType(MAX_SHORT_PRECISION + 1)),// createMapType(createDecimalType(MAX_SHORT_PRECISION + 1), createDecimalType(MAX_SHORT_PRECISION + 1))));// testNestedBlock(createMapType(createMapType(createMapType(INTEGER, INTEGER), INTEGER), createMapType(INTEGER, INTEGER)));// testNestedBlock(createMapType(createMapType(createMapType(SMALLINT, SMALLINT), SMALLINT), createMapType(SMALLINT, SMALLINT)));// testNestedBlock(createMapType(createMapType(createMapType(BOOLEAN, BOOLEAN), BOOLEAN), createMapType(BOOLEAN, BOOLEAN)));// testNestedBlock(createMapType(createMapType(createMapType(VARCHAR, VARCHAR), VARCHAR), createMapType(VARCHAR, VARCHAR)));",1,1,1,1,-1,-1,-1,-1
// TODO These tests hang (or take way too long).// testNestedBlock(new ArrayType(new ArrayType(new ArrayType(BIGINT))));// testNestedBlock(new ArrayType(new ArrayType(new ArrayType(createDecimalType(MAX_SHORT_PRECISION)))));// testNestedBlock(new ArrayType(new ArrayType(new ArrayType(createDecimalType(MAX_SHORT_PRECISION + 1)))));// testNestedBlock(new ArrayType(new ArrayType(new ArrayType(INTEGER))));// testNestedBlock(new ArrayType(new ArrayType(new ArrayType(SMALLINT))));// testNestedBlock(new ArrayType(new ArrayType(new ArrayType(BOOLEAN))));// testNestedBlock(new ArrayType(new ArrayType(new ArrayType(VARCHAR))));,1,1,1,1,-1,-1,-1,-1
// TODO Types.TIME_WITH_TIMEZONE// TODO Types.TIMESTAMP_WITH_TIMEZONE,0,1,1,1,-1,-1,-1,-1
// TODO Use residual. Right now there is no way to propagate residual to presto but at least we can// propagate it at split level so the parquet pushdown can leverage it.,1,1,1,1,-1,-1,-1,-1
"// TODO convert to a pattern that allows for a sequence of ProjectNode, instead// of a canned number, once the pattern system supports it.",1,1,1,1,-1,-1,-1,-1
"// TODO enabled when DECIMAL is default for literal:// assertOptimizedEquals(""case true "" +// ""when false then 1234567890.0987654321 "" +// ""when true then 3.3 "" +// ""end"",// ""CAST(3.3 AS DECIMAL(20,10))"");",1,1,1,1,-1,-1,-1,-1
"// TODO if the non-deterministic operation only appears in the only sub-predicates that has size >1, we can still expand it.// For example: a && b && c && (d || e) can still be expanded if d or e is non-deterministic.",1,1,0,1,-1,-1,-1,-1
// TODO implementation does not take into account overlapping of ranges for source and filtering source.// Basically it works as low and high values were the same for source and filteringSource and just looks at NDVs.,1,1,1,1,-1,-1,-1,-1
// TODO once the reserved pool is removed we can remove this method. We can also update// RemoteNodeMemory as we don't need to POST anything.,1,1,1,1,-1,-1,-1,-1
"// TODO remove this when double statistics are changed to correctly deal with NaNs// if either min, max, or sum is NaN, ignore the stat",1,1,1,1,-1,-1,-1,-1
// TODO replace this with a ModelFactory interface// static Model deserialize(byte[] data),1,1,1,1,-1,-1,-1,-1
// TODO results from array_agg() are not deterministic so we just compare cardinality for the time being// We can switch to array_sort() once it becomes available from velox,1,1,1,1,-1,-1,-1,-1
"// TODO reuse row object and use FieldSetters, like we do at the top level// Ideally, we'd use the same recursive structure starting from the top, but// this requires modeling row types in the same way we model table rows// (multiple blocks vs all fields packed in a single block)",1,1,1,1,-1,-1,-1,-1
// TODO revocable memory reservations can also leak and may need to be detected in the future// We are only concerned about the leaks in general pool.,1,1,1,1,-1,-1,-1,-1
"// TODO streamDescriptor may be missing some fields (due to schema evolution, e.g. add field?)// TODO fields in streamDescriptor may be out of order (due to schema evolution, e.g. remove field?)",1,1,1,1,-1,-1,-1,-1
"// TODO the function map should be updated, so that this cast can be removed// We have observed repeated compilation of MethodHandle that leads to full GCs.// We notice that flushing the following caches mitigate the problem.// We suspect that it is a JVM bug that is related to stale/corrupted profiling data associated// with generated classes and/or dynamically-created MethodHandles.// This might also mitigate problems like deoptimization storm or unintended interpreted execution.",1,1,1,1,-1,-1,-1,-1
"// TODO this needs a custom Option type to work , or NPEs will happen.// Optional does not allow null values.// assertNoMatch(pattern, new ProjectNode(null));",1,1,1,1,-1,-1,-1,-1
// TODO valueBlock.getRegion is really-really-really inefficient.// Options:// 1. Create a new type of ColumnarMap optimized for flat maps;// 2. Extend ColumnWriter to write block regions;// 3. Write entries in batches using block.getPositions() to make it more efficient// and keep memory consumption in check.,1,1,1,1,-1,-1,-1,-1
// TODO(spershin): Need to add use cases with non-numeric types when implemented.// We use filters to make queries deterministic.,1,1,1,1,-1,-1,-1,-1
"// TODO: ARBITRARY_DISTRIBUTION is something very weird.// TODO: It doesn't have partitioning function, and it is never set as a fragment partitioning.// TODO: We should consider removing ARBITRARY_DISTRIBUTION.",1,1,1,1,-1,-1,-1,-1
// TODO: Add multiple aggregation states support to aggregation framework to avoid// cartesian product of types for aggregation functions takes multiple parameters.// Deprecate this class once the support is added.,1,1,1,1,-1,-1,-1,-1
// TODO: Add support for more manifest versions// Verify the manifest version,1,1,1,1,-1,-1,-1,-1
"// TODO: Add support for translating a property on a single column to multiple columns// this is deliberately placed after the grouping columns, because preserving properties has a bigger perf impact",1,1,1,1,-1,-1,-1,-1
"// TODO: Add support for translating a property on a single column to multiple columns// when GroupIdNode is copying a single input grouping column into multiple output grouping columns (i.e. aliases), this is basically picking one arbitrarily",1,1,1,1,-1,-1,-1,-1
// TODO: Add test case for a sliced MapBlock// underlying key/value block is not compact,1,1,1,1,-1,-1,-1,-1
// TODO: Consider whether cpu limit math should be performed on softConcurrency or hardConcurrency// Linear penalty between soft and hard limit,1,1,1,1,-1,-1,-1,-1
// TODO: Enable NullifyingIterator once migrated to one task per JVM model// NullifyingIterator removes element from the list upon return// This allows GC to gradually reclaim memory// remoteSourcePageInputs.add(getNullifyingIterator(broadcastInput.value()));,1,1,1,1,-1,-1,-1,-1
// TODO: Enable this check once distributed UNION can handle both partitioned and single node sources at the same time// assertPlanIsFullyDistributed(plan);,1,1,1,1,-1,-1,-1,-1
// TODO: For future cases we may want to start tracing from client. Then continuation of tracing// will be needed instead of creating a new trace here.,1,1,1,1,-1,-1,-1,-1
"// TODO: Instead of having BigDecimal as an intermediate step,// an alternative way is to make currentTokenAsShortDecimal and currentTokenAsLongDecimal// directly return the Long or Slice representation of the cast result// by calling the corresponding cast-to-decimal function, similar to other JSON cast function.",1,1,1,1,-1,-1,-1,-1
// TODO: It is a known deficiency that some empty directory does not get cleaned up in S3.// We can not delete any of the directories here since we do not know who created them.,1,1,1,1,-1,-1,-1,-1
"// TODO: Once CAST function supports cachedInstanceFactory or directly write to BlockBuilder,// JsonToRowCast::toRow can use RowBlockBuilderAppender::append to parse JSON and append to the block builder.// Thus there will be single call to this method, so this method can be inlined.",1,1,1,1,-1,-1,-1,-1
// TODO: Originally the dictionary row group sizes were not included in memory accounting due// to a bug. Fixing the bug causes certain queries to OOM. When enabled this flag maintains the// previous behavior so previously working queries will not OOM. The OOMs caused due to the// additional memory accounting need to be fixed as well as the flag removed.,1,1,1,1,-1,-1,-1,-1
"// TODO: Properly support utilized column check. Currently, we prune whole columns, if they are not utilized.// We need to generalize it and exclude unutilized subfield references independently.",1,1,1,1,-1,-1,-1,-1
// TODO: Remove once minimum Java version is increased 11.0.10// https://www.oracle.com/java/technologies/tzdata-versions.html// http://mm.icann.org/pipermail/tz-announce/2020-October/000059.html,1,1,1,1,-1,-1,-1,-1
// TODO: Remove once minimum Java version is increased to 8u261 and 11.0.8// https://www.oracle.com/java/technologies/tzdata-versions.html,1,1,1,1,-1,-1,-1,-1
// TODO: Select the most compatible and efficient materialized view for query rewrite optimization https://github.com/prestodb/presto/issues/16431// TODO: Refactor query optimization code https://github.com/prestodb/presto/issues/16759,1,1,1,1,-1,-1,-1,-1
"// TODO: Support coercion of return type of lambda// Without coercion support for return type of lambda, the return type of lambda must be `varchar(x)` to avoid need for coercions.",1,1,1,1,-1,-1,-1,-1
"// TODO: This class might be useful to other Map functions (transform_key, cast map to map, map_concat, etc)// It is caller's responsibility to make the block data synchronized with the hash table",1,1,1,1,-1,-1,-1,-1
"// TODO: This could be broader. We can push down conjuncts if they are constant for all rows in a window partition.// The simplest way to guarantee this is if the conjuncts are deterministic functions of the partitioning variables.// This can leave out cases where they're both functions of some set of common expressions and the partitioning// function is injective, but that's a rare case. The majority of window nodes are expected to be partitioned by// pre-projected variables.",1,1,1,1,-1,-1,-1,-1
"// TODO: This is a big hack.// Since equals method is not implemented for ConnectorTableLayoutHandle in some connectors, comparing layout might cause iterative optimizer fail to converge.// Instead, for now we compare the existence of layout in table handles.// This works for now since the engine only pushdown filter to connector once during optimization.",1,1,1,1,-1,-1,-1,-1
// TODO: This is a bug in the RC text reader// RC file does not support complex type as key of a map,1,1,1,1,-1,-1,-1,-1
"// TODO: Under current implementation, one block can only hold INT_MAX many rows// which theoretically may not be enough to hold all rows from an ORC file.// At this point, rowsToDelete couldn't be empty",1,1,1,1,-1,-1,-1,-1
"// TODO: Use ConnectorPartitionHandle (instead of int) to represent individual buckets.// Currently, it's mixed. listPartitionHandles used CPartitionHandle whereas the other functions used int.",1,1,1,1,-1,-1,-1,-1
"// TODO: Use com.facebook.presto.sql.planner.iterative.rule.test.PlanBuilder#tableScan with required node/stream// partitioning to properly test aggregation, window function and join.",1,1,1,1,-1,-1,-1,-1
"// TODO: We decrypted data before filter projection. This could send unnecessary traffic to KMS. This so far not seen a problem in production.// In parquet-mr, it uses lazy decryption but that required to change ColumnChunkMetadata. We will improve it later.",1,1,1,1,-1,-1,-1,-1
"// TODO: We should leverage residual expression and convert that to TupleDomain.// The predicate here is used by readers for predicate push down at reader level,// so when we do not use residual expression, we are just wasting CPU cycles// on reader side evaluating a condition that we know will always be true.",1,1,1,1,-1,-1,-1,-1
"// TODO: With current implementation, a newly completed driver group won't trigger immediate HTTP response,// leading to a slight delay of approx 1 second, which is not a major issue for any query that are heavy weight enough// to justify group-by-group execution. In order to fix this, REST endpoint /v1/{task}/status will need change.",1,1,1,1,-1,-1,-1,-1
// TODO: add a cleanup process for leftover index tables// It is not possible to drop the index tables in a transaction.,1,1,1,1,-1,-1,-1,-1
"// TODO: add adaptations so these will pass// assertFunction(""test_block_position(null)"", UNKNOWN, null);// assertFalse(FunctionWithBlockAndPositionConvention.hitBlockPositionObject.get());",1,1,1,1,-1,-1,-1,-1
// TODO: add heuristic to jump to load strategy that is most likely to succeed// Try to load all the requests,1,1,1,1,-1,-1,-1,-1
// TODO: add test case for a sliced RowBlock// underlying field blocks are not compact,1,1,1,1,-1,-1,-1,-1
"// TODO: check that rendered plan is as expected, once stats are collected in a consistent way// assertTrue(value.contains(""Cost: ""), format(""Expected output to contain \""Cost: \"", but it is %s"", value));",1,1,1,1,-1,-1,-1,-1
// TODO: consider adding a formal final plan sanitization optimizer that prepares the plan for transmission/execution/logging// TODO: figure out how to improve the set flattening optimizer so that it can run at any point,1,1,1,1,-1,-1,-1,-1
// TODO: correctly determine if stream is parallelised// based on session properties,1,1,1,1,-1,-1,-1,-1
// TODO: decimal type might not support yet// TODO: this code is likely wrong and should switch to Decimals.readBigDecimal(),1,1,1,1,-1,-1,-1,-1
// TODO: disabled until https://github.com/prestodb/presto/issues/8926 is resolved// due to long running query test created many spill files on disk.,1,1,1,1,-1,-1,-1,-1
// TODO: drop special serialization code as soon as all clients// migrate to version which can deserialize new format.,1,1,1,1,-1,-1,-1,-1
// TODO: enable optimization related to lambda expression// A mechanism to convert function type back into lambda expression need to exist to enable optimization,1,1,1,1,-1,-1,-1,-1
"// TODO: enable optimization related to lambda expression// Currently, we are not able to determine if lambda is deterministic.// context is passed down as null here since lambda argument can only be resolved under the evaluation context.",1,1,1,1,-1,-1,-1,-1
"// TODO: enforce that sqlState is 01[5,6,7,8,9,I-Z][0-9A-Z]{3}// From the SQL Standard ISO_IEC_9075-2E_2016 24.1 SQLState: warning codes have class 01// warning subclasses defined in the sql state will start with [0-4A-H] and contain 3 characters// An example of vendor specific warning codes can be found here:// https://www.ibm.com/support/knowledgecenter/en/SSEPEK_10.0.0/codes/src/tpc/db2z_sqlstatevalues.html#db2z_sqlstatevalues__code01// Note that the subclass begins with 5 which indicates it is an implementation defined subclass",1,1,1,1,-1,-1,-1,-1
"// TODO: extract candidate names from SELECT, WHERE, HAVING, GROUP BY and ORDER BY expressions// to pass down to analyzeFrom",1,1,1,1,-1,-1,-1,-1
// TODO: figure out a better way to do this// grab the update count for non-queries,1,1,1,1,-1,-1,-1,-1
"// TODO: figure out a type-agnostic way of dealing with this. Maybe add a special unary operator// that types can chose to implement, or piggyback on the existence of the negation operator",1,1,1,1,-1,-1,-1,-1
"// TODO: hack because there could be ""type only"" coercions (which aren't necessarily included as implicit casts),// so do a second pass allowing ""type only"" coercions",1,1,1,1,-1,-1,-1,-1
"// TODO: if input is grouped, create streaming join// index side is really a nested-loops plan, so don't add exchanges",1,1,1,1,-1,-1,-1,-1
"// TODO: in case of grouping sets, we should be able to push the filters over grouping keys below the aggregation// and also preserve the filter above the aggregation if it has an empty grouping set",1,1,1,1,-1,-1,-1,-1
"// TODO: investigate alternative split discovery strategies when this error is hit.// This limit should never be hit given there is a limit of maxOutstandingSplits.// If it's hit, it means individual splits are huge.",1,1,1,1,-1,-1,-1,-1
"// TODO: migrate docker containers to a newer JVM, then re-enable it// verifyJvmRequirements();",1,1,1,1,-1,-1,-1,-1
// TODO: move this before optimization if possible!!// Replace all expressions with row expressions,1,1,1,1,-1,-1,-1,-1
// TODO: properly handle the failed vs closed state// it is important not to treat failures as a successful close,1,1,1,1,-1,-1,-1,-1
"// TODO: re-enable this check once we fix the type coercions in the optimizers// checkArgument(leftType.equals(rightType), ""left and right type do not match in comparison expression (%s)"", comparison);",1,1,1,1,-1,-1,-1,-1
// TODO: refactor the entire LocationFactory interfaces to completely replace URI with more efficient/expressive data structures// location format: thrift://{ipAddress}:{thriftPort}/v1/task/{taskId}/results/{bufferId}/,1,1,1,1,-1,-1,-1,-1
// TODO: refactor this method into ExchangeNode#partitionedExchange once// materialized exchange is supported for all nodes.,1,1,1,1,-1,-1,-1,-1
"// TODO: reimplement this check? Currently ""varchar(Integer.MAX_VALUE)"" fails with ""varchar""// checkState(instantiatedType.equalsSignature(signature), ""Instantiated parametric type name (%s) does not match expected name (%s)"", instantiatedType, signature);",1,1,1,1,-1,-1,-1,-1
"// TODO: remove Once Joda version supports this Timezone.// JDK supported this timezone, but not Joda and was resulting in the test failure.// https://www.joda.org/joda-time/timezones.html",1,1,1,1,-1,-1,-1,-1
// TODO: remove Once this recently renamed Timezone is supported.// Europe/Kiev was renamed to Europe/Kyiv.// https://www.oracle.com/java/technologies/tzdata-versions.html// Likely need to wait for Joda to supported this renamed timezone.// https://www.joda.org/joda-time/timezones.html,1,1,1,1,-1,-1,-1,-1
"// TODO: remove angle brackets support once ROW<TYPE>(name) will be dropped// Angle brackets here are checked not for the support of ARRAY<> and MAP<>// but to correctly parse ARRAY(row<BIGINT, BIGINT>('a','b'))",1,1,1,1,-1,-1,-1,-1
"// TODO: remove once minimum Java version is increased to 8u161 and 9.0.4, see PrestoSystemRequirement.// Removed from tzdata since 2017c.// Java updated to 2017c since 8u161, 9.0.4.// All Java 10+ are on later versions",1,1,1,1,-1,-1,-1,-1
// TODO: remove the table type change after Hive 3.0 update.// Materialized view fetched from Hive Metastore uses TableType.MANAGED_TABLE before Hive 3.0. Cast it back to MATERIALIZED_VIEW here.,1,1,1,1,-1,-1,-1,-1
// TODO: remove the table type change after Hive 3.0 upgrade.// TableType.MATERIALIZED_VIEW is not supported by Hive metastore until Hive 3.0. Use MANAGED_TABLE for now.,1,1,1,1,-1,-1,-1,-1
"// TODO: replace arguments with RowExpression once we introduce subquery expression for RowExpression (#12745).// Wrap all arguments in CallExpression to be RawExpression.// The utility that work on the CallExpression should be aware of the RawExpression handling.// The interface will be dirty until we introduce subquery expression for RowExpression.// With subqueries, the translation from Expression to RowExpression can happen here.",1,1,1,1,-1,-1,-1,-1
"// TODO: split this method into two: createPartitionedDriverRunner and createUnpartitionedDriverRunner.// The former will take two arguments, and the latter will take one. This will simplify the signature quite a bit.",1,1,1,1,-1,-1,-1,-1
// TODO: temporary kill switch until we're confident the new error handling logic is// solid. Placed here for convenience and to avoid creating a new set of throwaway config objects// and because the parser is instantiated in the module that wires up the server (ServerMainModule),1,1,1,1,-1,-1,-1,-1
"// TODO: this is a hack, because we apply coercions to the output of expressions, rather than the arguments to expressions.// Therefore we can end up with this implicit cast, and have to move it into a post-projection",1,1,1,1,-1,-1,-1,-1
"// TODO: this metastore should not have global cache// As a temporary workaround, always disable cache on the workers",1,1,1,1,-1,-1,-1,-1
"// TODO: this might fail (even though we have just released memory), but we don't// have a proper way to atomically convert memory reservations",1,1,1,1,-1,-1,-1,-1
// TODO: this only works for hard file affinity; but good for a prototype// TODO: need to handle race condition on all workers// TODO: Staging dir and storage dir are the same in this StorageService implementation,1,1,1,1,-1,-1,-1,-1
"// TODO: this will technically cause an NPE in httpClient, but it's not triggered because// we never call get() on the response future. This behavior needs to be fixed in airlift",1,1,1,1,-1,-1,-1,-1
"// TODO: uncomment when https://github.com/facebook/presto/issues/4571 is fixed// assertNumericOverflow(format(""%s * -1"", Long.MAX_VALUE), ""bigint multiplication overflow: 9223372036854775807 * -1"");",1,1,1,1,-1,-1,-1,-1
"// TODO: update in the interface after the new memory tracking framework is landed (#9049)// Essentially we would love to have clean interfaces to support both pushing and pulling memory usage// The following implementation is a hybrid model, where the push model is going to call the pull model causing reentrancy",1,1,1,1,-1,-1,-1,-1
"// TODO: update in the interface after the new memory tracking framework is landed// Essentially we would love to have clean interfaces to support both pushing and pulling memory usage// The following implementation is a hybrid model, where the push model is going to call the pull model causing reentrancy",1,1,1,1,-1,-1,-1,-1
"// TODO: we could skip memory reservation for hashAggregationBuilder.getGroupIdsSortingSize()// if before building result from hashAggregationBuilder we would convert it to ""read only"" version.// Read only version of GroupByHash from hashAggregationBuilder could be compacted by dropping// most of it's field, freeing up some memory that could be used for sorting.",1,1,1,1,-1,-1,-1,-1
"// TODO: we need to reason about how pre-computed hashes from child relate to distinct variables. We should be able to include any precomputed hash// that's functionally dependent on the distinct field in the set of distinct fields of the new node to be able to propagate it downstream.// Currently, such precomputed hashes will be dropped by this operation.",1,1,1,1,-1,-1,-1,-1
"// TODO: when correlations list empty this should return immediately. However this isn't correct// right now, because for nested subqueries correlation list is empty while there might exists usages// of the outer most correlated symbols",1,1,1,1,-1,-1,-1,-1
"// TODO: when tests are run on a non-UTC time zone machine, this breaks.// assertFunctionString(""timestamp '2333-02-23 23:59:59.999'"", TimestampType.TIMESTAMP, ""2333-02-23 23:59:59.999"");// SqlTimestampWithTimeZone",1,1,1,1,-1,-1,-1,-1
"// TODO:// We want to use a symbol resolver that looks up in the constants from the input subplan// to take advantage of constant-folding for complex expressions// However, that currently causes errors when those expressions operate on arrays or row types// (""ROW comparison not supported for fields with null elements"", etc)",1,1,1,1,-1,-1,-1,-1
// Test whether waitTime is being considered while computing timeouts.// Expected run time for this query is ~30s. We will set `dummyServiceWaitTime` as 600s.// The timeout logic will set the timeout for the query as 605s (Actual timeout + waitTime)// and the query should succeed. This is a bit hacky way to check whether service waitTime// is added to the deadline time while submitting jobs,1,1,1,1,-1,-1,-1,-1
"// This is a hack for performance reasons.// Type.equalTo takes two pairs of Block+position.// On the other hand, NOT_DISTINCT_FROM is an operator. It takes two Slices.// As a result, two Slices must be constructed for each invocation, which has a nontrivial cost.// For these types, their equal semantics is known to be the same as not-distinct-from except for null values.//// The plan is to allow scalar function to optionally provide an additional implementation using Block+position calling convention.// At that point, we'll be able to fully deprecate Type.equalTo (and friends) and remove this hack.",1,1,1,1,-1,-1,-1,-1
// This is currently a blacklist.// TODO: make it a whitelist (a failure-detecting service selector) and maybe build in support for injecting this in airlift,1,1,1,1,-1,-1,-1,-1
"// This is done in tests rather than as a requirement, because TableRequirements.immutableTable cannot be partitioned// and mutable table is recreated before every test (and this takes a lot of time).// TODO convert to immutableTable + TableDefinition once immutableTable supports partitioned tables",1,1,1,1,-1,-1,-1,-1
// This is hack that we need to use as the timezone interpretation depends on date (not only on time)// TODO remove REFERENCE_TIMESTAMP_UTC when removing support for political time zones in TIME WIT TIME ZONE,1,1,1,1,-1,-1,-1,-1
"// This method bypasses transaction interface because this method is inherently hacky and doesn't work well with the transaction abstraction.// Additionally, this method is not part of a test. Its purpose is to set up an environment for another test.",1,1,1,1,-1,-1,-1,-1
"// This needs to be Locale-independent, Java Time's DateTimeFormatter compatible and should never change, as it defines the external API data format.// TODO when support for political time zones is removed, change the pattern to ""HH:mm:ss.SSS XXX"" and reuse in TestingPrestoClient",1,1,1,1,-1,-1,-1,-1
// This needs to match the hash function for VARBINARY blocks// (i.e. AbstractVariableWidthBlock.hash(...))// TODO: we need to get rid of hash from Block and rely on HASH_CODE operators only,1,1,1,1,-1,-1,-1,-1
"// This test is overridden due to Function ""UUID"" not found errors// Some test cases from the base class are removed// TODO some test cases from overridden method succeed to create table, but with wrong number or rows.",1,1,1,1,-1,-1,-1,-1
"// To compile lambda, LambdaDefinitionExpression needs to be generated from LambdaExpression,// which requires the types of all sub-expressions.//// In project and filter expression compilation, ExpressionAnalyzer.getExpressionTypesFromInput// is used to generate the types of all sub-expressions. (see visitScanFilterAndProject and visitFilter)//// This does not work here since the function call representation in final aggregation node// is currently a hack: it takes intermediate type as input, and may not be a valid// function call in Presto.//// TODO: Once the final aggregation function call representation is fixed,// the same mechanism in project and filter expression should be used here.",1,1,1,1,-1,-1,-1,-1
"// Todo: 1) The stream.slice() in both MultiBufferInputStream and SingleBufferInputStream will clone the memory.// Need to check how much the memory consumption goes up. Since we skip reading pages, that would reduce// a lot of memory consumption and compensate.// 2) It adds exception IOException. It is OK because eventually it rewinds to readAllPages() which// already has IOException",1,1,1,1,-1,-1,-1,-1
"// Update the taskInfo with the new taskStatus.// Generally, we send a cleanup request to the worker, and update the TaskInfo on// the coordinator based on what we fetched from the worker. If we somehow cannot// get the cleanup request to the worker, the TaskInfo that we fetch for the worker// likely will not say the task is done however many times we try. In this case,// we have to set the local query info directly so that we stop trying to fetch// updated TaskInfo from the worker. This way, the task on the worker eventually// expires due to lack of activity.// This is required because the query state machine depends on TaskInfo (instead of task status)// to transition its own state.// TODO: Update the query state machine and stage state machine to depend on TaskStatus instead// Since this TaskInfo is updated in the client the ""complete"" flag will not be set,// indicating that the stats may not reflect the final stats on the worker.",1,1,0,1,-1,-1,-1,-1
// Use Object type to let interpreters consume the result// TODO: use RowExpression once the Expression-to-RowExpression is done,1,1,1,1,-1,-1,-1,-1
// Use only 0.75 of the maxResponseSize to leave room for additional bytes from the encoding// TODO figure out a better way to compute the size of data that will be transferred over the network,1,1,1,1,-1,-1,-1,-1
// Used during predicate refinement over multiple passes of predicate pushdown// TODO: think about how to get rid of this in new planner// TODO: these two fields will not be effective if they are created by connectors until we have refactored PickTableLayout,1,1,1,1,-1,-1,-1,-1
"// We always compact the dictionary before we send it. However, dictionaryBlock comes from sliceInput, which may over-retain memory.// As a result, setting dictionaryIsCompacted to true is not appropriate here.// TODO: fix DictionaryBlock so that dictionaryIsCompacted can be set to true when the underlying block over-retains memory.",1,1,1,1,-1,-1,-1,-1
"// We can use filter from base query WHERE clause to consider only relevant partitions when getting// materialized view status// TODO: Collect predicates in outer queries and apply the union to this criteria. i.e. in// SELECT x FROM (SELECT x FROM tbl WHERE y < 20) WHERE y > 5 where y is a partition key,// right now we would only remove partitions y >= 20. We should eventually consider y <= 5 as well.",1,1,1,1,-1,-1,-1,-1
// We only use the variable name to find the reference in layout because SqlToRowExpression translator might optimize type cast// to a variable with the same name as in layout but with a different type.// TODO https://github.com/prestodb/presto/issues/12892,1,1,1,1,-1,-1,-1,-1
"// When the probe side of join is bucketed but builder side is not,// bucket to partition mapping has to be populated to builder side remote fragment.// NodePartitionMap is required in this case and cannot be simply replaced by BucketNodeMap.//// Join// /  \// Scan  Remote//// TODO: Investigate if we can use FixedBucketNodeMap and a node to taskId map to replace NodePartitionMap// in the above case, as the co-existence of BucketNodeMap and NodePartitionMap is confusing.",1,1,1,1,-1,-1,-1,-1
// Write of complex hive data to Parquet is broken// TODO: empty arrays or maps with null keys don't seem to work// Parquet does not support DATE,1,1,1,1,-1,-1,-1,-1
"// aggregation operator synthesizes outputs for group ids corresponding to the global grouping set (i.e., ()), so we// need to preserve any predicates that evaluate the group id to run after the aggregation// TODO: we should be able to infer if conditions on grouping() correspond to global grouping sets to determine whether// we need to do this for each specific case",1,1,1,1,-1,-1,-1,-1
"// aggregation with having// TODO: uncomment below test once #8456 is fixed// assertQuery(""SELECT (SELECT avg(totalprice) FROM orders GROUP BY custkey, orderdate HAVING avg(totalprice) < a) FROM (VALUES 900) t(a)"");// correlation in predicate",1,1,1,1,-1,-1,-1,-1
// configs// TODO: decouple configuration properties that don't make sense on Spark,1,1,1,1,-1,-1,-1,-1
// create equality inference on available variables// TODO: make generateEqualitiesPartitionedBy take left and right scope,1,1,1,1,-1,-1,-1,-1
"// do not prune nested joins output since it is not supported// TODO: remove this ""if"" branch when output symbols selection is supported by nested loop join",1,1,1,1,-1,-1,-1,-1
// expressionInterpreter/optimizer only understands a subset of expression types// TODO: remove this when the new expression tree is implemented,1,1,1,1,-1,-1,-1,-1
"// for each connector, retrieve the set of subplans to optimize// TODO: what if a new connector is added by an existing one// There are cases (e.g., query federation) where a connector C1 needs to// create a UNION_ALL to federate data sources from both C1 and C2 (regardless of the classloader issue).// For such case, it is dangerous to re-calculate the ""max closure"" given the fixpoint property will be broken.// In order to preserve the fixpoint, we will ""pretend"" the newly added C2 table scan is part of C1's job to maintain.",1,1,1,1,-1,-1,-1,-1
// format string below is a hack to construct a vendor specific SQLState value// 01 is the class of warning code and 5 is the first allowed vendor defined prefix character// See the SQL Standard ISO_IEC_9075-2E_2016 24.1: SQLState for more information,1,1,1,1,-1,-1,-1,-1
"// if we do not have any equi conjunct we do not pushdown non-equality condition into// inner join, so we plan execution as nested-loops-join followed by filter instead// hash join.// todo: remove the code when we have support for filter function in nested loop join",1,1,1,1,-1,-1,-1,-1
// load zone file// todo parse file by hand since Properties ignores duplicate entries,1,1,0,1,-1,-1,-1,-1
// network topology// TODO: move to CoordinatorModule when NodeScheduler is moved,1,1,1,1,-1,-1,-1,-1
// node scheduler// TODO: remove from NodePartitioningManager and move to CoordinatorModule,1,1,1,1,-1,-1,-1,-1
// parent does not have preference or prefers some partitioning without any explicit partitioning - just use// children partitioning and don't GATHER partitioned inputs// TODO: add FIXED_ARBITRARY_DISTRIBUTION support on non empty singleNodeChildren,1,1,1,1,-1,-1,-1,-1
// second vint is length// todo get rid of BigInteger,1,1,1,1,-1,-1,-1,-1
// session property can not force validation when sampling is enabled// todo change this if session properties support null,1,1,1,1,-1,-1,-1,-1
"// since this is a right join, none of the matched output rows will contain nulls// in the left partitioning columns, and all of the unmatched rows will have// null for all left columns.  therefore, the output is still partitioned on the// left columns.  the only change is there will be at least two streams so the// output is multiple// There is one exception to this.  If the left is partitioned on empty set, we// we can't say that the output is partitioned on empty set, but we can say that// it is partitioned on the left join symbols// todo do something smarter after https://github.com/prestodb/presto/pull/5877 is merged",1,1,0,1,-1,-1,-1,-1
"// single-step aggregation w/ empty grouping sets in a partitioned stage, so we need a partial that will produce// the default intermediates for the empty grouping set that will be routed to the appropriate final aggregation.// TODO: technically, AddExchanges generates a broken plan that this rule ""fixes""",1,1,1,1,-1,-1,-1,-1
// spill since revocable memory could not be converted to user memory immediately// TODO: this should be asynchronous,1,1,1,1,-1,-1,-1,-1
"// this call is remote, add another level of projection// TODO if all arguments are input reference or constant (maybe variable reference?) we could skip a projection",1,1,1,1,-1,-1,-1,-1
// this file was written with Apache ORC// TODO: use Apache ORC library in OrcTester,1,1,1,1,-1,-1,-1,-1
// this is hack!!!. Ideally we want to clone the scan pipeline and create/update the filter in the scan pipeline to contain this filter and// at the same time add the time column to scan so that the query generator doesn't fail when it looks up the time column in scan output columns,1,1,1,1,-1,-1,-1,-1
// this supplier is thread-safe. TODO: this logic should probably move to the scheduler since the choice of which node to run in should be// done as close to when the split is about to be scheduled,1,1,1,1,-1,-1,-1,-1
// todo check transaction id roll back// todo shard change roll back,0,1,1,1,-1,-1,-1,-1
"// todo compiled implementation of lookup join does not support when we are joining with empty join channels.// This code path will trigger only for OUTER joins. To fix that we need to add support for// OUTER joins into NestedLoopsJoin and remove ""type == INNER"" condition in LocalExecutionPlanner.visitJoin()",1,1,1,1,-1,-1,-1,-1
"// todo enable when null output type is supported// assertExecute(""null"", null);",1,1,1,1,-1,-1,-1,-1
"// todo enable when null output type is supported// assertFilter(""null"", false);",1,1,1,1,-1,-1,-1,-1
"// todo enable when null output type is supported// unrolledValues.add(ImmutableSet.of(""null"", ""cast(null as "" + type + "")""));",1,1,1,1,-1,-1,-1,-1
// todo eventually add some notion of statistic reliability// Skipping for now as there hard to compute it properly and so far we do not have// usecase for that.,1,1,1,1,-1,-1,-1,-1
"// todo find a better algorithm for this// find the first task that produces a split, then move that task to the// end of the task list, so we get round robin",1,1,1,1,-1,-1,-1,-1
"// todo reenable when cast as timestamp with time zone is implemented// todo add bound timestamp with time zone// assertOptimizedEquals(""extract (TIMEZONE_HOUR from bound_timestamp)"", ""0"");// assertOptimizedEquals(""extract (TIMEZONE_MINUTE from bound_timestamp)"", ""0"");",1,1,1,1,-1,-1,-1,-1
"// todo rewrite MockRemoteTask to fire a tate transition when splits are cleared, and then validate blocked future completes// drop the 20 splits from one node",1,1,1,1,-1,-1,-1,-1
// todo rewrite without BigInteger// This comes from the Apache Hive ORC code,1,1,1,1,-1,-1,-1,-1
"// value is some random type (say regex), so we just randomly choose a greater value// todo: support all known type",1,1,1,1,-1,-1,-1,-1
// verify that all column names are specified and unique// TODO: collect errors and return them all at once,1,1,1,1,-1,-1,-1,-1
// verify the file types match the input type// todo adapt input types to the file types as Hive does,1,1,1,1,-1,-1,-1,-1
"// worst case is every bucket has a unique value, so preemptively keep this large enough to have a value for ever bucket// TODO: could optimize the growth algorithm to be resize this only when necessary; this wastes memory but guarantees that if every value has a distinct hash, we have space",1,1,1,1,-1,-1,-1,-1
// write nulls into probe columns// todo use RLE blocks,1,1,1,1,-1,-1,-1,-1
//// TODO: your code should also have tests for all types that you support and for the state machine of your cursor////// Start http server for testing//,1,1,1,1,-1,-1,-1,-1
"//// This code was copied from PrestoServer, and is a hack that should be removed when the connectorId property is removed//// get existing announcement",1,1,1,1,-1,-1,-1,-1
"/*                             * When the native binary is being built with a docker container, because a volume is created,                             * we need to copy the trustStore file into the output directory (which is the root of volume)                             * and change the value of 'javax.net.ssl.trustStore' property to point to this value                             *                             * TODO: we might want to introduce a dedicated property in order to overcome this ugliness                             */",1,1,1,1,-1,-1,-1,-1
"/*                         * TODO GenerateCodeMojo would fail                         * if (hasSources(project)) {                         * throw new MojoExecutionException(""Project "" + project.getArtifact() + "" has not been compiled yet"");                         * }                         */",1,1,1,1,-1,-1,-1,-1
/*             * TODO: this serves fine for most purposes but a full-blown solution will need a proper parser             */,1,1,1,1,-1,-1,-1,-1
"/*         * <em>Ugly Hack</em>         * In dev mode, we pass a classloader to load the up to date OpenAPI document.         * This hack is required because using the TCCL would get an outdated version - the initial one.         * This is because the worker thread on which the handler is called captures the TCCL at creation time         * and does not allow updating it.         *         * This classloader must ONLY be used to load the OpenAPI document.         *         * In non dev mode, the TCCL is used.         */",1,1,1,1,-1,-1,-1,-1
"/*         * <em>Ugly Hack</em>         * In dev mode, we pass a classloader to use in the CDI Loader.         * This hack is required because using the TCCL would get an outdated version - the initial one.         * This is because the worker thread on which the handler is called captures the TCCL at creation time         * and does not allow updating it.         *         * In non dev mode, the TCCL is used.         */",1,1,1,1,-1,-1,-1,-1
"/*         * There are some files like META-INF/microprofile-config.properties that usually don't exist in application         * and yet are always looked up (spec compliance...) and due to the location in the jar,         * the RunnerClassLoader needs to look into every jar to determine whether they exist or not.         * In keeping true to the original design of the RunnerClassLoader which indexes the directory structure,         * we just add a fail-fast path for files we know don't exist.         *         * TODO: if this gets more complex, we'll probably want a build item to carry this information instead of hard         * coding it here         */",1,1,0,1,-1,-1,-1,-1
"/*     * <em>Ugly Hack</em>     * In Quarkus dev mode, we receive a classloader to use, when doing hot reload     * This hack is required because using the TCCL would get an outdated version - the initial one.     * This is because the worker thread on which the handler is called captures the TCCL at creation time     * and does not allow updating it.     *     * In non dev mode, the TCCL is used.     *     * TODO: remove this once the vert.x class loader issues are resolved.     */",1,1,1,1,-1,-1,-1,-1
"/*     * <em>Ugly Hack</em>     * In dev mode, we receive a classloader to load the up to date OpenAPI document.     * This hack is required because using the TCCL would get an outdated version - the initial one.     * This is because the worker thread on which the handler is called captures the TCCL at creation time     * and does not allow updating it.     *     * This classloader must ONLY be used to load the OpenAPI document.     *     * In non dev mode, the TCCL is used.     *     * TODO: remove this once the vert.x class loader issues are resolved.     */",1,1,1,1,-1,-1,-1,-1
"/*     * FIXME: should consider compaction strategy, when our new offset not necessary = old + total records read, but some     * records might be deleted, so we'll end up seeing duplicates on some pages.     * Imagine this case:     * - page size = 10     * - 30 messages pushed, value is incremental 1 ... 30.     * - message 10 gets removed, as message 15 has same key because of compaction     * - we request page 1. it had offset 0. we return values [1, 2, 3, ..., 9, 11], total of 10. We get new offset for page 2 =     * 0 + totalRecords = 10.     * - we request page 2. we read starting from offset = 10. There is no message with that offset, but we see message 11 again     * instead.     */",1,1,1,1,-1,-1,-1,-1
"/** * @author <a href=""mailto:bill@burkecentral.com"">Bill Burke</a> * @version $Revision: 1 $ * *          TODO: Reevaluate this as it depends on a lot of reflection for reading Java types. *          It should not be difficult to write handlers for these cases... */",1,1,1,1,-1,-1,-1,-1
"/** * A bit of a hack, but currently there is no other way to do this. * * This allows for exceptions to be formatted to be bold/underlined in the console if they * are part of the user application, which makes it much easier to see the interesting * parts of large stack traces */",1,1,1,1,-1,-1,-1,-1
"/** * A class that manages persistent logins. * This is done by encoding an expiry time, and the current username into an encrypted cookie * TODO: make this pluggable */",1,1,1,1,-1,-1,-1,-1
/** * A representation of a server side media type. * * TODO: This belongs in the server module but needs to be untangled from ResourceWriter (in a way that doesn't hurt * performance) to make that happen */,1,1,1,1,-1,-1,-1,-1
"/** * A utility class that can convert a String value as a typed object. * * @author <a href=""ryan@damnhandy.com"">Ryan J. McDonough</a> * @version $Revision: $ * *          TODO: Do we really need this? */",1,1,1,1,-1,-1,-1,-1
"/** * A yucky hack, basically attempt to make sure every thread in the common pool has * the correct CL. * * It's not perfect, but as this only affects test and dev mode and not production it is better * than nothing. * * Really we should just not use the common pool at all. */",1,1,1,1,-1,-1,-1,-1
/** * Add the class to the reflective list with full method and field access. * Add the superclasses recursively as well as the interfaces. * Un-indexed classes/interfaces are accumulated to be thrown as a configuration error in the top level caller method * <p> * TODO should we also return the return types of all methods and fields? It could contain Enums for example. */,1,1,1,1,-1,-1,-1,-1
"/** * Also return the raw geohash-encoded sorted set score of the item, in the form of a 52 bit unsigned integer. * This is only useful for low level hacks or debugging and is otherwise of little interest for the general user. * * @return the current {@code GeoRadiusArgs} */",1,1,1,1,-1,-1,-1,-1
"/** * Also return the raw geohash-encoded sorted set score of the item, in the form of a 52 bit unsigned integer. * This is only useful for low level hacks or debugging and is otherwise of little interest for the general user. * * @return the current {@code GeoRadiusStoreArgs} */",1,1,1,1,-1,-1,-1,-1
/** * ClassLoader hack to work around reactive streams API issue * see https://github.com/eclipse/microprofile-open-api/pull/470 * <p> * This must be deleted when it is fixed upstream */,1,1,1,1,-1,-1,-1,-1
/** * ClassLoader hack to work around reactive streams API issue * see https://github.com/eclipse/microprofile-reactive-streams-operators/pull/130 * * This must be deleted when Reactive Streams Operators 1.1 is merged */,1,1,1,1,-1,-1,-1,-1
"/** * Empty relativePath is a hack sometimes used to always resolve parent from repository and skip default ""../"" lookup */",1,1,1,1,-1,-1,-1,-1
"/** * Extensions are optional JSON blobs that can be used during registration or authentication that can enhance the * user experience. Extensions are defined in * <a href=""https://www.w3.org/TR/webauthn/#sctn-extensions"">https://www.w3.org/TR/webauthn/#sctn-extensions</a>. * * TODO: don't enable this yet and with upcoming Leve3 version vert.x may break this config * see https://github.com/vert-x3/vertx-auth/issues/535 */",1,1,1,1,-1,-1,-1,-1
"/** * HUGE HACK * <p> * config is driven from the outer dev mode startup, if the user modified test * related config in application.properties it will cause a re-test, but the * values will not be applied until a dev mode restart happens. * <p> * We also can't apply this as part of the test startup, as it is too * late and the filters have already been resolved. * <p> * We manually check for application.properties changes and apply them. */",0,1,1,1,-1,-1,-1,-1
"/** * Handler that reads data and sets up the input stream * <p> * By default this will attempt to buffer and use a fully in memory stream, * to allow the request to stay on the IO thread. If the request is too large * it will be delegated to an executor and a blocking stream used instead. * <p> * TODO: the stream implementation here could be a lot more efficient. */",1,1,0,1,-1,-1,-1,-1
"/** * Handler that works around issues with rewrites() and undertow-handlers.conf. * <p> * Because the rewrite happens after the initial dispatch this handler detects if * the path has been rewritten and updates the servlet target. * * This is a bit of a hack, it needs a lot more thinking about a clean way to handle * this */",1,1,1,1,-1,-1,-1,-1
"/** * Huge hack, to work around the fact that there is no way to directly access this class once it is wrapped, * we use a fake cookie */",1,1,1,1,-1,-1,-1,-1
"/** * IDE entry point. * <p> * This has a number of hacks to make it work, and is always going to be a bit fragile, as it is hard to make something * that will work 100% of the time as we just don't have enough information. * <p> * The launcher module has all its dependencies shaded, so it is effectively self-contained. This allows deployment time * code to not leak into runtime code, as the launcher artifact is explicitly excluded from the production build via a * hard coded exclusion. */",1,1,1,1,-1,-1,-1,-1
"/** * If the deployment should use an isolated (aka parent last) classloader. * <p> * For tests this is generally false, as we want to share the base class path so that the * test extension code can integrate with the deployment. * <p> * TODO: should this always be true? * * @param isolateDeployment * @return */",1,1,1,1,-1,-1,-1,-1
/** * If the pom.xml file is changed then this file will be updated * * So we just check it for changes. * * TODO: is there a potential issue with rsync based implementations not being fully synced? We can just sync this file * last * but it gets tricky if we can't control the sync */,1,1,1,1,-1,-1,-1,-1
"/** * Indicates that this constructor should be used to construct the recorded object. * * The constructor parameters will be read from the fields of the object, and matched * to the constructor parameter names. * * TODO: move this out of Quarkus core and into a tiny annotation-only module * that could then be used outside of Quarkus (for example in RESTEasy Reactive) */",1,1,1,1,-1,-1,-1,-1
"/** * Return the most general packages used in the application * <p> * TODO: this likely covers almost all typical use cases, but probably needs some tweaks for extreme corner cases */",1,1,1,1,-1,-1,-1,-1
"/** * Scan the Jandex index to find JPA entities (and embeddables supporting entity models). * <p> * The output is then both consumed as plain list to use as a filter for which classes * need to be enhanced, collect them for storage in the JPADeploymentTemplate and registered * for reflective access. * TODO some of these are going to be redundant? * * @author Emmanuel Bernard emmanuel@hibernate.org * @author Sanne Grinovero <sanne@hibernate.org> */",1,1,1,1,-1,-1,-1,-1
"/** * Subclass of {@link WebApplicationException} for use by clients, which forbids setting a response that * would be used by the server. * FIXME: I'd rather this be disjoint from WebApplicationException, so we could store the response info * for client usage. Perhaps we can store it in an alternate field? */",1,1,1,1,-1,-1,-1,-1
/** * TODO We need to find a way to use the gradle api outside of a gradle plugin */,1,1,1,1,-1,-1,-1,-1
/** * TODO determine section ordering * * @param item * @return */,1,1,0,1,-1,-1,-1,-1
"/** * TODO: Fix everything in the universe to do loading properly * * This class exists because a lot of libraries do getClass().getClassLoader.getResource() * instead of using the context class loader, which breaks tests as these resources are present in the * top CL and not the base CL that is used to load libraries. * * This yucky yucky hack works around this, by allowing non-class files to be loaded parent first, so they * will be loaded from the application ClassLoader. * * Note that the underlying reason for this 'banned element' existing in the first place * is because other libraries do Class Loading wrong in different ways, and attempt to load * from the TCCL as a fallback instead of as the first priority, so we need to have the banned element * to prevent a load from the application ClassLoader (which won't work). */",1,1,1,1,-1,-1,-1,-1
/** * TODO: Workaround for https://github.com/quarkusio/quarkus/issues/28812 * We need to remove the duplicate paths of the generated Ingress. The following logic can be removed after * bumping the next Dekorate version that includes the fix: https://github.com/dekorateio/dekorate/pull/1092. */,1,1,1,1,-1,-1,-1,-1
/** * TODO: compare set *.json.DevToolsConfigSerializationTest */,0,1,1,1,-1,-1,-1,-1
/** * TODO: reuse the ones from QuarkusInfinispanRegionFactory as soon as they are made public. */,1,1,1,1,-1,-1,-1,-1
"/** * TODO: this is a hack, we should be able to pass config overrides into the bootstrap */",1,1,1,1,-1,-1,-1,-1
/** * The build time process for the security aspects of the deployment. This creates {@linkplain BuildStep}s for integration * with the Elytron security services. This supports the Elytron * {@linkplain org.wildfly.security.auth.realm.LegacyPropertiesSecurityRealm} * and {@linkplain org.wildfly.security.auth.realm.SimpleMapBackedSecurityRealm} realm implementations. Others could be * added by creating an extension that produces a SecurityRealmBuildItem for the realm. * * Additional authentication mechanisms can be added by producing AuthConfigBuildItems and including the associated * {@linkplain io.undertow.servlet.ServletExtension} implementations to register the * {@linkplain io.undertow.security.api.AuthenticationMechanismFactory}. * * TODO: The handling of the configuration to SecurityRealm instance creation/loading is clumsy to not being able to * have a config object annotated with @ConfigGroup inherit from another object with MP config annotated properties. */,1,1,0,1,-1,-1,-1,-1
"/** * The location that output artifacts should be created in * * TODO: should we just create them in temp directories, and leave it up to the integration to move them where they want? */",1,1,1,1,-1,-1,-1,-1
"/** * This class is a bit of a hack, it provides a way to pass in the current curratedApplication into the TestExtension */",1,1,1,1,-1,-1,-1,-1
"/** * This class is copied from Dekorate, with the difference that the {@code waitForImageStreamTags} method * take a client as the argument * * TODO: Update dekorate to take the client as an argument and then remove this class */",1,1,1,1,-1,-1,-1,-1
/** * This class is very similar to {@link org.flywaydb.core.internal.scanner.Scanner} * TODO: refactor upstream to move common methods to utility class */,1,1,1,1,-1,-1,-1,-1
"/** * This is a bit of a hack. In dev mode we undeploy all the verticles on restart, except * for this one */",1,1,1,1,-1,-1,-1,-1
/** * This is used currently only to suppress warnings about unknown properties * when the user supplies something like: -Dquarkus.debug.reflection=true * * TODO refactor code to actually use these values */,1,1,1,1,-1,-1,-1,-1
/** * This is used currently only to suppress warnings about unknown properties * when the user supplies something like: -Dquarkus.platform.group-id=someGroup * * TODO refactor code to actually use these values */,1,1,1,1,-1,-1,-1,-1
/** * This is used currently only to suppress warnings about unknown properties * when the user supplies something like: -Dquarkus.profile=someProfile * * TODO refactor code to actually use these values */,1,1,1,1,-1,-1,-1,-1
/** * This is used currently only to suppress warnings about unknown properties * when the user supplies something like: -Dquarkus.test.profile=someProfile or -Dquarkus.test.native-image-profile=someProfile * <p> * TODO refactor code to actually use these values */,1,1,1,1,-1,-1,-1,-1
"/** * Used for remote dev mode, a bit of a hack to expose the config to the client */",1,1,1,1,-1,-1,-1,-1
"/** * Utility class for manually instantiating a config object * <p> * This should only be used in specific circumstances, generally when normal start * has failed and we are attempting to do some form of recovery via hot deployment * <p> * TODO: fully implement this as required, at the moment this is mostly to read the HTTP config when startup fails * or for basic logging setup in non-Quarkus tests */",1,1,1,1,-1,-1,-1,-1
"/** * Utility class that sets the rest assured port to the default test port and meaningful timeouts. * <p> * This uses reflection so as to not introduce a dependency on rest-assured * <p> * TODO: do we actually want this here, or should it be in a different module? */",1,1,1,1,-1,-1,-1,-1
"/** * listener that changes the readiness probe on pre-shudown * * Note that unless there is another preShutdown listener present * this will generally have no real effect, as after pre-shutdown * the HTTP endpoint will return service unavailable. * * TODO: We may want a timeout here, so the readiness probe will be down for a set timeout before shutdown continues */",1,1,1,1,-1,-1,-1,-1
// // FIXME should be PersistenceException see https://github.com/hibernate/hibernate-reactive/issues/280,1,1,0,1,-1,-1,-1,-1
// // FIXME: notify of client closing,1,1,0,1,-1,-1,-1,-1
// Add Content-Length: xxx,0,1,1,1,-1,-1,-1,-1
// Dry run: Make sure registry client property is set (default = false) TODO,0,1,1,1,-1,-1,-1,-1
// FIXME : this used to be non-annotated explicitly for testing purposes,1,1,0,1,-1,-1,-1,-1
// FIXME This is currently not working,1,1,1,1,-1,-1,-1,-1
// FIXME WHOA!,1,1,0,1,-1,-1,-1,-1
// FIXME this won't work in the case of synthetic parameters,1,1,0,1,-1,-1,-1,-1
// FIXME we change the order ot the Hostname resolution for native image,1,1,0,1,-1,-1,-1,-1
// FIXME we have two accept methods !!!,1,1,0,1,-1,-1,-1,-1
// FIXME what do we do here?,1,1,1,1,-1,-1,-1,-1
// FIXME: Matrix not supported,1,1,0,1,-1,-1,-1,-1
// FIXME: Reconnect settings?,1,1,0,1,-1,-1,-1,-1
"// FIXME: This is an ugly hack, but there is not much we can do...",1,1,1,1,-1,-1,-1,-1
// FIXME: are we interested in async completion?,1,1,0,1,-1,-1,-1,-1
// FIXME: backpressure setting?,1,1,0,1,-1,-1,-1,-1
"// FIXME: by using the element type, we're also getting converters for parameter collection types such as List/Array/Set",1,1,0,1,-1,-1,-1,-1
// FIXME: can we really have paths that don't start with the prefix if there's a prefix?,1,1,0,1,-1,-1,-1,-1
"// FIXME: cheating, we should generate a converter for this enum",1,1,1,1,-1,-1,-1,-1
// FIXME: check spec,1,1,0,1,-1,-1,-1,-1
// FIXME: check that it's in the same class hierarchy,1,1,0,1,-1,-1,-1,-1
"// FIXME: config, take from Qute?",1,1,0,1,-1,-1,-1,-1
// FIXME: custom status codes depending on method?,1,1,0,1,-1,-1,-1,-1
// FIXME: do we need a state flag?,1,1,0,1,-1,-1,-1,-1
"// FIXME: do we need the auth here? likely the user will know it and will just ++ on the DB-stored counter, no?",1,1,1,1,-1,-1,-1,-1
// FIXME: does this mean we should use CDI to look it up?,1,1,1,1,-1,-1,-1,-1
// FIXME: doesn't support generics,1,1,0,1,-1,-1,-1,-1
// FIXME: don't enable this until https://github.com/smallrye/smallrye-open-api/issues/197 has been fixed,1,1,0,1,-1,-1,-1,-1
// FIXME: exception?,1,1,0,1,-1,-1,-1,-1
// FIXME: fetch,1,1,0,1,-1,-1,-1,-1
// FIXME: generate default constructor,1,1,0,1,-1,-1,-1,-1
// FIXME: handle Response with entity being a CompletionStage,1,1,0,1,-1,-1,-1,-1
// FIXME: handle Response with entity being a Multi,1,1,0,1,-1,-1,-1,-1
// FIXME: handle Response with entity being a Uni,1,1,0,1,-1,-1,-1,-1
// FIXME: handle multi fields,1,1,0,1,-1,-1,-1,-1
// FIXME: handle setters,1,1,0,1,-1,-1,-1,-1
// FIXME: https://github.com/hibernate/hibernate-reactive/issues/281,1,1,0,1,-1,-1,-1,-1
// FIXME: if our buffer cuts here that's a bad spot,1,1,0,1,-1,-1,-1,-1
"// FIXME: if we make a pretend Response and go through the normal route, we will get",1,1,0,1,-1,-1,-1,-1
"// FIXME: in order to check for the getter type we need to apply type parameters, that's too complex so assume it matches",1,1,0,1,-1,-1,-1,-1
// FIXME: invalidate entity class?,1,1,0,1,-1,-1,-1,-1
// FIXME: invalidate entityclass/type?,1,1,0,1,-1,-1,-1,-1
// FIXME: invalidate generic type?,1,1,0,1,-1,-1,-1,-1
"// FIXME: invocation is very different between client and server, where the server doesn't treat GenericEntity specially",1,1,0,1,-1,-1,-1,-1
"// FIXME: look up fields with default names? name, username…",1,1,0,1,-1,-1,-1,-1
// FIXME: make it configurable?,1,1,0,1,-1,-1,-1,-1
// FIXME: make this faster if we have a single cookie,1,1,0,1,-1,-1,-1,-1
// FIXME: merge with form config?,1,1,0,1,-1,-1,-1,-1
// FIXME: move to build time,1,1,0,1,-1,-1,-1,-1
// FIXME: not allowed yet,1,1,0,1,-1,-1,-1,-1
// FIXME: not supported yet,1,1,0,1,-1,-1,-1,-1
// FIXME: not true?,1,1,0,1,-1,-1,-1,-1
// FIXME: only use the first bound,1,1,0,1,-1,-1,-1,-1
// FIXME: other headers?,1,1,0,1,-1,-1,-1,-1
// FIXME: pass InvocationState to wrap args?,1,1,0,1,-1,-1,-1,-1
// FIXME: pass headers?,1,1,0,1,-1,-1,-1,-1
// FIXME: paths configurable,1,1,0,1,-1,-1,-1,-1
// FIXME: perhaps optimise for when we have no interceptor?,1,1,0,1,-1,-1,-1,-1
// FIXME: pretty sure this doesn't work with generics,1,1,1,1,-1,-1,-1,-1
// FIXME: primitives,1,1,0,1,-1,-1,-1,-1
// FIXME: probably close the client too? watch out that it doesn't call our close handler,1,1,1,1,-1,-1,-1,-1
// FIXME: question about caching the result here,1,1,1,1,-1,-1,-1,-1
// FIXME: requires Hibernate support,1,1,0,1,-1,-1,-1,-1
// FIXME: resolved arguments ?,1,1,0,1,-1,-1,-1,-1
"// FIXME: should be an exception, but we have incomplete support for generics ATM, so we still",1,1,0,1,-1,-1,-1,-1
"// FIXME: should pass the Quarkus executor here, but MP-CP or not?",1,1,1,1,-1,-1,-1,-1
// FIXME: should we really skip PanacheEntity or all MappedSuperClass?,1,1,1,1,-1,-1,-1,-1
// FIXME: should we require a @Blocking annotation?,1,1,0,1,-1,-1,-1,-1
// FIXME: spec doesn't really say what headers we should use here,1,1,1,1,-1,-1,-1,-1
"// FIXME: spec says we should flush the headers when first message is sent or when the resource method returns, whichever",1,1,0,1,-1,-1,-1,-1
"// FIXME: spec says we should use generic type, but not sure how to pass that type from Jandex to reflection",1,1,1,1,-1,-1,-1,-1
// FIXME: support constructors for bean params too,1,1,0,1,-1,-1,-1,-1
// FIXME: support non-JPA-backed array roles?,1,1,0,1,-1,-1,-1,-1
// FIXME: support owner type,1,1,0,1,-1,-1,-1,-1
"// FIXME: surely this is wrong, perhaps we can use the expected response type?",1,1,1,1,-1,-1,-1,-1
// FIXME: the current cookie RFC doesn't mention params for cookies sent by the client,1,1,0,1,-1,-1,-1,-1
// FIXME: this doesn't actually support injection in the resource instance,1,1,1,1,-1,-1,-1,-1
"// FIXME: this doesn't appear to pass the TCK, because it fails to decode what it throws at it",1,1,0,1,-1,-1,-1,-1
// FIXME: this doesn't work with generics-inherited types,1,1,1,1,-1,-1,-1,-1
// FIXME: this is for Optional<T> and List<T>,1,1,0,1,-1,-1,-1,-1
// FIXME: this is probably not good enough,1,1,1,1,-1,-1,-1,-1
// FIXME: this is super dodgy: we should check the type!!,1,1,1,1,-1,-1,-1,-1
// FIXME: this is totally wrong wrt. generics,1,1,1,1,-1,-1,-1,-1
// FIXME: this is weird,1,1,1,1,-1,-1,-1,-1
"// FIXME: this is weird, it doesn't go via converter nor multipart, looks like a bug",1,1,1,1,-1,-1,-1,-1
// FIXME: this isn't right wrt generics,1,1,0,1,-1,-1,-1,-1
// FIXME: this leaks server stuff onto the client,1,1,1,1,-1,-1,-1,-1
// FIXME: this may be better as context.normalisedPath() or getPath(),1,1,1,1,-1,-1,-1,-1
"// FIXME: this seems unnecessary, but is needed to make sure that the GraphQLClientConfigurationMergerBean",1,1,1,1,-1,-1,-1,-1
// FIXME: this should belong somewhere else as it's generic,1,1,1,1,-1,-1,-1,-1
"// FIXME: this should go in favour of generating them, so we can generate them only if used for dead-code elimination",1,1,0,1,-1,-1,-1,-1
"// FIXME: this should support overloading by using the method signature as key, but requires moving JandexUtil stuff around",1,1,1,1,-1,-1,-1,-1
// FIXME: those appear to be mapped by hibernate,1,1,0,1,-1,-1,-1,-1
// FIXME: throw if we don't have a converter,1,1,0,1,-1,-1,-1,-1
// FIXME: turn into Uni,1,1,0,1,-1,-1,-1,-1
// FIXME: use response encoding,1,1,0,1,-1,-1,-1,-1
// FIXME: we could still support beans,1,1,0,1,-1,-1,-1,-1
"// FIXME: we have strings, it wants objects, perhaps there's",1,1,1,1,-1,-1,-1,-1
// FIXME: we may need context propagation,1,1,1,1,-1,-1,-1,-1
"// FIXME: we need to know whether the exception is mapped or not, how to find out?",1,1,0,1,-1,-1,-1,-1
// FIXME: we need to refactor the serialisation of entities to bytes between here and Sse and Serialisers,1,1,0,1,-1,-1,-1,-1
"// FIXME: we should add this, but for that we also need to make the resource class request-scoped",1,1,0,1,-1,-1,-1,-1
"// FIXME: why would we even do that? those are the defaults, let's leave them blank",1,1,0,1,-1,-1,-1,-1
// FIXME: won't this call complete twice()?,1,1,0,1,-1,-1,-1,-1
// FIXME: workaround https://github.com/hibernate/hibernate-reactive/issues/263,1,1,1,1,-1,-1,-1,-1
"// HACK: registration is done via statics, but cleanup is done via pre destroy",1,1,1,1,-1,-1,-1,-1
// HACK: we launch the application in this method instead of in beforeEach in order to ensure that,1,1,1,1,-1,-1,-1,-1
// Huge hack to stream valid json,1,1,1,1,-1,-1,-1,-1
// Massive hack to dected zipped/jar,1,1,1,1,-1,-1,-1,-1
// Note that this hack will not work if addMavenDescriptor=false or if the pomPropertiesFile is overridden,1,1,1,1,-1,-1,-1,-1
"// TODO #26199 Ideally we'd use a proper AsciiDoc renderer, but for now we'll just clean it up a bit.",1,1,1,1,-1,-1,-1,-1
// TODO (optional): assume entities are already enhanced?,0,1,1,1,-1,-1,-1,-1
// TODO - Add hierarchy here but requires https://github.com/smallrye/smallrye-config/pull/590,1,1,1,1,-1,-1,-1,-1
// TODO - Generation of Mapping interface classes can be done in core because they don't require CDI,1,1,1,1,-1,-1,-1,-1
// TODO - Replace with Jandex? The issue is that the sources may not be in the index...,1,1,1,1,-1,-1,-1,-1
// TODO - Selectively register this in the recorder if the SQL Client is available.,1,1,1,1,-1,-1,-1,-1
// TODO - Temporary fix for https://github.com/fabric8io/kubernetes-client/pull/3347 + WithOpenShiftTestServer,1,1,1,1,-1,-1,-1,-1
// TODO - radcortez - Fix nulls,1,1,1,1,-1,-1,-1,-1
// TODO - radcortez - Match /* endpoints,1,1,0,1,-1,-1,-1,-1
// TODO - radcortez - how to propagate the context if this is a Uni?,1,1,1,1,-1,-1,-1,-1
// TODO - should deep merge be supported? Or we should only merge top level sections?,1,1,1,1,-1,-1,-1,-1
"// TODO // might contain references to org.hibernate.loader.custom.ConstructorResultColumnProcessor, org.hibernate.type.TypeStandardSQLFunction",1,1,1,1,-1,-1,-1,-1
// TODO //reference to *annotation* instance ! FIXME or ignore feature?,1,1,1,1,-1,-1,-1,-1
// TODO : we can probably do a smarter refresh,1,1,1,1,-1,-1,-1,-1
// TODO ???,1,1,1,1,-1,-1,-1,-1
// TODO Add LCS with IDX support,1,1,1,1,-1,-1,-1,-1
// TODO Add the internal interface support,1,1,1,1,-1,-1,-1,-1
// TODO CES - Ugly Ugly hack!,1,1,1,1,-1,-1,-1,-1
// TODO Check result format,1,1,1,1,-1,-1,-1,-1
// TODO FT should be smart enough and only initialize the stuff in the recorder if it's really needed,1,1,1,1,-1,-1,-1,-1
"// TODO Ideally we'd rely on separate configuration for Hibernate Reactive,",1,1,1,1,-1,-1,-1,-1
// TODO Pool name?,1,1,1,1,-1,-1,-1,-1
// TODO RFC2965 Discard,1,1,1,1,-1,-1,-1,-1
// TODO RFC2965 fields also need to be passed,1,1,1,1,-1,-1,-1,-1
// TODO Re-enable logging when RFC2965 is implemented,1,1,1,1,-1,-1,-1,-1
// TODO Remove this cast when we get rid of the dependency to MutinyImplementor,1,1,1,1,-1,-1,-1,-1
// TODO Replace this,1,1,1,1,-1,-1,-1,-1
// TODO This needs to be challenged:,1,1,1,1,-1,-1,-1,-1
// TODO This needs to be refactored to use routeFunction() taking a Consumer<Route> instead,1,1,1,1,-1,-1,-1,-1
// TODO This requirement should be relaxed in vertx 4.0.3+,1,1,1,1,-1,-1,-1,-1
// TODO To be tested,1,1,1,1,-1,-1,-1,-1
// TODO We could detect this at built time - emitter won't be injectable.,1,1,1,1,-1,-1,-1,-1
// TODO add txoptions from annotation,1,1,1,1,-1,-1,-1,-1
// TODO allow multiple streams in the same catalog for now,1,1,1,1,-1,-1,-1,-1
// TODO allow to access the context from the function somehow.,1,1,1,1,-1,-1,-1,-1
// TODO assert that we match the right type of ORM!,1,1,1,1,-1,-1,-1,-1
// TODO can this be always right ?,1,1,1,1,-1,-1,-1,-1
// TODO cannot perform analysis,1,1,1,1,-1,-1,-1,-1
// TODO consider type params in assignability rules,1,1,1,1,-1,-1,-1,-1
// TODO disable?,1,1,1,1,-1,-1,-1,-1
"// TODO dynamically load generation provider, or make them write code directly in quarkus-generated-sources",1,1,1,1,-1,-1,-1,-1
"// TODO for some reason, this must be a top-level type, not a nested/inner type,",1,1,1,1,-1,-1,-1,-1
"// TODO ideally we should align on ORM and use 16 as a default, but that would break applications",1,1,1,1,-1,-1,-1,-1
// TODO is there a better way? :-/,1,1,1,1,-1,-1,-1,-1
"// TODO it should never get here, this needs a proper refactoring",1,1,1,1,-1,-1,-1,-1
"// TODO large arrays can still generate a fair bit of bytecode, and there appears to be a gizmo issue that prevents casting to an array",1,1,1,1,-1,-1,-1,-1
// TODO log a warning that a resource cannot be injected,1,1,1,1,-1,-1,-1,-1
// TODO make @SearchExtension beans unremovable only if the corresponding PU actually exists and is enabled,1,1,1,1,-1,-1,-1,-1
// TODO make the parsing logic more robust,1,1,1,1,-1,-1,-1,-1
// TODO maybe we can check this at static init,1,1,1,1,-1,-1,-1,-1
// TODO might contain NativeSQLQueryReturn (as namedNativeQueryMap above),1,1,1,1,-1,-1,-1,-1
// TODO more config options,1,1,1,1,-1,-1,-1,-1
// TODO move this to runtime init once we implement in Hibernate ORM a way,1,1,1,1,-1,-1,-1,-1
"// TODO no mapping, no support for ""erased""",1,1,1,1,-1,-1,-1,-1
// TODO only read this information once since it is exactly the same in ResteasyCommonProcessor#setupProviders,1,1,1,1,-1,-1,-1,-1
// TODO other config properties,1,1,1,1,-1,-1,-1,-1
// TODO properly import the BOMs,1,1,1,1,-1,-1,-1,-1
// TODO remaining RFC2965 attributes,1,1,1,1,-1,-1,-1,-1
"// TODO remove this code in 3.0, it is only here to ensure migration after the removal of",1,1,1,1,-1,-1,-1,-1
// TODO remove this method once the default registry becomes available,1,1,1,1,-1,-1,-1,-1
// TODO remove this method once we have the registry service available,1,1,1,1,-1,-1,-1,-1
// TODO setter injection,0,1,1,1,-1,-1,-1,-1
// TODO should it be dialects,1,1,1,1,-1,-1,-1,-1
"// TODO should it be shortcuts like ""postgresql"" ""h2"" etc",1,1,1,1,-1,-1,-1,-1
// TODO sun.security.jca.GetInstance is not accessible in JDK 11. We cannot add an export,1,1,1,1,-1,-1,-1,-1
// TODO support interfaces default methods,1,1,1,1,-1,-1,-1,-1
// TODO the order should be predictable,1,1,1,1,-1,-1,-1,-1
// TODO this class is only needed by the Spring Data JPA module and would not be placed there if it weren't for a dev-mode classloader issue,1,1,1,1,-1,-1,-1,-1
"// TODO this is a copy of the set, it should be a set ""connected"" to the underlying map",1,1,1,1,-1,-1,-1,-1
"// TODO this is a temporary workaround, we need change how this work to support having multiple processors for one file",1,1,1,1,-1,-1,-1,-1
"// TODO this is wrong, the map is keyed by `DotName`s",1,1,1,1,-1,-1,-1,-1
// TODO this section needs to be improved,1,1,1,1,-1,-1,-1,-1
// TODO this whole method is really just a hack that duplicates,1,1,1,1,-1,-1,-1,-1
// TODO we could also add some more tests about the dependency resolution and other extension descriptor functions here; see ExtensionDescriptorTaskTest for some ideas,1,1,1,1,-1,-1,-1,-1
"// TODO when this is going to be needed elsewhere, refactor to move it to a common location",1,1,1,1,-1,-1,-1,-1
"// TODO when we switch to the non-legacy method, don't forget to update the definition of the default bean",1,1,1,1,-1,-1,-1,-1
// TODO workaround for https://github.com/quarkusio/gizmo/issues/6,1,1,1,1,-1,-1,-1,-1
// TODO:  add a extensible banning mechanism based on predicates if we find that this set needs to grow...,1,1,1,1,-1,-1,-1,-1
// TODO: @JsonDeserialize is only supported as a class annotation - we should support the others as well,1,1,1,1,-1,-1,-1,-1
// TODO: API for optimised charsequence creation,1,1,1,1,-1,-1,-1,-1
// TODO: Add statistics here to monitor the timeout.,1,1,1,1,-1,-1,-1,-1
// TODO: By default quarkus.oidc.application-type = service,1,1,1,1,-1,-1,-1,-1
// TODO: Determine if there is a more automated way we can configure the metrics,1,1,1,1,-1,-1,-1,-1
// TODO: Handle merging of XMLs,1,1,1,1,-1,-1,-1,-1
// TODO: It might not make sense to have this extend from QuarkusRestFeatureContext,1,1,1,1,-1,-1,-1,-1
// TODO: Maven and Gradle give different return codes,1,1,1,1,-1,-1,-1,-1
// TODO: Remove reflective access once support for GraalVM < 22.3 gets dropped and directly invoke,1,1,1,1,-1,-1,-1,-1
// TODO: Remove this method (maybe in 1.6.x of Quarkus or later) if there are no user reports,1,1,1,1,-1,-1,-1,-1
// TODO: Support Quarkiverse multi extensions repo,1,1,1,1,-1,-1,-1,-1
// TODO: This is using the old deprecated LambdaClient test API.  I am keeping it here to test backward compatibility,1,1,1,1,-1,-1,-1,-1
// TODO: Use tagged version?,1,1,1,1,-1,-1,-1,-1
// TODO: We probably want to share this with quarkus-resteasy-qute somehow...,1,1,1,1,-1,-1,-1,-1
// TODO: Workaround for https://github.com/quarkusio/quarkus/issues/28812,1,1,1,1,-1,-1,-1,-1
// TODO: a more efficient matching algorithm,1,1,1,1,-1,-1,-1,-1
// TODO: actually implement this somehow so these values are baked in at build time,1,1,1,1,-1,-1,-1,-1
// TODO: add Cookie and Matrix handling,1,1,1,1,-1,-1,-1,-1
// TODO: add headers,1,1,1,1,-1,-1,-1,-1
// TODO: add more types,1,1,1,1,-1,-1,-1,-1
// TODO: add proper API to handle this,1,1,1,1,-1,-1,-1,-1
// TODO: add support for inherited business methods,1,1,1,1,-1,-1,-1,-1
// TODO: add the rest of static methods of Response if we need them,1,1,1,1,-1,-1,-1,-1
"// TODO: again a hack, assumes the sources dir is one dir above java sources path",1,1,1,1,-1,-1,-1,-1
// TODO: are there any other cases we can support?,1,1,1,1,-1,-1,-1,-1
// TODO: argument filtering?,1,1,1,1,-1,-1,-1,-1
"// TODO: as this is a copy of the class in the 'quarkus-integration-test-kubernetes-standard',",1,1,1,1,-1,-1,-1,-1
// TODO: as this is request scoped we loose the type of the Principal,1,1,1,1,-1,-1,-1,-1
"// TODO: at some point we are going to need to break this up, as if it get too big it will hit the method size limit",1,1,1,1,-1,-1,-1,-1
"// TODO: at the moment this only looks for the class name, it does not make sure it is used",1,1,1,1,-1,-1,-1,-1
// TODO: auto generate INDEX.LIST,1,1,1,1,-1,-1,-1,-1
// TODO: avoid hard coding CompletionStage handling,1,1,1,1,-1,-1,-1,-1
// TODO: avoid hard coding this and use an SPI to communicate the info with the invoker generation code,1,1,1,1,-1,-1,-1,-1
"// TODO: because of dev mode we iterate, to see if any resources were added",1,1,1,1,-1,-1,-1,-1
"// TODO: break this up, it is getting too big",1,1,1,1,-1,-1,-1,-1
// TODO: config etc,1,1,1,1,-1,-1,-1,-1
// TODO: consider not using reflection to create these,1,1,1,1,-1,-1,-1,-1
// TODO: converters,1,1,1,1,-1,-1,-1,-1
// TODO: create a different entry for WorkerPoolRegistry than `analyzeWorker` and drop this class,1,1,1,1,-1,-1,-1,-1
"// TODO: detect normal scoped beans and throw an exception, as it will read the field from the proxy",1,1,1,1,-1,-1,-1,-1
// TODO: do we actually want vert.x websockets?,1,1,1,1,-1,-1,-1,-1
// TODO: do we even have any other resources to close?,1,1,1,1,-1,-1,-1,-1
// TODO: do we need this for Quarkus?,1,1,1,1,-1,-1,-1,-1
// TODO: do we need this?,1,1,1,1,-1,-1,-1,-1
// TODO: do we need to check the hosts as well?,1,1,1,1,-1,-1,-1,-1
// TODO: do we need to look at the request encoding?,1,1,1,1,-1,-1,-1,-1
// TODO: do we need to support converters here?,1,1,1,1,-1,-1,-1,-1
// TODO: do we perhaps want to register the whole directory?,1,1,1,1,-1,-1,-1,-1
// TODO: does it make sense to default to MediaType.MULTIPART_FORM_DATA when no consumes is set?,1,1,1,1,-1,-1,-1,-1
// TODO: does it make sense to limit these to the Server?,1,1,1,1,-1,-1,-1,-1
// TODO: does it make sense to validate the name with the supplied configuration?,1,1,1,1,-1,-1,-1,-1
// TODO: does this entry make sense when target is null ?,1,1,1,1,-1,-1,-1,-1
// TODO: does this make sense for dev mode?,1,1,1,1,-1,-1,-1,-1
// TODO: does this make sense re: continuous test?,1,1,1,1,-1,-1,-1,-1
// TODO: does this make sense?,1,1,1,1,-1,-1,-1,-1
// TODO: does this need to be more complex?,1,1,1,1,-1,-1,-1,-1
// TODO: enhance this test,1,1,1,1,-1,-1,-1,-1
// TODO: fix all these,1,1,1,1,-1,-1,-1,-1
// TODO: fix as to use all methods,1,1,1,1,-1,-1,-1,-1
// TODO: fix it after proper error message impl,1,1,1,1,-1,-1,-1,-1
// TODO: fix this,1,1,1,1,-1,-1,-1,-1
// TODO: fix this hack by moving all the logic that handles this annotation to the server processor,1,1,1,1,-1,-1,-1,-1
"// TODO: fix, needs a pure vert.x async read model",1,1,1,1,-1,-1,-1,-1
// TODO: fixme,1,1,1,1,-1,-1,-1,-1
// TODO: for convenience we save the log records as HTML rather than ANSI here,1,1,1,1,-1,-1,-1,-1
// TODO: get rid of ByteArrayInputStream,1,1,1,1,-1,-1,-1,-1
// TODO: handle different types of values,1,1,1,1,-1,-1,-1,-1
// TODO: handle hbm files,1,1,1,1,-1,-1,-1,-1
// TODO: handle other less common types of array components,1,1,1,1,-1,-1,-1,-1
// TODO: handle other providers as well,1,1,1,1,-1,-1,-1,-1
// TODO: how to handle,1,1,1,1,-1,-1,-1,-1
// TODO: huge hack,1,1,1,1,-1,-1,-1,-1
"// TODO: ideally we would declare this bean with a lesser priority and let Quarkus override it using a higher priority,",1,1,1,1,-1,-1,-1,-1
// TODO: if the main thread is not actively waiting to exit should we interrupt it?,1,1,1,1,-1,-1,-1,-1
// TODO: in theory resources could have been added in dev mode,1,1,1,1,-1,-1,-1,-1
"// TODO: instead of returning a boolean, the info about available",1,1,1,1,-1,-1,-1,-1
// TODO: is this a valid assumption? Should we check this by creating an instance?,1,1,1,1,-1,-1,-1,-1
// TODO: is this needed for all working directories?,1,1,1,1,-1,-1,-1,-1
"// TODO: is this too heavy-handed? It should never happen but even if it does, it's a mostly recoverable state",1,1,1,1,-1,-1,-1,-1
// TODO: knock on effect with properties.. here?,1,1,1,1,-1,-1,-1,-1
// TODO: log a warning,0,1,1,1,-1,-1,-1,-1
// TODO: log warning if nothing was done,0,1,1,1,-1,-1,-1,-1
"// TODO: look at implementing a common core classloader, that removes the need for this sort of crappy hack",1,1,1,1,-1,-1,-1,-1
// TODO: make a teste to java17,1,1,1,1,-1,-1,-1,-1
// TODO: make generic to support AVRO serializer,1,1,1,1,-1,-1,-1,-1
// TODO: make generic?,1,1,1,1,-1,-1,-1,-1
// TODO: make pluggable,1,1,1,1,-1,-1,-1,-1
// TODO: make this automatic somehow,1,1,1,1,-1,-1,-1,-1
// TODO: make this more pluggable,1,1,1,1,-1,-1,-1,-1
// TODO: make timeout configureable,1,1,1,1,-1,-1,-1,-1
"// TODO: massive hack, make sure this works in eclipse",1,1,1,1,-1,-1,-1,-1
// TODO: maybe we could extract something closer to input stream from attribute,1,1,1,1,-1,-1,-1,-1
// TODO: move away from a static,1,1,1,1,-1,-1,-1,-1
// TODO: move pure get requests processing here,1,1,1,1,-1,-1,-1,-1
// TODO: move to a dedicated jna extension that will simply collect JNA substitutions,1,1,1,1,-1,-1,-1,-1
// TODO: needs some thinking,1,1,1,1,-1,-1,-1,-1
// TODO: not supported yet in remote dev,1,1,1,1,-1,-1,-1,-1
"// TODO: not sure if this is correct, but Jackson does this as well...",1,1,1,1,-1,-1,-1,-1
"// TODO: not sure this is correct, but it seems to be what RESTEasy does and it also makes most sense in the context of a POJO",1,1,1,1,-1,-1,-1,-1
// TODO: optimally we would check if Win32 getConsoleMode has,1,1,1,1,-1,-1,-1,-1
// TODO: present this info,1,1,1,1,-1,-1,-1,-1
// TODO: pull out RuntimeDelegateImpl to common and move the tests to client's deployment,1,1,1,1,-1,-1,-1,-1
// TODO: real bloocking IO,1,1,0,1,-1,-1,-1,-1
// TODO: refactor to have use common code from findWriters,1,1,1,1,-1,-1,-1,-1
// TODO: remove when the change in https://github.com/raphw/byte-buddy/pull/1279 is available,1,1,1,1,-1,-1,-1,-1
// TODO: remove when we move to Java 11 and just call the methods of 'java.lang.ProcessHandle',1,1,1,1,-1,-1,-1,-1
// TODO: replace with MethodLevelExceptionMappingFeature,1,1,1,1,-1,-1,-1,-1
// TODO: replace with RESTEasy Reactive @ResponseStatus support using an annotation transformer,1,1,1,1,-1,-1,-1,-1
// TODO: replace with a simple array based?,1,1,1,1,-1,-1,-1,-1
// TODO: same hack as above,1,1,1,1,-1,-1,-1,-1
// TODO: service methods for HTTP requests,1,1,1,1,-1,-1,-1,-1
// TODO: should be Package private,1,1,1,1,-1,-1,-1,-1
// TODO: should be pluggable,1,1,1,1,-1,-1,-1,-1
// TODO: should not extend the server version,1,1,1,1,-1,-1,-1,-1
// TODO: should this class go in its own module and be excluded from isolated class loading?,1,1,1,1,-1,-1,-1,-1
// TODO: should this just be application scoped?,1,1,1,1,-1,-1,-1,-1
// TODO: should we be passing in the annotations?,1,1,1,1,-1,-1,-1,-1
// TODO: should we be using vert.x blocking tasks here? We really should only have a single thread pool,1,1,1,1,-1,-1,-1,-1
// TODO: should we introduce a new integrator SPI to limit these to extensions supported by Quarkus?,1,1,1,1,-1,-1,-1,-1
"// TODO: solution for HTTP/1.0, but really there is not much we can do",1,1,1,1,-1,-1,-1,-1
// TODO: special primitive handling?,1,1,1,1,-1,-1,-1,-1
// TODO: string switch,1,1,1,1,-1,-1,-1,-1
// TODO: super inefficient,1,1,1,1,-1,-1,-1,-1
// TODO: support headers,1,1,1,1,-1,-1,-1,-1
// TODO: temporary until type param inference is in,1,1,1,1,-1,-1,-1,-1
// TODO: the spec doesn't seem to be totally clear about the sorting here,1,1,1,1,-1,-1,-1,-1
"// TODO: there is not really any way to handle @ApplicationPath, we could do something for @QuarkusTest apps but we can't for",1,1,1,1,-1,-1,-1,-1
"// TODO: there is not really any way to handle @ApplicationPath, we could do something for @QuarkusTest apps, but we can't for",1,1,1,1,-1,-1,-1,-1
// TODO: there should be an SPI for this,1,1,1,1,-1,-1,-1,-1
// TODO: this API method may be too limiting,1,1,1,1,-1,-1,-1,-1
// TODO: this annotation transformer is too simplistic and should be replaced,1,1,1,1,-1,-1,-1,-1
// TODO: this can be optimised,1,1,1,1,-1,-1,-1,-1
// TODO: this can be replaced with Multi.onItem().delayIt when it exists,1,1,1,1,-1,-1,-1,-1
// TODO: this code path is only hit when start fails in dev mode very early in the process,1,1,1,1,-1,-1,-1,-1
"// TODO: this delay should not even be necessary, the queue is created on",1,1,1,1,-1,-1,-1,-1
// TODO: this does not belong here.,1,1,1,1,-1,-1,-1,-1
// TODO: this is a bit ugly,1,1,1,1,-1,-1,-1,-1
"// TODO: this is a bit yuck, needed for the websocket listener which is tied to the test listeners",1,1,1,1,-1,-1,-1,-1
// TODO: this is a huge hack to avoid loading XML parsers,1,1,1,1,-1,-1,-1,-1
"// TODO: this is a huge hack, at the moment this just guesses the source location",1,1,1,1,-1,-1,-1,-1
"// TODO: this is almost certainly wrong when genericParameterTypes[i] is a ParameterizedType not handle above,",1,1,1,1,-1,-1,-1,-1
"// TODO: this is not 100% correct, discovery needs to be based on class name",1,1,1,1,-1,-1,-1,-1
"// TODO: this is not correct, we really need to look up the index",1,1,1,1,-1,-1,-1,-1
"// TODO: this is not guarded against large collections, probably not an issue in practice",1,1,1,1,-1,-1,-1,-1
// TODO: this is probably broken in gradle,1,1,1,1,-1,-1,-1,-1
// TODO: this is really really horrible and hacky and needs to be fixed.,1,1,1,1,-1,-1,-1,-1
// TODO: this is very simplistic at the moment,1,1,1,1,-1,-1,-1,-1
// TODO: this is very ugly and we should probably use some an SPI in order to decouple,1,1,1,1,-1,-1,-1,-1
// TODO: this isn't completely correct as we are supposed to take q and then qs into account...,1,1,1,1,-1,-1,-1,-1
"// TODO: this might have to be more complex, URL encoding maybe?",1,1,1,1,-1,-1,-1,-1
// TODO: this needs plenty more work to support all possible types and provide all information the FeatureContext allows,1,1,1,1,-1,-1,-1,-1
// TODO: this needs some thought for how it works outside a tx,1,1,1,1,-1,-1,-1,-1
// TODO: this needs to be optimised,1,1,1,1,-1,-1,-1,-1
// TODO: this predicate is rather simplistic since it results in creating the directory structure in both the resources and classes so it should probably be improved to remove empty directories,1,1,1,1,-1,-1,-1,-1
// TODO: this probably needs to be addressed,1,1,1,1,-1,-1,-1,-1
// TODO: this restriction needs to be lifted,1,1,1,1,-1,-1,-1,-1
"// TODO: this seems to be an edge case, but perhaps it needs to be handled by RequestDeserializeHandler?",1,1,1,1,-1,-1,-1,-1
// TODO: this should be changed to an exception after 1.4,1,1,1,1,-1,-1,-1,-1
// TODO: this should be pluggable,1,1,1,1,-1,-1,-1,-1
"// TODO: this should go away, once we decide on which one of the API's we want",1,1,1,1,-1,-1,-1,-1
"// TODO: this should not use the logger, it should print a nicer status",1,1,1,1,-1,-1,-1,-1
// TODO: this should really be an output of the RuntimeRunner,1,1,1,1,-1,-1,-1,-1
"// TODO: this whole app/test path resolution logic is pretty dumb, it needs be re-worked using proper workspace discovery",1,1,1,1,-1,-1,-1,-1
// TODO: update dekorate to make KubernetesHandler extendable,1,1,1,1,-1,-1,-1,-1
// TODO: update for multiple connections,1,1,1,1,-1,-1,-1,-1
// TODO: use proper generic handling,1,1,1,1,-1,-1,-1,-1
// TODO: we can't use devservices here because of issues with the class loading,1,1,1,1,-1,-1,-1,-1
// TODO: we could generate some kind of index at build time in order to obtain these values without using the annotation,1,1,1,1,-1,-1,-1,-1
// TODO: we could support this if necessary by looking up the resolved types via JandexUtil.resolveTypeParameters,1,1,1,1,-1,-1,-1,-1
// TODO: we do `discardReadBytes` on it which is not optimal - copies array every time,1,1,1,1,-1,-1,-1,-1
// TODO: we load everything from the deployment class loader,1,1,1,1,-1,-1,-1,-1
// TODO: we need better handling of static resources,1,1,1,1,-1,-1,-1,-1
// TODO: we probably need better state handling,1,1,1,1,-1,-1,-1,-1
// TODO: we probably want to refactor this and remove duplicate code that also exists in CustomFilterGenerator,1,1,1,1,-1,-1,-1,-1
// TODO: we probably want to remove this now...,1,1,1,1,-1,-1,-1,-1
// TODO: we should include the name of the datasource,1,1,1,1,-1,-1,-1,-1
// TODO: we should make sure ArC always picks up these classes and makes them beans,1,1,1,1,-1,-1,-1,-1
// TODO: we should probably use the TCCL to load the param type,1,1,1,1,-1,-1,-1,-1
// TODO: we should really provide a better alternative than this...,1,1,1,1,-1,-1,-1,-1
"// TODO: while jbang supports packages, the generation command does not",1,1,1,1,-1,-1,-1,-1
// TODO: why isn't this immutable?,1,1,1,1,-1,-1,-1,-1
// TODO: will fix this in the upcoming version of æsh,1,1,1,1,-1,-1,-1,-1
"// TODO: would love a test that doesn't use a wrapper, but CI path..",1,1,1,1,-1,-1,-1,-1
// TODO: write a stream that just uses the existing vert.x buffers,1,1,1,1,-1,-1,-1,-1
// TODO?,1,1,1,1,-1,-1,-1,-1
// This is a bit of a hack but if the current project does not contain any,1,1,1,1,-1,-1,-1,-1
"// This is very hackyish, we need a better data structure to do better",0,1,1,1,-1,-1,-1,-1
// We need the usual ClassLoader hacks in order to present the callbacks with the proper test object and context,1,1,1,1,-1,-1,-1,-1
// XXX RFC2965 not referenced in Servlet Spec,0,1,1,1,-1,-1,-1,-1
// XXX replace this with constant-folded service loader impl,1,1,1,1,-1,-1,-1,-1
// a bit of a hack to make sure the pattern .* is evaluated last,1,1,1,1,-1,-1,-1,-1
"// a bit of a hack, but if we sent this the app is going to restart",1,1,1,1,-1,-1,-1,-1
// a hack around class loading,1,1,1,1,-1,-1,-1,-1
"// a little bit of a hack, but we use an empty transformed class to represent removed resources, as transforming a class removes it from the original archive",1,1,1,1,-1,-1,-1,-1
// assertNotNull(server.getAttributes().get(NET_PEER_IP));//now shows up on net.sock.peer.addr. Not available on attributes yet. FIXME,1,1,0,1,-1,-1,-1,-1
// assertNotNull(server.getAttributes().get(NET_PEER_PORT)); // same for port. FIXME,1,1,0,1,-1,-1,-1,-1
// awesome/horrible hack,1,1,1,1,-1,-1,-1,-1
"// bit of a hack, but keeps things simple",1,1,1,1,-1,-1,-1,-1
// first we hack around class loading in the fork join pool,1,1,1,1,-1,-1,-1,-1
// hack in reinitialization of process info classes,1,1,1,1,-1,-1,-1,-1
"// hack to make this exactly 2 * 8191 bytes long, as tested by trial and error",1,1,1,1,-1,-1,-1,-1
// hack to remove a provider that is manually registered QuarkusRestClientBuilder,1,1,1,1,-1,-1,-1,-1
// hack to try and guess the IDE when using a multi-module project,1,1,1,1,-1,-1,-1,-1
"// hack, we don't want to link to the JUL version, but the jboss logging version",1,1,1,1,-1,-1,-1,-1
// horrible hack,1,1,1,1,-1,-1,-1,-1
// horrible hack to deal with '?' characters in the URL,1,1,1,1,-1,-1,-1,-1
// huge hack,1,1,1,1,-1,-1,-1,-1
"// huge hack to work around a JDK bug. ZipPath does not escape properly, so if there is a ?",1,1,1,1,-1,-1,-1,-1
// it does not get much more hacky than this,1,1,1,1,-1,-1,-1,-1
"// massive hack for dev mode tests, dev mode has not started yet",1,1,1,1,-1,-1,-1,-1
// now for the hacky bit,1,1,1,1,-1,-1,-1,-1
// reflection hack ... no other way to get raw props ...,1,1,1,1,-1,-1,-1,-1
// the usual ClassLoader hacks to get our copy of the TestSecurity annotation,1,1,1,1,-1,-1,-1,-1
"// this is a big of a hack, but is necessary to prevent service leakage",1,1,1,1,-1,-1,-1,-1
"// this is a bit of a hack to avoid requiring a dep on the arc extension,",1,1,1,1,-1,-1,-1,-1
"// this is a bit of a hack, but we can't just inject this normally",1,1,1,1,-1,-1,-1,-1
// this is a hack to avoid introducing circular dependencies between build steps.,1,1,1,1,-1,-1,-1,-1
"// this is a horrible hack, but it is intended to make this work in IDE's",1,1,1,1,-1,-1,-1,-1
// this is a minor hack to allow ApplicationConfig to be populated with defaults,1,1,1,1,-1,-1,-1,-1
// this is awesomely hacky,1,1,1,1,-1,-1,-1,-1
// this seems like a one off use case so for now it is just hacked in here,1,1,0,1,-1,-1,-1,-1
// todo : proper support for everything,1,1,1,1,-1,-1,-1,-1
// todo URL,1,1,1,1,-1,-1,-1,-1
"// todo from old code, do we still need it?",1,1,1,1,-1,-1,-1,-1
// todo maybe just -D is better than -J-D in this case,1,1,1,1,-1,-1,-1,-1
// todo more cleanup?,1,1,1,1,-1,-1,-1,-1
// todo timeout,1,1,1,1,-1,-1,-1,-1
// todo we need a better way to do this.,1,1,1,1,-1,-1,-1,-1
"// todo, may be bad to assume 443?",1,1,1,1,-1,-1,-1,-1
"// todo: ""moduleName@version/""",1,1,1,1,-1,-1,-1,-1
// todo: add in bounds checker,1,1,1,1,-1,-1,-1,-1
// todo: cache configuration,1,1,1,1,-1,-1,-1,-1
// todo: dev mode expects run time config to be available immediately even if static init didn't complete.,1,1,1,1,-1,-1,-1,-1
// todo: do we need config for this?,1,1,1,1,-1,-1,-1,-1
// todo: does this actually need to be threadsafe?,1,1,1,1,-1,-1,-1,-1
// todo: how should we handle non-proactive authentication here?,1,1,1,1,-1,-1,-1,-1
// todo: look at a better way of doing this,1,1,1,1,-1,-1,-1,-1
// todo: manage lifecycle of bean,1,1,1,1,-1,-1,-1,-1
// todo: more space-efficient sorted map impl,1,1,1,1,-1,-1,-1,-1
// todo: read from the full index,1,1,1,1,-1,-1,-1,-1
// todo: remove logging,1,1,1,1,-1,-1,-1,-1
// todo: replace with {@code provider()} post-Java 11,1,1,1,1,-1,-1,-1,-1
// todo: should this work for non-dev services stuff as well? What about non-default datasources,1,1,1,1,-1,-1,-1,-1
"// todo: should we log a warning that there is no annotation for the property, or just allow it?",1,1,1,1,-1,-1,-1,-1
// todo: some way to do this without a wrapper solution,1,1,1,1,-1,-1,-1,-1
// todo: this is all super hacky,1,1,1,1,-1,-1,-1,-1
// todo: this should be specific build items,1,1,1,1,-1,-1,-1,-1
// todo: why does async exit not work here,1,1,1,1,-1,-1,-1,-1
// vvv todo: add validations here vvv,1,1,1,1,-1,-1,-1,-1
"/*"";    }    @Override    public void handle(ResteasyReactiveRequestContext requestContext) throws Exception {        List<String> acceptValues = (List<String>) requestContext.getHeader(HttpHeaders.ACCEPT, false);        if (acceptValues.isEmpty()) {            requestContext.setResponseContentType(mediaType);            requestContext.setEntityWriter(writer);        } else {            boolean handled = false;            for (int i = 0; i < acceptValues.size(); i++) {                String accept = acceptValues.get(i);                // TODO: this needs to be optimised                if (accept.contains(mediaTypeString) || accept.contains(""*/",1,1,1,1,-1,-1,-1,-1
"/**         * If the deployment should use an isolated (aka parent last) classloader.         * <p>         * For tests this is generally false, as we want to share the base class path so that the         * test extension code can integrate with the deployment.         * <p>         * TODO: should this always be true?         *         * @param isolateDeployment         * @return         */",1,1,1,1,-1,-1,-1,-1
/**         * If the pom.xml file is changed then this file will be updated         *         * So we just check it for changes.         *         * TODO: is there a potential issue with rsync based implementations not being fully synced? We can just sync this file         * last         * but it gets tricky if we can't control the sync         */,1,1,1,1,-1,-1,-1,-1
"/**         * Return the most general packages used in the application         * <p>         * TODO: this likely covers almost all typical use cases, but probably needs some tweaks for extreme corner cases         */",1,1,1,1,-1,-1,-1,-1
"/**     * A yucky hack, basically attempt to make sure every thread in the common pool has     * the correct CL.     *     * It's not perfect, but as this only affects test and dev mode and not production it is better     * than nothing.     *     * Really we should just not use the common pool at all.     */",1,1,1,1,-1,-1,-1,-1
/**     * Add the class to the reflective list with full method and field access.     * Add the superclasses recursively as well as the interfaces.     * Un-indexed classes/interfaces are accumulated to be thrown as a configuration error in the top level caller method     * <p>     * TODO should we also return the return types of all methods and fields? It could contain Enums for example.     */,1,1,1,1,-1,-1,-1,-1
"/**     * Also return the raw geohash-encoded sorted set score of the item, in the form of a 52 bit unsigned integer.     * This is only useful for low level hacks or debugging and is otherwise of little interest for the general user.     *     * @return the current {@code GeoRadiusArgs}     */",1,1,1,1,-1,-1,-1,-1
"/**     * Also return the raw geohash-encoded sorted set score of the item, in the form of a 52 bit unsigned integer.     * This is only useful for low level hacks or debugging and is otherwise of little interest for the general user.     *     * @return the current {@code GeoRadiusStoreArgs}     */",1,1,1,1,-1,-1,-1,-1
/**     * ClassLoader hack to work around reactive streams API issue     * see https://github.com/eclipse/microprofile-open-api/pull/470     * <p>     * This must be deleted when it is fixed upstream     */,1,1,1,1,-1,-1,-1,-1
/**     * ClassLoader hack to work around reactive streams API issue     * see https://github.com/eclipse/microprofile-reactive-streams-operators/pull/130     *     * This must be deleted when Reactive Streams Operators 1.1 is merged     */,1,1,1,1,-1,-1,-1,-1
"/**     * Empty relativePath is a hack sometimes used to always resolve parent from repository and skip default ""../"" lookup     */",1,1,1,1,-1,-1,-1,-1
"/**     * Extensions are optional JSON blobs that can be used during registration or authentication that can enhance the     * user experience. Extensions are defined in     * <a href=""https://www.w3.org/TR/webauthn/#sctn-extensions"">https://www.w3.org/TR/webauthn/#sctn-extensions</a>.     *     * TODO: don't enable this yet and with upcoming Leve3 version vert.x may break this config     * see https://github.com/vert-x3/vertx-auth/issues/535     */",1,1,1,1,-1,-1,-1,-1
"/**     * HUGE HACK     * <p>     * config is driven from the outer dev mode startup, if the user modified test     * related config in application.properties it will cause a re-test, but the     * values will not be applied until a dev mode restart happens.     * <p>     * We also can't apply this as part of the test startup, as it is too     * late and the filters have already been resolved.     * <p>     * We manually check for application.properties changes and apply them.     */",0,1,1,1,-1,-1,-1,-1
"/**     * Huge hack, to work around the fact that there is no way to directly access this class once it is wrapped,     * we use a fake cookie     */",1,1,1,1,-1,-1,-1,-1
/**     * TODO determine section ordering     *     * @param item     * @return     */,1,1,1,1,-1,-1,-1,-1
"/**     * TODO: Fix everything in the universe to do loading properly     *     * This class exists because a lot of libraries do getClass().getClassLoader.getResource()     * instead of using the context class loader, which breaks tests as these resources are present in the     * top CL and not the base CL that is used to load libraries.     *     * This yucky yucky hack works around this, by allowing non-class files to be loaded parent first, so they     * will be loaded from the application ClassLoader.     *     * Note that the underlying reason for this 'banned element' existing in the first place     * is because other libraries do Class Loading wrong in different ways, and attempt to load     * from the TCCL as a fallback instead of as the first priority, so we need to have the banned element     * to prevent a load from the application ClassLoader (which won't work).     */",1,1,1,1,-1,-1,-1,-1
/**     * TODO: reuse the ones from QuarkusInfinispanRegionFactory as soon as they are made public.     */,1,1,1,1,-1,-1,-1,-1
"/**     * This is a bit of a hack. In dev mode we undeploy all the verticles on restart, except     * for this one     */",1,1,1,1,-1,-1,-1,-1
"/**     * Used for remote dev mode, a bit of a hack to expose the config to the client     */",1,1,1,1,-1,-1,-1,-1
// -1 because we need room for the = at the end// TODO: a more efficient matching algorithm,1,1,1,1,-1,-1,-1,-1
"// Delete the resource// TODO: not supported yet in remote dev// source.delete();// await()// .pollDelay(1, TimeUnit.SECONDS)// .atMost(1, TimeUnit.MINUTES)// .until(() -> getHttpResponse(""/lorem.txt"", 404));",1,1,1,1,-1,-1,-1,-1
// E.g. /quarkus/extensions/arc/deployment/target/classes/io/quarkus/arc/deployment/devconsole// This can happen if you run an example app in dev mode// and this app is part of a multi-module project which also declares the extension// Just try to locate the pom.properties file in the target/maven-archiver directory// Note that this hack will not work if addMavenDescriptor=false or if the pomPropertiesFile is overridden,1,1,1,1,-1,-1,-1,-1
// FIXME : this used to be non-annotated explicitly for testing purposes// added the annotation as it's illegal according to the ORM metadata validation,1,1,0,1,-1,-1,-1,-1
"// FIXME we change the order ot the Hostname resolution for native image// see https://logging.paluch.biz/hostname-lookup.html// if not, we have the following error",1,1,0,1,-1,-1,-1,-1
"// FIXME what do we do here?// either considering it is fine, either waiting for// more data to come?// lets try considering it is fine...",1,1,0,1,-1,-1,-1,-1
// FIXME: don't enable this until https://github.com/smallrye/smallrye-open-api/issues/197 has been fixed// // make sure these don't break the build when fields// @org.jboss.resteasy.annotations.jaxrs.PathParam// String pathField;// @org.jboss.resteasy.annotations.jaxrs.FormParam// String formField;// @org.jboss.resteasy.annotations.jaxrs.CookieParam// String cookieField;// @org.jboss.resteasy.annotations.jaxrs.HeaderParam// String headerField;// @org.jboss.resteasy.annotations.jaxrs.MatrixParam// String matrixField;// @org.jboss.resteasy.annotations.jaxrs.QueryParam// String queryField;//// // make sure these don't break the build when properties// public String getPathProperty() {// return null;// }//// @org.jboss.resteasy.annotations.jaxrs.PathParam// public void setPathProperty(String p) {// }//// public String getFormProperty() {// return null;// }//// @org.jboss.resteasy.annotations.jaxrs.FormParam// public void setFormProperty(String p) {// }//// public String getCookieProperty() {// return null;// }//// @org.jboss.resteasy.annotations.jaxrs.CookieParam// public void setCookieProperty(String p) {// }//// public String getHeaderProperty() {// return null;// }//// @org.jboss.resteasy.annotations.jaxrs.HeaderParam// public void setHeaderProperty(String p) {// }//// public String getMatrixProperty() {// return null;// }//// @org.jboss.resteasy.annotations.jaxrs.MatrixParam// public void setMatrixProperty(String p) {// }//// public String getQueryProperty() {// return null;// }//// @org.jboss.resteasy.annotations.jaxrs.QueryParam// public void setQueryProperty(String p) {// },1,1,0,1,-1,-1,-1,-1
"// FIXME: https://github.com/hibernate/hibernate-reactive/issues/281// }).flatMap(v -> {// Person person2 = new Person();// person2.name = ""testFLush2"";// person2.uniqueName = ""unique"";//// // FIXME should be PersistenceException see https://github.com/hibernate/hibernate-reactive/issues/280// return assertThrows(PgException.class,// () -> person2.persistAndFlush(),// ""Should have failed"");",1,1,0,1,-1,-1,-1,-1
"// FIXME: https://github.com/hibernate/hibernate-reactive/issues/281// }).flatMap(v -> {// Person person2 = new Person();// person2.name = ""testFLush2"";// person2.uniqueName = ""unique"";//// // FIXME should be PersistenceException see https://github.com/hibernate/hibernate-reactive/issues/280// return assertThrows(PgException.class,// () -> personDao.persistAndFlush(person2),// ""Should have failed"");",1,1,0,1,-1,-1,-1,-1
"// FIXME: if we make a pretend Response and go through the normal route, we will get// media type negotiation and fixed entity writer set up, perhaps it's better than// cancelling the normal route?// or make this SSE produce build-time",1,1,1,1,-1,-1,-1,-1
"// FIXME: invocation is very different between client and server, where the server doesn't treat GenericEntity specially// it's probably missing from there, while the client handles it upstack",1,1,0,1,-1,-1,-1,-1
"// FIXME: not allowed yet// @RestPath// public String getRestPathDefault(){// return ""restPathDefault"";// }// @RestPath(""restPath_Overridden"")// public String getRestPathOverridden(){// return ""restPathOverridden"";// }",1,1,0,1,-1,-1,-1,-1
"// FIXME: not supported yet// // next calls to this query will be cached// return Person.find(""name = ?1"", ""stef"").withHint(QueryHints.HINT_CACHEABLE, ""true"").list();// }).flatMap(persons -> {// Assertions.assertEquals(1, persons.size());// Assertions.assertEquals(person, persons.get(0));",1,1,0,1,-1,-1,-1,-1
"// FIXME: not supported yet// // next calls to this query will be cached// return personDao.find(""name = ?1"", ""stef"").withHint(QueryHints.HINT_CACHEABLE, ""true"").list();// }).flatMap(persons -> {// Assertions.assertEquals(1, persons.size());// Assertions.assertEquals(person, persons.get(0));",1,1,0,1,-1,-1,-1,-1
"// FIXME: paths configurable// prefix is the non-application root path, ends with a slash: defaults to /q/",1,1,0,1,-1,-1,-1,-1
// FIXME: probably close the client too? watch out that it doesn't call our close handler// which calls emitter.complete(),1,1,0,1,-1,-1,-1,-1
// FIXME: requires Hibernate support// Mutiny.Query<?> jpaQuery = createQuery();// return applyFilters(jpaQuery.getResultStream());,1,1,1,1,-1,-1,-1,-1
"// FIXME: requires Hibernate support// for (Map.Entry<String, Object> hint : hints.entrySet()) {// jpaQuery.setHint(hint.getKey(), hint.getValue());// }",1,1,0,1,-1,-1,-1,-1
"// FIXME: should be an exception, but we have incomplete support for generics ATM, so we still// have some unresolved type vars and they do pass _some_ tests// throw new UnsupportedOperationException(""Endpoint return type not supported yet: "" + returnType);",1,1,0,1,-1,-1,-1,-1
"// FIXME: spec says we should flush the headers when first message is sent or when the resource method returns, whichever// happens first",1,1,0,1,-1,-1,-1,-1
"// FIXME: this doesn't appear to pass the TCK, because it fails to decode what it throws at it// also it doesn't decode slashes (it should) and it decodes + (it should not)// return URLUtils.decode(path, StandardCharsets.UTF_8, false, null);// So let's use the Vertx decoder for now",1,1,0,1,-1,-1,-1,-1
// FIXME: this is totally wrong wrt. generics// Do not replace this with toString('/') because it doesn't use the given separator for array types,1,1,0,1,-1,-1,-1,-1
// FIXME: this may be better as context.normalisedPath() or getPath()// TODO: does this entry make sense when target is null ?,1,1,1,1,-1,-1,-1,-1
"// FIXME: this seems unnecessary, but is needed to make sure that the GraphQLClientConfigurationMergerBean// gets initialized, can this be done differently?",1,1,0,1,-1,-1,-1,-1
"// FIXME: throw if we don't have a converter// we have our element converter, see if we need to use list/set/sortedset converter around it",1,1,0,1,-1,-1,-1,-1
// FIXME: we need to refactor the serialisation of entities to bytes between here and Sse and Serialisers// and figure out where interceptors come into play,1,1,0,1,-1,-1,-1,-1
"// HACK: registration is done via statics, but cleanup is done via pre destroy// however if the bean is not used it will not be created, so no cleanup will be done// we force bean creation here to make sure the container can restart correctly",1,1,1,1,-1,-1,-1,-1
// HACK: we launch the application in this method instead of in beforeEach in order to ensure that// tests that use @BeforeEach will have a chance to run before the application is launched,1,1,1,1,-1,-1,-1,-1
"// HttpServerRequest, HttpServerRequest are Vert.x types so it's not necessary to have it injectable via @Context,// however we do use it in the Quickstarts so let's make it work// @RequestScoped// @Produces// HttpServerRequest httpServerRequest() {// return CurrentRequest.get().getContext().request();// }// @RequestScoped// @Produces// HttpServerResponse httpServerResponse() {// return CurrentRequest.get().getContext().response();// }// TODO: ideally we would declare this bean with a lesser priority and let Quarkus override it using a higher priority,// however that is not possible because @Priority cannot be applied to methods// @ApplicationScoped// @Produces// Providers providers() {// return getContext().getProviders();// }",1,1,1,1,-1,-1,-1,-1
"// Make proxies available through a constant;// this is a hack to avoid introducing circular dependencies between build steps.//// If we just passed the proxy definitions to #build as a normal build item,// we would have the following dependencies://// #pregenProxies => ProxyDefinitionsBuildItem => #build => BeanContainerListenerBuildItem// => Arc container init => BeanContainerBuildItem// => some RestEasy Reactive Method => BytecodeTransformerBuildItem// => build step that transforms bytecode => TransformedClassesBuildItem// => #pregenProxies//// Since the dependency from #preGenProxies to #build is only a static init thing// (#build needs to pass the proxy definitions to the recorder),// we get rid of the circular dependency by defining a constant// to pass the proxy definitions to the recorder.// That way, the dependency is only between #pregenProxies// and the build step that generates the bytecode of bytecode recorders.",1,1,1,1,-1,-1,-1,-1
"// Max-Age=secs ... or use old ""Expires"" format// TODO RFC2965 Discard",1,1,1,1,-1,-1,-1,-1
// Methods declared on implemented interfaces// TODO support interfaces default methods,1,1,1,1,-1,-1,-1,-1
// On Windows without a known good emulator// TODO: optimally we would check if Win32 getConsoleMode has// ENABLE_VIRTUAL_TERMINAL_PROCESSING enabled or enable it via// setConsoleMode.// For now we turn it off to not generate noisy output for most// users.// Must be on some Unix variant or ANSI-enabled windows terminal...,1,1,1,1,-1,-1,-1,-1
"// Query// TODO ideally we should align on ORM and use 16 as a default, but that would break applications// because of https://github.com/hibernate/hibernate-reactive/issues/742",1,1,1,1,-1,-1,-1,-1
// Register the default scope for @SearchExtension and make such beans unremovable by default// TODO make @SearchExtension beans unremovable only if the corresponding PU actually exists and is enabled// (I think there's a feature request for a configuration property to disable a PU at runtime?),1,1,1,1,-1,-1,-1,-1
// Required to support well known extensions e.g. Envers// TODO: should we introduce a new integrator SPI to limit these to extensions supported by Quarkus?,1,1,1,1,-1,-1,-1,-1
// TODO FT should be smart enough and only initialize the stuff in the recorder if it's really needed// The FaultToleranceInterceptor needs to be registered as unremovable due to the rest-client integration - interceptors// are currently resolved dynamically at runtime because per the spec interceptor bindings cannot be declared on interfaces,1,1,1,1,-1,-1,-1,-1
"// TODO IMPLEMENT ME\n"" + ""// return super._"" + method.getNameAsString() + ""("" + method.getParameters().stream().map(NodeWithSimpleName::getNameAsString).collect(Collectors.joining("","")) + "")\n"" + ""// .map(r -> decode(r));\n"" + ""return null;"" + ""\n}"";",1,1,1,1,-1,-1,-1,-1
"// TODO IMPLEMENT ME\n"" + ""// this.tx.enqueue(decoding); // "" + expectedType + ""\n"" + ""return this.reactive._"" + method.getNameAsString() + ""("" + method.getParameters().stream().map(NodeWithSimpleName::getNameAsString).collect(Collectors.joining("","")) + "")\n"" + ""    .invoke(this::queuedOrDiscard).replaceWithVoid();\n"" + ""\n}"";",1,1,1,1,-1,-1,-1,-1
"// TODO Ideally we'd rely on separate configuration for Hibernate Reactive,// both in general and specifically to enable/disable the extension.// But we would first need to split common code to a separate artifact,// and that's a lot of work that will conflict with other ongoing changes,// so we better wait.// See also https://github.com/quarkusio/quarkus/issues/13425",1,1,1,1,-1,-1,-1,-1
"// TODO Re-enable logging when RFC2965 is implemented// log( (version==1) ? ""Set-Cookie2"" : ""Set-Cookie"");",1,1,1,1,-1,-1,-1,-1
// TODO This needs to be challenged:// Always create a duplicated context because each REST Client invocation must have its own context// A separate context allows integrations like OTel to create a separate Span for each invocation (expected),1,1,1,1,-1,-1,-1,-1
// TODO This requirement should be relaxed in vertx 4.0.3+// https://github.com/vert-x3/vertx-web/pull/1881,1,1,1,1,-1,-1,-1,-1
// TODO allow multiple streams in the same catalog for now// defaultQuarkusVersion.get();,1,1,1,1,-1,-1,-1,-1
"// TODO for some reason, this must be a top-level type, not a nested/inner type,// in order for annotations on type parameters to be detected.// See NestedContainerTypeCustomValueExtractorTest",1,1,1,1,-1,-1,-1,-1
"// TODO large arrays can still generate a fair bit of bytecode, and there appears to be a gizmo issue that prevents casting to an array// fix this later",1,1,1,1,-1,-1,-1,-1
// TODO move this to runtime init once we implement in Hibernate ORM a way// to remove entity types from the metamodel on runtime init,1,1,1,1,-1,-1,-1,-1
"// TODO remove this code in 3.0, it is only here to ensure migration after the removal of// ""_trigger"" suffix and the need to reschedule jobs due to configuration change between build// and deploy time",1,1,1,1,-1,-1,-1,-1
"// TODO should it be dialects// TODO should it be shortcuts like ""postgresql"" ""h2"" etc",1,1,1,1,-1,-1,-1,-1
"// TODO sun.security.jca.GetInstance is not accessible in JDK 11. We cannot add an export// as we still compile with a JDK 8 target. So for now, we will have to leave with this// and only override getDefault().// @Substitute// public static Target_javax_net_ssl_SSLContext getInstance(String protocol)// throws NoSuchAlgorithmException {// Objects.requireNonNull(protocol, ""null protocol name"");//// if (!SslContextConfiguration.isSslNativeEnabled()) {// return (Target_javax_net_ssl_SSLContext) (Object) getDefault();// }//// GetInstance.Instance instance = GetInstance.getInstance(""SSLContext"", SSLContextSpi.class, protocol);// return new Target_javax_net_ssl_SSLContext((SSLContextSpi) instance.impl, instance.provider,// protocol);// }//// @Substitute// public static Target_javax_net_ssl_SSLContext getInstance(String protocol, String provider)// throws NoSuchAlgorithmException, NoSuchProviderException {// Objects.requireNonNull(protocol, ""null protocol name"");//// if (!SslContextConfiguration.isSslNativeEnabled()) {// return (Target_javax_net_ssl_SSLContext) (Object) getDefault();// }//// GetInstance.Instance instance = GetInstance.getInstance(""SSLContext"", SSLContextSpi.class, protocol, provider);// return new Target_javax_net_ssl_SSLContext((SSLContextSpi) instance.impl, instance.provider,// protocol);// }//// @Substitute// public static Target_javax_net_ssl_SSLContext getInstance(String protocol, Provider provider)// throws NoSuchAlgorithmException {// Objects.requireNonNull(protocol, ""null protocol name"");//// if (!SslContextConfiguration.isSslNativeEnabled()) {// return (Target_javax_net_ssl_SSLContext) (Object) getDefault();// }//// GetInstance.Instance instance = GetInstance.getInstance(""SSLContext"", SSLContextSpi.class, protocol, provider);// return new Target_javax_net_ssl_SSLContext((SSLContextSpi) instance.impl, instance.provider,// protocol);// }",1,1,1,1,-1,-1,-1,-1
// TODO this class is only needed by the Spring Data JPA module and would not be placed there if it weren't for a dev-mode classloader issue// see https://github.com/quarkusio/quarkus/issues/6214,1,1,1,1,-1,-1,-1,-1
"// TODO this whole method is really just a hack that duplicates// io.quarkus.hibernate.orm.deployment.HibernateOrmProcessor.handleHibernateORMWithNoPersistenceXml// and customizes it for Hibernate Reactive.// we should work on a way to merge the two methods while still having some behavior specific to// HR/ORM, because it's likely the HR implementation is missing some features,// and we've seen in the past that features we add to handleHibernateORMWithNoPersistenceXml// tend not to be added here.// See https://github.com/quarkusio/quarkus/issues/28629.",1,1,1,1,-1,-1,-1,-1
"// TODO when we switch to the non-legacy method, don't forget to update the definition of the default bean// of type DataSourceTenantConnectionResolver (add the @PersistenceUnitExtension qualifier to that bean)",1,1,1,1,-1,-1,-1,-1
"// TODO// This really isn't good enough.  We should recursively add reflection for all method and field types of the parameter// and return type.  Otherwise Jackson won't work.  In AWS Lambda HTTP extension, the whole jackson model is registered// for reflection.  Shouldn't have to do this.",1,1,1,1,-1,-1,-1,-1
// TODO// Two different output options can not be specified together,1,1,1,1,-1,-1,-1,-1
"// TODO: API for optimised charsequence creation// public static final CharSequence SSE_CONTENT_TYPE = io.vertx.core.http.HttpHeaders.createOptimized(""X-SSE-Content-Type"");",1,1,1,1,-1,-1,-1,-1
"// TODO: By default quarkus.oidc.application-type = service// Also look at other options (web-app, hybrid)",1,1,1,1,-1,-1,-1,-1
// TODO: Determine if there is a more automated way we can configure the metrics// from the annotations.,1,1,1,1,-1,-1,-1,-1
// TODO: Remove this method (maybe in 1.6.x of Quarkus or later) if there are no user reports// of the WARN message issued from this method. See comments in https://github.com/quarkusio/quarkus/pull/9246// for details,1,1,1,1,-1,-1,-1,-1
// TODO: This is using the old deprecated LambdaClient test API.  I am keeping it here to test backward compatibility// these tests will need to be ported once LambdaClient is removed from Quarkus.,1,1,1,1,-1,-1,-1,-1
// TODO: Workaround for https://github.com/quarkusio/quarkus/issues/28812// We need to remove the duplicate paths of the generated Ingress. The following logic can be removed after// bumping the next Dekorate version that includes the fix: https://github.com/dekorateio/dekorate/pull/1092.,1,1,1,1,-1,-1,-1,-1
// TODO: add support for inherited business methods// noinspection OptionalGetWithoutIsPresent,1,1,1,1,-1,-1,-1,-1
"// TODO: as this is a copy of the class in the 'quarkus-integration-test-kubernetes-standard',// maybe we should create a new kubernetes test module to contain this class?",1,1,1,1,-1,-1,-1,-1
// TODO: as this is request scoped we loose the type of the Principal// if this is important you can just inject the identity,1,1,1,1,-1,-1,-1,-1
"// TODO: at the moment this only looks for the class name, it does not make sure it is used// by a class tag. In practice this is likely fine, especially as this is just used for optimisations.",1,1,1,1,-1,-1,-1,-1
"// TODO: auto generate INDEX.LIST// this may have implications for Camel though, as they change the layout// also this is only really relevant for the thin jar layout",1,1,1,1,-1,-1,-1,-1
"// TODO: because of dev mode we iterate, to see if any resources were added// not for .class files though, adding them causes a restart// this is very important for bytebuddy performance",1,1,1,1,-1,-1,-1,-1
// TODO: converters// query params have to be set on a method-level web target (they vary between invocations),1,1,1,1,-1,-1,-1,-1
"// TODO: do we actually want vert.x websockets?// they are not our primary API, but they are easy to support",1,1,1,1,-1,-1,-1,-1
// TODO: get rid of ByteArrayInputStream// TODO: maybe we could extract something closer to input stream from attribute,1,1,1,1,-1,-1,-1,-1
// TODO: in theory resources could have been added in dev mode// but I don't thing this really matters for this code path,1,1,1,1,-1,-1,-1,-1
"// TODO: instead of returning a boolean, the info about available// recommendations should be reflected in ProjectState",1,1,1,1,-1,-1,-1,-1
// TODO: replace with a simple array based?// TODO: we do `discardReadBytes` on it which is not optimal - copies array every time,1,1,1,1,-1,-1,-1,-1
"// TODO: special primitive handling?// FIXME: by using the element type, we're also getting converters for parameter collection types such as List/Array/Set// but also others we may not want?",1,1,1,1,-1,-1,-1,-1
// TODO: string switch// if (keyIter.nextSegmentEquals(name)) {,1,1,1,1,-1,-1,-1,-1
// TODO: the spec doesn't seem to be totally clear about the sorting here// the way the writers are sorted here takes the distance from the requested type// first and foremost and then uses the rest of the criteria,1,1,1,1,-1,-1,-1,-1
"// TODO: there is not really any way to handle @ApplicationPath, we could do something for @QuarkusTest apps but we can't for// native apps, so we just have to document the limitation",1,1,1,1,-1,-1,-1,-1
"// TODO: there is not really any way to handle @ApplicationPath, we could do something for @QuarkusTest apps, but we can't for// native apps, so we just have to document the limitation",1,1,1,1,-1,-1,-1,-1
// TODO: this annotation transformer is too simplistic and should be replaced// by whatever build item comes out of the implementation// of https://github.com/quarkusio/quarkus/issues/16572,1,1,1,1,-1,-1,-1,-1
"// TODO: this can be replaced with Multi.onItem().delayIt when it exists// TODO: this delay should not even be necessary, the queue is created on// subscriber connect, so we delay to make sure it is connected// we should be able to just define the queue in broker.xml, but that does not// work atm, see https://github.com/smallrye/smallrye-reactive-messaging/issues/555",1,1,1,1,-1,-1,-1,-1
// TODO: this code path is only hit when start fails in dev mode very early in the process// the recovery code will fail without this as it cannot read any properties such as// the HTTP port or logging info,1,1,1,1,-1,-1,-1,-1
// TODO: this is a bit ugly// we don't necessarily need these artifacts// but if we include them it does mean that you can auto create docker images// and deploy to kube etc// for an ordinary build with no native and no docker this is a waste,1,1,1,1,-1,-1,-1,-1
// TODO: this is a huge hack to avoid loading XML parsers// this needs a proper SPI,1,1,1,1,-1,-1,-1,-1
"// TODO: this is a huge hack, at the moment this just guesses the source location// this can be improved, but as this is for testing extensions it is probably fine for now",1,1,1,1,-1,-1,-1,-1
"// TODO: this is almost certainly wrong when genericParameterTypes[i] is a ParameterizedType not handle above,// but there is no obvious way to handle it...",1,1,1,1,-1,-1,-1,-1
"// TODO: this is probably broken in gradle// if (Files.exists(augmentOutcome.getConfigDir())) {// copyFiles(augmentOutcome.getConfigDir(), runnerZipFs, services);// }",1,1,1,1,-1,-1,-1,-1
// TODO: this should be changed to an exception after 1.4// really it should be an exception now,1,1,1,1,-1,-1,-1,-1
"// TODO: this should not use the logger, it should print a nicer status// first print the full failures",1,1,1,1,-1,-1,-1,-1
"// TODO: we should make sure ArC always picks up these classes and makes them beans// but until we get a bug report about it lets not worry for now, as I don't think anyone// really uses this",1,1,1,1,-1,-1,-1,-1
"// TODO: while jbang supports packages, the generation command does not// Should the version be stored in metadata anywhere? Is that useful for script management?",1,1,1,1,-1,-1,-1,-1
"// TODO: will fix this in the upcoming version of æsh// style options are limited unless we crack into jansi ourselves// buffer.strong(""["").project(name).strong(""]"").a("" "").a(message);",1,1,1,1,-1,-1,-1,-1
"// This is a bit of a hack but if the current project does not contain any// sources nor resources, we need to create an empty classes dir to satisfy the resolver// as this project will appear as the root application artifact during the bootstrap",1,1,1,1,-1,-1,-1,-1
"// Use deprecated API in org.hibernate.Query that will be moved to org.hibernate.query.Query on Hibernate 6.0// FIXME: requires Hibernate support// @SuppressWarnings(""deprecation"")// RowSelection options = jpaQuery.unwrap(org.hibernate.query.Query.class).getQueryOptions();// options.setFirstRow(null);",1,1,0,1,-1,-1,-1,-1
"// Use deprecated API in org.hibernate.Query that will be moved to org.hibernate.query.Query on Hibernate 6.0// FIXME: requires Hibernate support// @SuppressWarnings(""deprecation"")// RowSelection options = jpaQuery.unwrap(org.hibernate.query.Query.class).getQueryOptions();// options.setFirstRow(null);// options.setMaxRows(null);// FIXME: why would we even do that? those are the defaults, let's leave them blank// if we don't, we get a LIMIT// jpaQuery.setFirstResult(0);// jpaQuery.setMaxResults(Integer.MAX_VALUE);",1,1,0,1,-1,-1,-1,-1
"// Use the public API RuntimeResourceAccess with GraalVM >= 22.3// TODO: Remove reflective access once support for GraalVM < 22.3 gets dropped and directly invoke// RuntimeResourceAccess.addResource(ClassLoader.getSystemClassLoader().getUnnamedModule(), resource);",1,1,1,1,-1,-1,-1,-1
"// XXX RFC2965 not referenced in Servlet Spec// Set-Cookie2 is not supported by Netscape 4, 6, IE 3, 5// Set-Cookie2 is supported by Lynx and Opera// Need to check on later IE and FF releases but for now...// RFC2109",1,1,1,1,-1,-1,-1,-1
"// a bit of a hack, but if we sent this the app is going to restart// if we attempt to connect too soon it won't be ready",1,1,1,1,-1,-1,-1,-1
"// a hack around class loading// this is always loaded in the root class loader with jboss-logmanager,// however it may also be loaded in an isolated CL when running in dev// or test mode. If it is in an isolated CL we load the handler from// the class on the system class loader so they are equal// TODO: should this class go in its own module and be excluded from isolated class loading?",1,1,1,1,-1,-1,-1,-1
"// add an empty, non-null entity in order to ensure that the response will be used as is// TODO: this seems to be an edge case, but perhaps it needs to be handled by RequestDeserializeHandler?",1,1,1,1,-1,-1,-1,-1
"// add the parameter// TODO: this is not guarded against large collections, probably not an issue in practice",1,1,1,1,-1,-1,-1,-1
// assertNotNull(server.getAttributes().get(NET_PEER_IP));//now shows up on net.sock.peer.addr. Not available on attributes yet. FIXME// assertNotNull(server.getAttributes().get(NET_PEER_PORT)); // same for port. FIXME,1,1,0,1,-1,-1,-1,-1
// assertThat(model.getDependencyManagement().getDependencies().size()).isEqualTo(expectedBoms.size());// TODO the order should be predictable,1,1,1,1,-1,-1,-1,-1
// awesome/horrible hack// we know from the index which classes are part of the current application// we add ANSI codes for bold and underline to their names to display them more prominently,1,1,1,1,-1,-1,-1,-1
// copied from ASM// TODO: remove when the change in https://github.com/raphw/byte-buddy/pull/1279 is available,1,1,1,1,-1,-1,-1,-1
// copied from KubernetesHandler// TODO: update dekorate to make KubernetesHandler extendable,1,1,1,1,-1,-1,-1,-1
// eat a LF if there's one left// FIXME: if our buffer cuts here that's a bad spot,1,1,0,1,-1,-1,-1,-1
"// hack, we don't want to link to the JUL version, but the jboss logging version// this seems like a one off use case so for now it is just hacked in here// if there are other use cases we should do something more generic",1,1,1,1,-1,-1,-1,-1
"// honestly, isn't reconnect contradictory with completion?// FIXME: Reconnect settings?// For now we don't want multi to reconnect",1,1,0,1,-1,-1,-1,-1
"// horrible hack// we really need a compiler per module but we are not setup for this yet// if a module has test scoped dependencies that are not in the application then// compilation can fail// note that we already have a similar issue with provided scoped deps, and so far nobody// has complained much",1,1,1,1,-1,-1,-1,-1
"// huge hack to work around a JDK bug. ZipPath does not escape properly, so if there is a ?// in the path then it ends up in the query string and everything is screwy.// if there are multiple question marks the extra ones end up in the path and not the query string as you would expect",1,1,1,1,-1,-1,-1,-1
// huge hack// jbang does not consider the pom when resolving dependencies// so can get the wrong version of asm// we remove it from the deps list so we can use the correct one,1,1,1,1,-1,-1,-1,-1
"// if test classes is a dir, we should also check whether test resources dir exists as a separate dir (gradle)// TODO: this whole app/test path resolution logic is pretty dumb, it needs be re-worked using proper workspace discovery",1,1,1,1,-1,-1,-1,-1
// if this is set then everything needs the body handler installed// TODO: config etc,1,1,1,1,-1,-1,-1,-1
// initialize build time properties from data in the jar's META-INF/MANIFEST.MF// TODO: actually implement this somehow so these values are baked in at build time,1,1,1,1,-1,-1,-1,-1
// it does not get much more hacky than this// hopefully we can work around it in the next Vert.x version,1,1,1,1,-1,-1,-1,-1
"// massive hack for dev mode tests, dev mode has not started yet// so we don't have any way to load this correctly from config",1,1,1,1,-1,-1,-1,-1
// no need to cancel on complete// FIXME: are we interested in async completion?,1,1,0,1,-1,-1,-1,-1
// now cut out all the restassured internals// TODO: this should be pluggable,1,1,1,1,-1,-1,-1,-1
// now it is created we wait for Jacoco to stop// this is awesomely hacky,1,1,1,1,-1,-1,-1,-1
"// ok, lets make a guess// this is a horrible hack, but it is intended to make this work in IDE's",1,1,1,1,-1,-1,-1,-1
"// provideCapabilities(chainBuilder);// TODO: we load everything from the deployment class loader// this allows the deployment config (application.properties) to be loaded, but in theory could result// in additional stuff from the deployment leaking in, this is unlikely but has a bit of a smell.",1,1,1,1,-1,-1,-1,-1
"// response.closeHandler(v -> {// // FIXME: notify of client closing// System.err.println(""Server connection closed"");// });",1,1,0,1,-1,-1,-1,-1
// setup the classes that can be hot reloaded// this code needs to be kept in sync with the code in IsolatedRemoteDevModeMain// todo: look at a better way of doing this,1,1,1,1,-1,-1,-1,-1
// super inefficient// TODO: write a stream that just uses the existing vert.x buffers,1,1,1,1,-1,-1,-1,-1
// the TCK allows the body to be read as a form param and also as a body param// the spec is silent about this// TODO: this is really really horrible and hacky and needs to be fixed.,1,1,1,1,-1,-1,-1,-1
// the arguments were not loaded from TCCL so we need to deep clone them into the TCCL// because the test method runs from a class loaded from the TCCL// TODO: make this more pluggable,1,1,1,1,-1,-1,-1,-1
// the generated invoker will always return a CompletionStage// TODO: avoid hard coding this and use an SPI to communicate the info with the invoker generation code,1,1,1,1,-1,-1,-1,-1
// this captures the end of the response// FIXME: won't this call complete twice()?,1,1,0,1,-1,-1,-1,-1
"// this is a big of a hack, but is necessary to prevent service leakage// in some situations (looking at you gradle) the parent can contain the same// classes as the application. The parent aggregation stops this being a problem// in most cases, however if there are no actual implementations of the service// in the application then this can still cause problems// this approach makes sure that we don't load services that would result// in a ServiceConfigurationError// see https://github.com/quarkusio/quarkus/issues/7996",1,1,1,1,-1,-1,-1,-1
"// this is a bit of a hack to avoid requiring a dep on the arc extension,// as this would mean we cannot use this to test the extension",1,1,1,1,-1,-1,-1,-1
"// this is a bit of a hack, but we can't just inject this normally// this is a runtime property value, but also a build time property value// as when running in dev mode they are both basically equivalent",1,1,1,1,-1,-1,-1,-1
"// this is a bit yuck, but we need replace the default// exit handler in the runtime class loader// TODO: look at implementing a common core classloader, that removes the need for this sort of crappy hack",1,1,1,1,-1,-1,-1,-1
"// this is login, so the user will want to bump the counter// FIXME: do we need the auth here? likely the user will know it and will just ++ on the DB-stored counter, no?",1,1,0,1,-1,-1,-1,-1
// this layer ensures that the working directory is writeable// see https://github.com/GoogleContainerTools/jib/issues/1270// TODO: is this needed for all working directories?,1,1,1,1,-1,-1,-1,-1
"// this simply replaces the whitespace characters (not part of a path variable) with %20// TODO: this might have to be more complex, URL encoding maybe?// zero braces indicates we are outside of a variable",1,1,1,1,-1,-1,-1,-1
"// todo: read from the full index// TODO: this is not 100% correct, discovery needs to be based on class name// we can fix it when someone complains",1,1,1,1,-1,-1,-1,-1
// todo: this is all super hacky// we need better SPI's around this// we don't handle conversion at all,1,1,1,1,-1,-1,-1,-1
// todo: why does async exit not work here// Quarkus.asyncExit();// end(conn);,1,1,1,1,-1,-1,-1,-1
// transform the bean param// FIXME: pretty sure this doesn't work with generics,1,1,1,1,-1,-1,-1,-1
// vvv todo: add validations here vvv// return result,1,1,1,1,-1,-1,-1,-1
// we ban these interfaces because they are new to Java 12 and are used by java.lang.String which// means that they cannot be included in bytecode if we want to have application built with Java 12+ but targeting Java 8 - 11// actually run on those older versions// TODO:  add a extensible banning mechanism based on predicates if we find that this set needs to grow...,1,1,1,1,-1,-1,-1,-1
// we found one// todo URL,1,1,1,1,-1,-1,-1,-1
// we just assume properties are null by default// TODO: is this a valid assumption? Should we check this by creating an instance?,1,1,1,1,-1,-1,-1,-1
// we just request shutdown and unblock the main thread// we let the application main thread take care of actually exiting// TODO: if the main thread is not actively waiting to exit should we interrupt it?,1,1,1,1,-1,-1,-1,-1
"// we need to use the shared network loaded from the Augmentation ClassLoader because that ClassLoader// is what the test launching process (that has access to the curated application) has access to// FIXME: This is an ugly hack, but there is not much we can do...",1,1,1,1,-1,-1,-1,-1
"// we're not on a Vert.x thread, we can block, and we assume the intercepted method is blocking// FIXME: should we require a @Blocking annotation?",1,1,0,1,-1,-1,-1,-1
"// wrap it up into a ""jar"" protocol URL// horrible hack to deal with '?' characters in the URL// seems to be the only way, the URI constructor just does not let you handle them in a sane way",1,1,1,1,-1,-1,-1,-1
"/**     * If the deployment should use an isolated (aka parent last) classloader.     * <p>     * For tests this is generally false, as we want to share the base class path so that the     * test extension code can integrate with the deployment.     * <p>     * TODO: should this always be true?     *     * @param isolateDeployment     * @return     */",1,1,1,1,-1,-1,-1,-1
/**     * If the pom.xml file is changed then this file will be updated     *     * So we just check it for changes.     *     * TODO: is there a potential issue with rsync based implementations not being fully synced? We can just sync this file     * last     * but it gets tricky if we can't control the sync     */,1,1,1,1,-1,-1,-1,-1
"/**     * Return the most general packages used in the application     * <p>     * TODO: this likely covers almost all typical use cases, but probably needs some tweaks for extreme corner cases     */",1,1,1,1,-1,-1,-1,-1
"/** * Returns a power of two table size for the given desired capacity. * See Hackers Delight, sec 3.2 */",1,1,0,1,-1,-1,-1,-1
// Here 6000 is a hack.,1,1,1,1,-1,-1,-1,-1
"// TODO Fix, see branch fix-haversine-test-attempt and run",0,1,1,1,-1,-1,-1,-1
// TODO the below column was downgraded to short. We need to support type downgrading of compatible types when joining,1,1,1,1,-1,-1,-1,-1
// TODO what about FREEBSD_ARM64?,0,1,1,1,-1,-1,-1,-1
// TODO(puzpuzpuz):,1,1,0,1,-1,-1,-1,-1
// TODO(puzpuzpuz): re-enable when we properly support dropping WAL tables.,1,1,1,1,-1,-1,-1,-1
// TODO(puzpuzpuz): this implementation is broken because of ILP I/O threads' symbol cache,1,1,1,1,-1,-1,-1,-1
// TODO(puzpuzpuz): truncate() in WalWriter seems broken when it comes to symbols; re-enable the test when it's fixed.,1,1,1,1,-1,-1,-1,-1
"// TODO: Add ""assertMemoryLeak(() -> { .. });""  - There seems to be an issue with an open FD that gets closed.",1,1,1,1,-1,-1,-1,-1
"// TODO: Update does not follow the usual path, like insert. To be able to",1,1,1,1,-1,-1,-1,-1
"// TODO: avoid reading dirty distinct counts from _txn file, add new file instead",1,1,1,1,-1,-1,-1,-1
// TODO: bits GeoHash literal,1,1,1,1,-1,-1,-1,-1
// TODO: close writerConfig. We currently keep it opened to prevent users from,1,1,1,1,-1,-1,-1,-1
// TODO: configure size,1,1,0,1,-1,-1,-1,-1
// TODO: find out why files remain on Windows. They are not opened by anything,1,1,1,1,-1,-1,-1,-1
"// TODO: fix; fails on Cannot invoke ""io.questdb.griffin.model.QueryColumn.getAst()"" because ""queryColumn"" is null",1,1,1,1,-1,-1,-1,-1
// TODO: getCursor will open partitions where their path may be a soft link to the partition in,1,1,1,1,-1,-1,-1,-1
"// TODO: if it's WAL enabled, table unlock can happen here, before the data is written",1,1,1,1,-1,-1,-1,-1
// TODO: isSoftLink does not work for windows,1,1,1,1,-1,-1,-1,-1
// TODO: isSoftLink is not working on windows,1,1,1,1,-1,-1,-1,-1
// TODO: make sequencer distressed and try to reconcile on sequencer opening,1,1,1,1,-1,-1,-1,-1
"// TODO: optimise by copying column indexes, types of the columns used in SET clause in the UPDATE only",1,1,1,1,-1,-1,-1,-1
// TODO: parsePhaseBindVariableCount have to be checked before parseQueryText and fed into it to serve as type hints !,1,1,1,1,-1,-1,-1,-1
// TODO: potentially we can merge with existing data,1,1,1,1,-1,-1,-1,-1
"// TODO: rename column is non transactional on File System. When file rename fails, metadata does not match files on the disk",1,1,1,1,-1,-1,-1,-1
// TODO: support big binary parameter buffers (epic),1,1,1,1,-1,-1,-1,-1
// TODO: test with order by x*2 in outer query,1,1,1,1,-1,-1,-1,-1
// TODO: there is no binary representation allowing to represent less than 5 bits,1,1,1,1,-1,-1,-1,-1
"// TODO: this is broken, the expected result order for ""select * from tab"" in the presence",1,1,1,1,-1,-1,-1,-1
// TODO: this should be some kind of warning probably that different wals adding the same column concurrently,1,1,1,1,-1,-1,-1,-1
// TODO: throw specific WAL exception to indicate that WAL transaction is invalid,1,1,1,1,-1,-1,-1,-1
// This is a hack to deal with RT package problem,1,1,1,1,-1,-1,-1,-1
// This is a hack. pg_index.indkey in PG is an int vector. We have it as INT,1,1,1,1,-1,-1,-1,-1
"// check if _todo_ file is consistent, if not, we just ignore its contents and reset hash",1,1,1,1,-1,-1,-1,-1
// remove _todo,1,1,1,1,-1,-1,-1,-1
// remove column files has to be done after _todo is removed,1,1,1,1,-1,-1,-1,-1
// rename column files has to be done after _todo is removed,1,1,1,1,-1,-1,-1,-1
"// this is a hack metadata, which will be able to validate any column name as index 0 and type LONG",1,1,1,1,-1,-1,-1,-1
"// this is a hack, when we have column top we can have only of the two:",1,1,1,1,-1,-1,-1,-1
// this is hack for populating a table without designated timestamp,1,1,1,1,-1,-1,-1,-1
// todo - 1. do not disconnect,1,1,1,1,-1,-1,-1,-1
// todo:  does not work,1,1,1,1,-1,-1,-1,-1
// todo: adjust tablespace,1,1,1,1,-1,-1,-1,-1
"// todo: cache small endian type sizes and do not check if type is valid - its coming from metadata, must be always valid",1,1,1,1,-1,-1,-1,-1
// todo: check all assertContains() usages,1,1,1,1,-1,-1,-1,-1
// todo: check what happens when this code cannot read file,1,1,1,1,-1,-1,-1,-1
// todo: configure the following,1,1,1,1,-1,-1,-1,-1
// todo: do we need the number of columns for 'relnatts'?,1,1,1,1,-1,-1,-1,-1
// todo: explore what happens when a table is renamed,1,1,1,1,-1,-1,-1,-1
// todo: expose this flag on CREATE TABLE statement,1,1,1,1,-1,-1,-1,-1
"// todo: import ""cancel"" tries to remove WAL table, which does not work correctly on this branch",1,1,1,1,-1,-1,-1,-1
"// todo: in ""simple"" mode we do not support this SQL:",1,1,1,1,-1,-1,-1,-1
// todo: introduce fairness factor,1,1,1,1,-1,-1,-1,-1
// todo: investigate if we can map file from 0 offset and have the logc in this class done by the OS,1,1,1,1,-1,-1,-1,-1
// todo: maxUncommittedRows where from ?,1,1,1,1,-1,-1,-1,-1
// todo: pass thru various PG modes,1,1,0,1,-1,-1,-1,-1
// todo: rename,1,1,1,1,-1,-1,-1,-1
// todo: simple mode doesn't work because PG sends timestamp as:,1,1,1,1,-1,-1,-1,-1
// todo: supply bitset to indicate which ops are supported and which arent,1,1,1,1,-1,-1,-1,-1
// todo: suspended,1,1,1,1,-1,-1,-1,-1
// todo: test key write failure,0,1,1,1,-1,-1,-1,-1
// todo: this can be unsuccessful,1,1,1,1,-1,-1,-1,-1
// todo: this is not parsed correctly. Parser/Optimiser removes group by clause.,1,1,1,1,-1,-1,-1,-1
"// todo: this is very slow, refactor",1,1,1,1,-1,-1,-1,-1
// todo: this makes no sense,1,1,1,1,-1,-1,-1,-1
// todo: was someone doing this?,1,1,1,1,-1,-1,-1,-1
"// todo: we are opening columns incrementally, e.g. if we don't have enough objects",1,1,1,1,-1,-1,-1,-1
// todo: when order by coincides with keyColumn and there is index we can incorporate,1,1,1,1,-1,-1,-1,-1
// todo: when we have nothing for prepared statement name we need to produce an error,1,1,1,1,-1,-1,-1,-1
"// trick constructor into thinking ""_todo"" file exists",1,1,1,1,-1,-1,-1,-1
// we have to have _todo to restore _meta should anything go wrong,1,1,1,1,-1,-1,-1,-1
"/**     * Returns a power of two table size for the given desired capacity.     * See Hackers Delight, sec 3.2     */",1,1,0,1,-1,-1,-1,-1
"// CharSequence are mutable, but in this case CharSequences were used as map keys// hence I don't assume they would be mutable// todo: explore what happens when a table is renamed",1,1,1,1,-1,-1,-1,-1
// Contiguous mapped with offset readable memory// todo: investigate if we can map file from 0 offset and have the logc in this class done by the OS,1,1,1,1,-1,-1,-1,-1
// Here 6000 is a hack.// Difference between avg(double) and avg(long) depends on column values range and rows count.,1,1,1,1,-1,-1,-1,-1
"// Row by row updates for now// This should happen parallel per file (partition and column)// TODO: getCursor will open partitions where their path may be a soft link to the partition in// cold storage, which we want to keep read only. For now updates on such partitions do not fail,// i.e. they go through and modify the cold storage file system.",1,1,1,1,-1,-1,-1,-1
// Something messed up in sequencer.// There is a transaction in WAL but no structure change record.// TODO: make sequencer distressed and try to reconcile on sequencer opening// or skip the transaction?,1,1,1,1,-1,-1,-1,-1
"// TODO Fix, see branch fix-haversine-test-attempt and run// mvn test -Dtest=O3FailureTest,O3MaxLagTest,HaversineDistDegreeGroupByFunctionFactoryTest// for stable reproduce// select s, haversine_dist_deg(lat, lon, k), k from tab sample by 3h fill(linear)",1,1,1,1,-1,-1,-1,-1
// TODO(puzpuzpuz): this implementation is broken because of ILP I/O threads' symbol cache// and also concurrent table readers,1,1,1,1,-1,-1,-1,-1
// TODO(puzpuzpuz):// Get rid of this class in favor of StringSink once we drop support for Java 8 where j.u.r.Matcher// has no method overloads for StringBuilder.,1,1,1,1,-1,-1,-1,-1
"// TODO: Add ""assertMemoryLeak(() -> { .. });""  - There seems to be an issue with an open FD that gets closed.// todo: simple mode doesn't work because PG sends timestamp as:// dateadd('d', -1, '1973-03-12 16:00:00+00')// we don't yet support text argument for the dateadd function.",1,1,1,1,-1,-1,-1,-1
"// TODO: Update does not follow the usual path, like insert. To be able to// prevent modifications on cold storage we must be able to detect whether// the column files being versioned belong in a folder that is soft linked,// and then move first the data to hot storage and take it from there.// OR accept that UPDATE does modify cold storage, OR simply provide the// mechanism to flag a partition as RO/RW and fail updates on RO partitions.// The later will be achieved in a later PR.",1,1,1,1,-1,-1,-1,-1
"// TODO: bits GeoHash literal// Assert.assertEquals((byte)GeoHashes.fromBitString(""0"", 0), record.getGeoByte(0));// Assert.assertEquals((byte)GeoHashes.fromBitString(""01"", 0), record.getGeoByte(1));// Assert.assertEquals((byte)GeoHashes.fromBitString(""010"", 0), record.getGeoByte(2));",1,1,0,1,-1,-1,-1,-1
"// TODO: close writerConfig. We currently keep it opened to prevent users from// modifying the table.// Once we have a permission system, we can use that instead.",1,1,1,1,-1,-1,-1,-1
"// TODO: rename column is non transactional on File System. When file rename fails, metadata does not match files on the disk// To fix it we have to copy files and then delete. We can use hard links to copy on the file systems where it's supported",1,1,1,1,-1,-1,-1,-1
"// TODO: this is broken, the expected result order for ""select * from tab"" in the presence// of repeated timestamps needs to be predefined and consistent, one of two alternatives:// 1.- most recent insert for a given timestamp first:// ""d2\tc1\t201.10000000000002\t2021-10-05T11:31:35.878000Z\n"" +// ""d1\tc2\t102.10000000000001\t2021-10-05T11:31:35.878000Z\n"" +// ""d1\tc1\t101.10000000000001\t2021-10-05T11:31:35.878000Z\n"" +// ""d2\tc1\t201.2\t2021-10-05T12:31:35.878000Z\n"" +// ""d1\tc2\t102.2\t2021-10-05T12:31:35.878000Z\n"" +// ""d1\tc1\t101.2\t2021-10-05T12:31:35.878000Z\n"" +// ""d2\tc1\t201.3\t2021-10-05T13:31:35.878000Z\n"" +// ""d1\tc2\t102.30000000000001\t2021-10-05T13:31:35.878000Z\n"" +// ""d1\tc1\t101.3\t2021-10-05T13:31:35.878000Z\n"" +// ""d2\tc1\t201.4\t2021-10-05T14:31:35.878000Z\n"" +// ""d1\tc2\t102.4\t2021-10-05T14:31:35.878000Z\n"" +// ""d1\tc1\t101.4\t2021-10-05T14:31:35.878000Z\n"" +// ""d1\tc2\t102.5\t2021-10-05T15:31:35.878000Z\n"" +// ""d2\tc2\t401.1\t2021-10-06T11:31:35.878000Z\n"" +// ""d2\tc1\t401.20000000000005\t2021-10-06T12:31:35.878000Z\n"" +// ""d2\tc1\t111.7\t2021-10-06T15:31:35.878000Z\n""// 2.- least recent insert for a given timestamp first:// ""d1\tc1\t101.10000000000001\t2021-10-05T11:31:35.878000Z\n"" +// ""d1\tc2\t102.10000000000001\t2021-10-05T11:31:35.878000Z\n"" +// ""d2\tc1\t201.10000000000002\t2021-10-05T11:31:35.878000Z\n"" +// ""d1\tc1\t101.2\t2021-10-05T12:31:35.878000Z\n"" +// ""d1\tc2\t102.2\t2021-10-05T12:31:35.878000Z\n"" +// ""d2\tc1\t201.2\t2021-10-05T12:31:35.878000Z\n"" +// ""d1\tc1\t101.3\t2021-10-05T13:31:35.878000Z\n"" +// ""d1\tc2\t102.30000000000001\t2021-10-05T13:31:35.878000Z\n"" +// ""d2\tc1\t201.3\t2021-10-05T13:31:35.878000Z\n"" +// ""d1\tc1\t101.4\t2021-10-05T14:31:35.878000Z\n"" +// ""d1\tc2\t102.4\t2021-10-05T14:31:35.878000Z\n"" +// ""d2\tc1\t201.4\t2021-10-05T14:31:35.878000Z\n"" +// ""d1\tc2\t102.5\t2021-10-05T15:31:35.878000Z\n"" +// ""d2\tc2\t401.1\t2021-10-06T11:31:35.878000Z\n"" +// ""d2\tc1\t401.20000000000005\t2021-10-06T12:31:35.878000Z\n"" +// ""d2\tc1\t111.7\t2021-10-06T15:31:35.878000Z\n""// in the assertSql that follows, option #2 has been taken.",1,1,1,1,-1,-1,-1,-1
"// This is a hack to deal with RT package problem// in this package ""thisVersion"" is always 0, and we need to fall back// to the database version.",1,1,1,1,-1,-1,-1,-1
"// This is a hack. pg_index.indkey in PG is an int vector. We have it as INT// because we don't support array column type yet. Some metadata PG SQLs// dereference this column as an array. We do not care, because composite indexes are// not yet supported either",1,1,1,1,-1,-1,-1,-1
// This symbol was not mapped in the WAL// The WAL is invalid// TODO: throw specific WAL exception to indicate that WAL transaction is invalid,1,1,1,1,-1,-1,-1,-1
// after we moved _meta to _meta.prev// we have to have _todo to restore _meta should anything go wrong,1,1,1,1,-1,-1,-1,-1
// todo - 1. do not disconnect// 2. should cancel running query only if PID and secret provided are the same as the ones provided upon logon// 3. send back error message (e) for the cancelled running query,1,1,1,1,-1,-1,-1,-1
// todo:  does not work// trim() function syntax is not supported (https://w3resource.com/PostgreSQL/trim-function.php),1,1,1,1,-1,-1,-1,-1
"// todo: configure the following// - what happens when data row errors out, max errors may be?// - we should be able to skip X rows from top, dodgy headers etc.",1,1,1,1,-1,-1,-1,-1
"// todo: in ""simple"" mode we do not support this SQL:// tab1 where 'NaN'::double precision is null",1,1,1,1,-1,-1,-1,-1
"// todo: introduce fairness factor// current worker impl will still proceed to execute another job even if this one was useful// we should see if we can stay inside of this method until we have a completely idle iteration// at the same time we should hog this thread in case we are always 'useful', we can probably// introduce a loop count after which we always exit",1,1,1,1,-1,-1,-1,-1
"// todo: we are opening columns incrementally, e.g. if we don't have enough objects// but here we're always clearing columns, making incremental ""open"" pointless// perhaps we should keep N column object max to kick around ?",1,1,1,1,-1,-1,-1,-1
"// todo: when order by coincides with keyColumn and there is index we can incorporate// ordering in the code that returns rows from index rather than having an// ""overhead"" order by implementation, which would be trying to oder already ordered symbols",1,1,1,1,-1,-1,-1,-1
"// type size// todo: cache small endian type sizes and do not check if type is valid - its coming from metadata, must be always valid",1,1,1,1,-1,-1,-1,-1
// // TODO compare first value with headValue,1,1,1,1,-1,-1,-1,-1
// // TODO compare last value with headValue,1,1,1,1,-1,-1,-1,-1
// // TODO sync,1,1,1,1,-1,-1,-1,-1
"// FUTURE_TODO: (QUARTZ-481) IMPROVE THIS! The following is a BAD solution to this problem. Performance will be very bad here, depending on the cron expression. It is, however A solution.",1,1,1,1,-1,-1,-1,-1
// FUTURE_TODO: implement QUARTZ-423,1,1,1,1,-1,-1,-1,-1
// TODO add sublist support,1,1,1,1,-1,-1,-1,-1
// TODO cache result,1,1,1,1,-1,-1,-1,-1
// TODO check bounds,1,1,1,1,-1,-1,-1,-1
// TODO compare tail or head value with current in case of absence this value,1,1,1,1,-1,-1,-1,-1
// TODO implement,1,1,1,1,-1,-1,-1,-1
// TODO implement support of store_by_reference,1,1,1,1,-1,-1,-1,-1
// TODO optimize,1,1,1,1,-1,-1,-1,-1
// TODO optimize: get three values each time instead of single,1,1,1,1,-1,-1,-1,-1
// TODO refactor to AbstractQueuedLongSynchronizer,1,1,1,1,-1,-1,-1,-1
// TODO refactor to common object and MethodHandles,1,1,1,1,-1,-1,-1,-1
// TODO: Add ttl renewal functionality,1,1,1,1,-1,-1,-1,-1
// TODO: distributed locking maybe required.,1,1,1,1,-1,-1,-1,-1
"// FUTURE_TODO: (QUARTZ-481) IMPROVE THIS! The following is a BAD solution to this problem. Performance will be very bad here, depending on the cron expression. It is, however A solution.// keep getting the next included time until it's farther than one second// apart. At that point, lastDate is the last valid fire time. We return// the second immediately following it.",1,1,1,1,-1,-1,-1,-1
"// RedisConnection<Object, V> connection = connectionManager.connectionReadOp();// try {// // TODO compare first value with headValue// if (headValue != null) {// BinarySearchResult<V> res = redissonSortedSet.binarySearch(headValue, connection);// if (res.getIndex() < 0) {// NewScore headScore = redissonSortedSet.calcNewScore(res.getIndex(), connection);// double tailScore = getTailScore(connection);// List<V> vals = connection.zrangebyscore(redissonSortedSet.getName(), headScore.getScore(), tailScore);// if (vals.isEmpty()) {// throw new NoSuchElementException();// }// return vals.get(0);// }// return res.getValue();// }// return redissonSortedSet.first();// } finally {// connectionManager.releaseRead(connection);// }",1,1,1,1,-1,-1,-1,-1
"// RedisConnection<Object, V> connection = connectionManager.connectionReadOp();// try {// // TODO compare last value with headValue// if (tailValue != null) {// BinarySearchResult<V> res = redissonSortedSet.binarySearch(tailValue, connection);// if (res.getIndex() < 0) {// connection.lrange(redissonSortedSet.getName(), index + 1, size());// NewScore tailScore = redissonSortedSet.calcNewScore(res.getIndex(), connection);// double headScore = getHeadScore(connection);// List<V> vals = connection.zrangebyscore(redissonSortedSet.getName(), headScore, tailScore.getScore());// if (vals.isEmpty()) {// throw new NoSuchElementException();// }// return vals.get(0);// }// return res.getValue();// }// return redissonSortedSet.last();// } finally {// connectionManager.releaseRead(connection);// }",1,1,1,1,-1,-1,-1,-1
"// RedisConnection<Object, V> connection = connectionManager.connectionWriteOp();// try {// // TODO sync// int headScore = getHeadScore(connection);// int tailScore = getTailScore(connection);// connection.ltrim(redissonSortedSet.getName(), 0, index - 1);// connection.zremrangebyscore(redissonSortedSet.getName(), headScore, tailScore);// } finally {// connectionManager.releaseWrite(connection);// }",1,1,0,1,-1,-1,-1,-1
"// TODO check bounds// if (fromElement == null) {// fromElement = headValue;// }// if (toElement == null) {// toElement = tailValue;// }// return new RedissonSubSortedSet<V>(redissonSortedSet, connectionManager, fromElement, toElement);",1,1,1,1,-1,-1,-1,-1
// TODO optimize// decrease all values,1,1,1,1,-1,-1,-1,-1
"// TODO refactor to common object and MethodHandles// MethodHandle mh = MethodHandles.lookup().findVirtual(implementation.getClass(), method.getName(),// MethodType.methodType(method.getReturnType(), method.getParameterTypes()));",1,1,1,1,-1,-1,-1,-1
"// TODO: Add ttl renewal functionality// @Override// public <T, K> T get(Class<T> entityClass, K id, long timeToLive, TimeUnit timeUnit) {// T instance = get(entityClass, id);// RMap map = ((RLiveObject) instance).getLiveObjectLiveMap();// map.put(""RLiveObjectDefaultTimeToLiveValue"", timeToLive);// map.put(""RLiveObjectDefaultTimeToLiveUnit"", timeUnit.toString());// map.expire(timeToLive, timeUnit);// return instance;// }",1,1,1,1,-1,-1,-1,-1
// Exceptions.throwIfFatal(e); TODO add fatal exceptions?,1,1,1,1,-1,-1,-1,-1
// Exceptions.throwIfFatal(e); TODO decide,1,1,1,1,-1,-1,-1,-1
// FIXME ? catch consumes this flag,1,1,0,1,-1,-1,-1,-1
// FIXME I'm not sure why this is MAX_VALUE in 1.x because MAX_VALUE/2 is even and thus can't overflow when multiplied by 2,1,1,1,1,-1,-1,-1,-1
// FIXME LATER,1,1,0,1,-1,-1,-1,-1
// FIXME RS subscribers can't throw,1,1,0,1,-1,-1,-1,-1
// FIXME RxJava replay() doesn't issue onComplete without request,1,1,0,1,-1,-1,-1,-1
// FIXME can't unsubscribe child,1,1,0,1,-1,-1,-1,-1
// FIXME crashing ObservableSource can't propagate to an Observer,1,1,0,1,-1,-1,-1,-1
// FIXME custom built???,1,1,0,1,-1,-1,-1,-1
// FIXME fusion mode causes hangs,1,1,0,1,-1,-1,-1,-1
// FIXME groups need consumption to a certain degree to cancel upstream,1,1,0,1,-1,-1,-1,-1
// FIXME happens after the window is open,1,1,0,1,-1,-1,-1,-1
// FIXME it is possible slow is not slow enough or the main gets delayed and thus more than one source value is emitted.,1,1,0,1,-1,-1,-1,-1
// FIXME last cause value is not saved,1,1,0,1,-1,-1,-1,-1
// FIXME last cause value not recorded,1,1,0,1,-1,-1,-1,-1
// FIXME need to decide about adding the value that probably caused the crash in some way,1,1,1,1,-1,-1,-1,-1
// FIXME no longer assertable,1,1,0,1,-1,-1,-1,-1
// FIXME no longer supported,1,1,0,1,-1,-1,-1,-1
// FIXME no longer valid,1,1,0,1,-1,-1,-1,-1
// FIXME not happening anymore,1,1,0,1,-1,-1,-1,-1
// FIXME not supported,1,1,0,1,-1,-1,-1,-1
"// FIXME null values are not allowed, removed",1,1,0,1,-1,-1,-1,-1
// FIXME null values not allowed,1,1,0,1,-1,-1,-1,-1
"// FIXME nulls not allowed, changed to ""c""",1,1,0,1,-1,-1,-1,-1
// FIXME observeOn requests bufferSize at first always,1,1,0,1,-1,-1,-1,-1
// FIXME publish also calls cancel,1,1,0,1,-1,-1,-1,-1
// FIXME publish calls cancel too,1,1,0,1,-1,-1,-1,-1
// FIXME should this complete the source instead of consuming it?,1,1,0,1,-1,-1,-1,-1
// FIXME single now triggers fast-path,1,1,0,1,-1,-1,-1,-1
// FIXME subject has subscribers because of the open window,1,1,0,1,-1,-1,-1,-1
// FIXME subscribers can't throw,1,1,0,1,-1,-1,-1,-1
// FIXME take triggers fast path if downstream requests more than the limit,1,1,0,1,-1,-1,-1,-1
// FIXME the timeunit now matters due to rounding,1,1,0,1,-1,-1,-1,-1
// FIXME this request pattern looks odd because all 10 completions trigger 1 requests,1,1,0,1,-1,-1,-1,-1
// FIXME this test doesn't make sense,1,1,1,1,-1,-1,-1,-1
// FIXME time unit now matters,1,1,0,1,-1,-1,-1,-1
// FIXME time unit now matters!,1,1,0,1,-1,-1,-1,-1
// FIXME toBlocking methods run on the caller's thread,1,1,0,1,-1,-1,-1,-1
// FIXME toBlocking methods run on the current thread,1,1,0,1,-1,-1,-1,-1
// FIXME toBlocking now runs its methods on the caller thread,1,1,0,1,-1,-1,-1,-1
// FIXME value as last cause?,1,1,0,1,-1,-1,-1,-1
// FIXME was 3 in 1.x for some reason,1,1,0,1,-1,-1,-1,-1
// FIXME was plain null which is not allowed,1,1,0,1,-1,-1,-1,-1
// FIXME: delayed requesting in groupBy results in group abandonment,1,1,0,1,-1,-1,-1,-1
// TODO decide/implement fusion,1,1,0,1,-1,-1,-1,-1
// TODO enable fast-path,1,1,1,1,-1,-1,-1,-1
// TODO fuse back to Flowable,1,1,1,1,-1,-1,-1,-1
// TODO fuse back to Observable,1,1,1,1,-1,-1,-1,-1
// TODO is it possible to make this deterministic rather than one possibly starving the other?,1,1,1,1,-1,-1,-1,-1
// TODO plugin wrapping,1,1,0,1,-1,-1,-1,-1
"// TODO since only left emission calls the actual, it is possible to link downstream backpressure with left's source and not error out",1,1,1,1,-1,-1,-1,-1
// TODO this test is no longer relevant as nulls are not allowed and value maps to itself,1,1,1,1,-1,-1,-1,-1
// TODO verify: concatMapEager subscribes first then consumes the sources is okay,1,1,1,1,-1,-1,-1,-1
// TODO: it should be acceptable to get a completion event without requests,1,1,1,1,-1,-1,-1,-1
// todo bug?            assertNeverSubscriber(anotherSubscriber);,1,1,0,1,-1,-1,-1,-1
// ts.assertUnsubscribed(); // FIXME no longer valid,1,1,0,1,-1,-1,-1,-1
// Exceptions.throwIfFatal(e); TODO decide// NOPMD,1,1,1,1,-1,-1,-1,-1
// FIXME ? catch consumes this flag// assertTrue(Thread.interrupted());,1,1,0,1,-1,-1,-1,-1
// FIXME LATER// TestObstructionDetection.checkObstruction();,1,1,0,1,-1,-1,-1,-1
"// FIXME RS subscribers can't throw// @Test(expected = OnErrorNotImplementedException.class)// public void testShouldNotSwallowOnErrorNotImplementedException() {// Observable.just(""a"", ""b"").flatMap(new Function<String, Observable<String>>() {// @Override// public Observable<String> apply(String s) {// return Observable.just(s + ""1"", s + ""2"");// }// }).flatMap(new Function<String, Observable<String>>() {// @Override// public Observable<String> apply(String s) {// return Observable.error(new Exception(""test""));// }// }).forEach(new Consumer<String>() {// @Override// public void accept(String s) {// System.out.println(s);// }// });// }",1,1,0,1,-1,-1,-1,-1
"// FIXME RS subscribers can't throw// @Test(expected = OnErrorNotImplementedException.class)// public void verifyExceptionIsThrownIfThereIsNoExceptionHandler() {//// ObservableSource<Object> creator = new ObservableSource<Object>() {//// @Override// public void subscribeActual(Observer<? super Object> observer) {// observer.onSubscribe(EmptyDisposable.INSTANCE);// observer.onNext(""a"");// observer.onNext(""b"");// observer.onNext(""c"");// observer.onComplete();// }// };//// Function<Object, Observable<Object>> manyMapper = new Function<Object, Observable<Object>>() {//// @Override// public Observable<Object> apply(Object object) {// return Observable.just(object);// }// };//// Function<Object, Object> mapper = new Function<Object, Object>() {// private int count = 0;//// @Override// public Object apply(Object object) {// ++count;// if (count > 2) {// throw new RuntimeException();// }// return object;// }// };//// Consumer<Object> onNext = new Consumer<Object>() {//// @Override// public void accept(Object object) {// System.out.println(object.toString());// }// };//// try {// Observable.unsafeCreate(creator).flatMap(manyMapper).map(mapper).subscribe(onNext);// } catch (RuntimeException e) {// e.printStackTrace();// throw e;// }// }",1,1,0,1,-1,-1,-1,-1
"// FIXME crashing ObservableSource can't propagate to an Observer// @Test// public void testFatalError() {// try {// Observable.just(1, 2, 3)// .flatMap(new Function<Integer, Observable<?>>() {// @Override// public Observable<?> apply(Integer integer) {// return Observable.create(new ObservableSource<Object>() {// @Override// public void accept(Observer<Object> o) {// throw new NullPointerException(""Test NPE"");// }// });// }// })// .doOnNext(new Consumer<Object>() {// @Override// public void accept(Object o) {// System.out.println(""Won't come here"");// }// })// .subscribe();// fail(""should have thrown an exception"");// } catch (OnErrorNotImplementedException e) {// assertTrue(e.getCause() instanceof NullPointerException);// assertEquals(e.getCause().getMessage(), ""Test NPE"");// System.out.println(""Received exception: "" + e);// }// }",1,1,0,1,-1,-1,-1,-1
"// FIXME last cause value is not saved// assertTrue(ts.errors().get(0).getCause().getMessage().contains(""abc""));",1,1,0,1,-1,-1,-1,-1
"// FIXME last cause value not recorded// assertTrue(ts.getOnErrorEvents().get(0).getCause().getMessage().contains(""abc""));",1,1,0,1,-1,-1,-1,-1
"// FIXME need to decide about adding the value that probably caused the crash in some way// assertTrue(ex.getCause().getMessage().contains(""Boo!""));",1,1,1,1,-1,-1,-1,-1
// FIXME no longer assertable// assertTrue(sub.isUnsubscribed());,1,1,0,1,-1,-1,-1,-1
// FIXME no longer assertable// ts.assertUnsubscribed();,1,1,0,1,-1,-1,-1,-1
"// FIXME no longer assertable// verify(s, times(1)).unsubscribe();",1,1,0,1,-1,-1,-1,-1
"// FIXME no longer supported// verify(spiedWorker, times(1)).isUnsubscribed();// FIXME publish also calls cancel// verify(sourceUnsubscribed, times(1)).run();",1,1,0,1,-1,-1,-1,-1
// FIXME not happening anymore// ts.assertUnsubscribed();,1,1,0,1,-1,-1,-1,-1
"// FIXME not supported// verify(spiedWorker, times(1)).isUnsubscribed();// FIXME publish calls cancel too// verify(sourceUnsubscribed, times(1)).run();",1,1,0,1,-1,-1,-1,-1
"// FIXME null values not allowed// Observable<String> obs = Observable.just(""one"", null, ""two"", ""three"", ""four"");",1,1,0,1,-1,-1,-1,-1
"// FIXME this test doesn't make sense// @Test // cf. https://github.com/ReactiveX/RxJava/issues/2599// public void testSubscribingSubscriberAsObserverMaintainsSubscriptionChain() {// TestObserver<Object> observer = new TestObserver<T>();// Subscription subscription = Observable.just(""event"").subscribe((Observer<Object>) observer);// subscription.unsubscribe();//// subscriber.assertUnsubscribed();// }// FIXME subscribers can't throw// @Test(expected=OnErrorNotImplementedException.class)// public void testForEachWithError() {// Observable.error(new Exception(""boo""))// //// .forEach(new Action1<Object>() {// @Override// public void call(Object t) {// //do nothing// }});// }",1,1,0,1,-1,-1,-1,-1
"// FIXME value as last cause?// assertTrue(ex.getCause().getMessage().contains(""Boo!""));",1,1,0,1,-1,-1,-1,-1
"// Observable<String> obs = Observable.just(""one"", null, ""two"", ""three"", ""four"");// FIXME null values not allowed",1,1,0,1,-1,-1,-1,-1
// TODO enable fast-path// if (n == -1 || n == Long.MAX_VALUE) {// for (;;) {// if (isCancelled.getAsBoolean()) {// break;// }//// T v = queue.poll();//// if (v == null) {// actual.onComplete();// break;// }//// actual.onNext(v);// }//// return true;// },1,1,1,1,-1,-1,-1,-1
// TODO this test is no longer relevant as nulls are not allowed and value maps to itself// @Test// public void testValueKind() {// assertTrue(NotificationLite.isNull(NotificationLite.next(null)));// assertFalse(NotificationLite.isNull(NotificationLite.next(1)));// assertFalse(NotificationLite.isNull(NotificationLite.error(new TestException())));// assertFalse(NotificationLite.isNull(NotificationLite.completed()));// assertFalse(NotificationLite.isNull(null));//// assertTrue(NotificationLite.isNext(NotificationLite.next(null)));// assertTrue(NotificationLite.isNext(NotificationLite.next(1)));// assertFalse(NotificationLite.isNext(NotificationLite.completed()));// assertFalse(NotificationLite.isNext(null));// assertFalse(NotificationLite.isNext(NotificationLite.error(new TestException())));// },1,1,1,1,-1,-1,-1,-1
"// TODO: it should be acceptable to get a completion event without requests// assertEquals(Collections.<Notification<Long>>emptyList(), subscriber.getOnCompletedEvents());// subscriber.request(1);",1,1,1,1,-1,-1,-1,-1
// Test that unsubscribe() method is not affected in any way// FIXME no longer valid// subscribers.get(i).assertUnsubscribed();,1,1,0,1,-1,-1,-1,-1
"// assertTrue(name.startsWith(""RxComputationThreadPool""));// FIXME toBlocking now runs its methods on the caller thread",1,1,0,1,-1,-1,-1,-1
"// either one can starve the other, but neither should be capable of doing more than 5 batches (taking 4.1)// TODO is it possible to make this deterministic rather than one possibly starving the other?// benjchristensen => In general I'd say it's not worth trying to make it so, as ""fair"" algoritms generally take a performance hit",1,1,1,1,-1,-1,-1,-1
"// either one can starve the other, but neither should be capable of doing more than 5 batches (taking 4.1)// TODO is it possible to make this deterministic rather than one possibly starving the other?// benjchristensen => In general I'd say it's not worth trying to make it so, as ""fair"" algoritms generally take a performance hit// akarnokd => run this in a loop over 10k times and never saw values get as high as 7*SIZE, but since observeOn delays the unsubscription non-deterministically, the test will remain unreliable",1,1,1,1,-1,-1,-1,-1
// it unsubscribes the child directly// this simulates various error/completion scenarios that could occur// or just a source that proactively triggers cleanup// FIXME can't unsubscribe child// s.unsubscribe();,1,1,0,1,-1,-1,-1,-1
/** * A simple integration test to see whether Ecdsa protobuf is built correctly. * * <p>TODO(quannguyen): Add extensive tests. */,1,0,1,1,-1,-1,-1,-1
/** * An instance of a InputStream that returns the plaintext for some ciphertext. * * <p>TODO(bleichen): define what the state is after an IOException. */,1,0,1,1,-1,-1,-1,-1
"/** * Computes symmetric key for ECIES with HKDF from the provided parameters. * * @param ephemeralPublicKeyBytes the encoded ephemeral public key, i.e. the KEM part of the *     hybrid encryption. In some versions of ECIES (e.g. IEEE P1363a) this argument is optional. *     Shoup strongly prefers the inclusion of this argument in *     http://eprint.iacr.org/2001/112.pdf (see discussion of the value C0 in Section 15.6, and *     15.6.1) * @param sharedSecret the shared DH secret. This typically is the x-coordinate of the secret *     point. * @param hmacAlgo the HMAC used (e.g. ""HmacSha256"") * @param hkdfInfo TODO(bleichen): determine what are good values for Info and salt and what are *     not good values. The ISO standard proposal http://eprint.iacr.org/2001/112.pdf does not *     allow additional values for the key derivation (see Section 15.6.2) * @param hkdfSalt * @param keySizeInBytes the size of the key material for the DEM key. * @throws GeneralSecurityException if hmacAlgo is not supported */",1,1,0,1,-1,-1,-1,-1
/** * Constructs a ReadableByteChannel with ciphertext from a ReadableByteChannel. The method * constructs a new thread that is used to encrypt the plaintext. TODO(bleichen): Using * PipedInputStream may have performance problems. */,1,1,1,1,-1,-1,-1,-1
"/** * Disable rewinding. * This method is called once this class has found the correct key version. * TODO(bleichen): While BufferedInputStream stops buffering new bytes, *   it does not shrink the intenal buffer. */",1,1,1,1,-1,-1,-1,-1
"/** * During Field25519 computation, the mixed radix representation may be in different forms: * <ul> *  <li> Reduced-size form: the array has size at most 10. *  <li> Non-reduced-size form: the array is not reduced modulo 2^255 - 19 and has size at most *  19. * </ul> * * TODO(quannguyen): * <ul> *  <li> Clarify ill-defined terminologies. *  <li> The reduction procedure is different from DJB's paper *  (http://cr.yp.to/ecdh/curve25519-20060209.pdf). The coefficients after reducing degree and *  reducing coefficients aren't guaranteed to be in range {-2^25, ..., 2^25}. We should check to *  see what's going on. *  <li> Consider using method mult() everywhere and making product() private. * </ul> */",1,1,1,1,-1,-1,-1,-1
"/** * Exception handler for uncaught exceptions in a thread. * * <p>TODO(bleichen): Surely there must be a better way to catch exceptions in threads in unit * tests. junit ought to do this. However, at least for some setups, tests can pass despite * uncaught exceptions in threads. * * <p>TODO(bleichen): Nonce reuse of non-deterministic signatures. * * <p>TODO(bleichen): Overwriting nonces in deterministic signature schemes. */",1,0,1,1,-1,-1,-1,-1
"/** * Exception handler for uncaught exceptions in a thread. * * <p>TODO(bleichen): Surely there must be a better way to catch exceptions in threads in unit * tests. junit ought to do this. However, at least for some setups, tests can pass despite * uncaught exceptions in threads. */",1,0,1,1,-1,-1,-1,-1
"/** * Returns a SeekableByteChannel that allows to access the plaintext. * * <p>This method does not work on Android Marshmallow (API level 23) or older because these * Android versions don't have the java.nio.channels.SeekableByteChannel interface. * * @param ciphertextSource the ciphertext * @param associatedData the data associated with the ciphertext. * @return {@link SeekableByteChannel} that allows random read access to the plaintext. The *     following methods of SeekableByteChannel are implemented: *     <ul> *       <li>{@code long position()} Returns the channel's position in the plaintext. *       <li>{@code SeekableByteChannel position(long newPosition)} Sets the channel's position. *           Setting the position to a value greater than the plaintext size is legal. A later *           attempt to read byte will immediately return an end-of-file indication. *       <li>{@code int read(ByteBuffer dst)} Bytes are read starting at the channel's position, *           and then the position is updated with the number of bytes actually read. All bytes *           returned have been authenticated. If the end of the stream has been reached -1 is *           returned. A result of -1 is authenticated (e.g. by checking the MAC of the last *           ciphertext chunk.) A call to this function attempts to fill dst, but it may return *           fewer bytes than requested, e.g. if the underlying ciphertextSource does not provide *           the requested number of bytes or if the plaintext ended. *           <p>Throws {@link IOException} if a MAC verification failed. TODO: Should we extend *           the interface with read(ByteBuffer dst, long position) to avoid race conditions? *       <li>{@code long size()} Returns the size of the plaintext. TODO: Decide whether the *           result should be authenticated) *       <li>{@code SeekableByteChannel truncate(long size)} throws {@link *           java.nio.channels.NonWritableChannelException } because the channel is read-only. *       <li>{@code int write(ByteBuffer src)} throws {@link *           java.nio.channels.NonWritableChannelException } because the channel is read-only. *       <li>{@code close()} closes the channel *       <li>{@code isOpen()} *     </ul> * * @throws GeneralSecurityException if the header of the ciphertext is corrupt or if *     associatedData is not correct. * @throws IOException if an IOException occurred while reading from ciphertextDestination. */",1,1,1,1,-1,-1,-1,-1
"/** * Returns an {@code ECPrivateKey} from {@code pkcs8PrivateKey} which is an encoding of a private * key, encoded according to the ASN.1 type SubjectPublicKeyInfo. * * TODO(b/68672497): test that in Java one can always get this representation by using * {@link ECPrivateKey#getEncoded), regardless of the provider. */",1,1,1,1,-1,-1,-1,-1
"/** * Returns an {@link ECPublicKey} from {@code x509PublicKey} which is an encoding of a public * key, encoded according to the ASN.1 type SubjectPublicKeyInfo. * * TODO(b/68672497): test that in Java one can always get this representation by using * {@link ECPublicKey#getEncoded), regardless of the provider. */",1,1,1,1,-1,-1,-1,-1
"/** * Test for {@code AesCtrHmacStreaming}-implementation of {@code StreamingAead}-primitive. * * <p>TODO(b/66921440): adding more tests, including tests for other MAC and HKDF algos. */",1,0,1,1,-1,-1,-1,-1
"/** * Test for {@code AesGcmHkdfStreaming}-implementation of {@code StreamingAead}-primitive. * * <p>TODO(b/66921440): adding more tests, including tests for other MAC and HKDF algos. */",1,0,1,1,-1,-1,-1,-1
/** * Unit tests for AesEax. * * <p>TODO: Add more tests: * * <ul> *   <li>- maybe add NIST style verification. *   <li>- tests with long ciphertexts (e.g. BC had a bug with messages of size 8k or longer) *   <li>- check that IVs are distinct. *   <li>- use Github Wycheproof test vectors once they're published (b/66825199). * </ul> */,1,1,1,1,-1,-1,-1,-1
/** * Unit tests for EcdsaVerifyKeyManager. * * <p>TODO(quannguyen): Add more tests. */,1,0,1,1,-1,-1,-1,-1
/** * Unit tests for EciesAeadHkdfHybridEncrypt. * * <p>TODO(b/74250701): Add more tests. */,1,0,1,1,-1,-1,-1,-1
"/** * Unit tests for {@link Field25519}. * * <p>TODO(quannguyen): Add more tests. Note that several functions assume that the inputs are in * reduced forms, so testing them don't guarantee that its uses are safe. There may be integer * overflow when they aren't used correctly. */",1,0,1,1,-1,-1,-1,-1
// TODO(b/140101381): This template is confusing and will be removed.,1,1,1,1,-1,-1,-1,-1
// TODO(b/140161847): Also check for key size 16.,1,1,1,1,-1,-1,-1,-1
// TODO(b/140410067): Check if SHA384 should be allowed.,1,1,1,1,-1,-1,-1,-1
"// TODO(b/148124847): Other languages create key_ids with the MSB set, so we should here too.",1,1,1,1,-1,-1,-1,-1
// TODO(b/148134669): Remove the following line.,1,1,1,1,-1,-1,-1,-1
// TODO(b/153937575): remove this once KeysetManager allows to directly work with KeyTemplate,1,1,1,1,-1,-1,-1,-1
// TODO(b/167402931): figure out how to test this.,1,1,1,1,-1,-1,-1,-1
// TODO(b/185475349): remove this in 2.0.0.,1,1,1,1,-1,-1,-1,-1
// TODO(b/185475349): remove this in Tink 2.0.0.,1,1,1,1,-1,-1,-1,-1
// TODO(b/185475349): remove this.,1,1,1,1,-1,-1,-1,-1
// TODO(b/235861932): add manual test vectors for P384.,1,1,1,1,-1,-1,-1,-1
// TODO(b/66098906): Use a subclass of IOException.,1,1,1,1,-1,-1,-1,-1
// TODO(b/67385998): make this work outside google3.,1,1,1,1,-1,-1,-1,-1
// TODO(b/68969256): Adding a test that computes a CMAC of length 2**31-1.,1,1,0,1,-1,-1,-1,-1
// TODO(b/74249330): Try to define the state of this.,1,1,1,1,-1,-1,-1,-1
// TODO(b/74251398): add tests for other functions.,1,1,1,1,-1,-1,-1,-1
// TODO(b/74251423): add more checks.,1,1,1,1,-1,-1,-1,-1
// TODO(bleichen): Consider to pass aad here too.,1,1,1,1,-1,-1,-1,-1
// TODO(bleichen): Currently it is undefined whether we should be able to read,1,1,1,1,-1,-1,-1,-1
// TODO(bleichen): Define the state of this.,1,1,1,1,-1,-1,-1,-1
// TODO(bleichen): Is there a way to fully write the remaining ciphertext?,1,1,1,1,-1,-1,-1,-1
// TODO(bleichen): Mabye implement write(ByteBuffer) so that,1,1,1,1,-1,-1,-1,-1
// TODO(bleichen): Maybe check that the stream cannot longer be accessed.,1,1,1,1,-1,-1,-1,-1
// TODO(bleichen): Skipping test with key sizes larger than 128 bits because of b/35928521.,1,1,1,1,-1,-1,-1,-1
// TODO(bleichen): Some things that are not yet decided:,1,1,1,1,-1,-1,-1,-1
// TODO(bleichen): What is the best way to chatch exceptions in threads?,1,1,1,1,-1,-1,-1,-1
// TODO(bleichen): define the state of this. E.g. open = false;,1,1,1,1,-1,-1,-1,-1
// TODO(juerg): Use parametrized tests once b/26110951 is resolved.,1,1,1,1,-1,-1,-1,-1
// TODO(przydatek): Add more tests for creation of PrimitiveSets.,1,1,1,1,-1,-1,-1,-1
// TODO(quannguyen): Add more tests.,1,1,1,1,-1,-1,-1,-1
// TODO(thaidn): add checks for boundary conditions/overflows.,1,1,1,1,-1,-1,-1,-1
// TODO(thaidn): support RSA and EC private keys.,1,1,1,1,-1,-1,-1,-1
// TODO(thaidn): test this when Android building and testing are supported.,1,1,1,1,-1,-1,-1,-1
// TODO(tholenst): Epxand the test coverage for primitive wrappers and catalogues.,1,1,1,1,-1,-1,-1,-1
"/**     * Computes symmetric key for ECIES with HKDF from the provided parameters.     *     * @param ephemeralPublicKeyBytes the encoded ephemeral public key, i.e. the KEM part of the     *     hybrid encryption. In some versions of ECIES (e.g. IEEE P1363a) this argument is optional.     *     Shoup strongly prefers the inclusion of this argument in     *     http://eprint.iacr.org/2001/112.pdf (see discussion of the value C0 in Section 15.6, and     *     15.6.1)     * @param sharedSecret the shared DH secret. This typically is the x-coordinate of the secret     *     point.     * @param hmacAlgo the HMAC used (e.g. ""HmacSha256"")     * @param hkdfInfo TODO(bleichen): determine what are good values for Info and salt and what are     *     not good values. The ISO standard proposal http://eprint.iacr.org/2001/112.pdf does not     *     allow additional values for the key derivation (see Section 15.6.2)     * @param hkdfSalt     * @param keySizeInBytes the size of the key material for the DEM key.     * @throws GeneralSecurityException if hmacAlgo is not supported     */",1,1,0,1,-1,-1,-1,-1
/**     * Constructs a ReadableByteChannel with ciphertext from a ReadableByteChannel. The method     * constructs a new thread that is used to encrypt the plaintext. TODO(bleichen): Using     * PipedInputStream may have performance problems.     */,1,1,1,1,-1,-1,-1,-1
"/**     * Disable rewinding.     * This method is called once this class has found the correct key version.     * TODO(bleichen): While BufferedInputStream stops buffering new bytes,     *   it does not shrink the intenal buffer.     */",1,1,1,1,-1,-1,-1,-1
"/**     * During Field25519 computation, the mixed radix representation may be in different forms:     * <ul>     *  <li> Reduced-size form: the array has size at most 10.     *  <li> Non-reduced-size form: the array is not reduced modulo 2^255 - 19 and has size at most     *  19.     * </ul>     *     * TODO(quannguyen):     * <ul>     *  <li> Clarify ill-defined terminologies.     *  <li> The reduction procedure is different from DJB's paper     *  (http://cr.yp.to/ecdh/curve25519-20060209.pdf). The coefficients after reducing degree and     *  reducing coefficients aren't guaranteed to be in range {-2^25, ..., 2^25}. We should check to     *  see what's going on.     *  <li> Consider using method mult() everywhere and making product() private.     * </ul>     */",1,1,1,1,-1,-1,-1,-1
"/**     * Exception handler for uncaught exceptions in a thread.     *     * <p>TODO(bleichen): Surely there must be a better way to catch exceptions in threads in unit     * tests. junit ought to do this. However, at least for some setups, tests can pass despite     * uncaught exceptions in threads.     *     * <p>TODO(bleichen): Nonce reuse of non-deterministic signatures.     *     * <p>TODO(bleichen): Overwriting nonces in deterministic signature schemes.     */",1,0,1,1,-1,-1,-1,-1
"/**     * Exception handler for uncaught exceptions in a thread.     *     * <p>TODO(bleichen): Surely there must be a better way to catch exceptions in threads in unit     * tests. junit ought to do this. However, at least for some setups, tests can pass despite     * uncaught exceptions in threads.     */",1,0,1,1,-1,-1,-1,-1
"/**     * Returns a SeekableByteChannel that allows to access the plaintext.     *     * <p>This method does not work on Android Marshmallow (API level 23) or older because these     * Android versions don't have the java.nio.channels.SeekableByteChannel interface.     *     * @param ciphertextSource the ciphertext     * @param associatedData the data associated with the ciphertext.     * @return {@link SeekableByteChannel} that allows random read access to the plaintext. The     *     following methods of SeekableByteChannel are implemented:     *     <ul>     *       <li>{@code long position()} Returns the channel's position in the plaintext.     *       <li>{@code SeekableByteChannel position(long newPosition)} Sets the channel's position.     *           Setting the position to a value greater than the plaintext size is legal. A later     *           attempt to read byte will immediately return an end-of-file indication.     *       <li>{@code int read(ByteBuffer dst)} Bytes are read starting at the channel's position,     *           and then the position is updated with the number of bytes actually read. All bytes     *           returned have been authenticated. If the end of the stream has been reached -1 is     *           returned. A result of -1 is authenticated (e.g. by checking the MAC of the last     *           ciphertext chunk.) A call to this function attempts to fill dst, but it may return     *           fewer bytes than requested, e.g. if the underlying ciphertextSource does not provide     *           the requested number of bytes or if the plaintext ended.     *           <p>Throws {@link IOException} if a MAC verification failed. TODO: Should we extend     *           the interface with read(ByteBuffer dst, long position) to avoid race conditions?     *       <li>{@code long size()} Returns the size of the plaintext. TODO: Decide whether the     *           result should be authenticated)     *       <li>{@code SeekableByteChannel truncate(long size)} throws {@link     *           java.nio.channels.NonWritableChannelException } because the channel is read-only.     *       <li>{@code int write(ByteBuffer src)} throws {@link     *           java.nio.channels.NonWritableChannelException } because the channel is read-only.     *       <li>{@code close()} closes the channel     *       <li>{@code isOpen()}     *     </ul>     *     * @throws GeneralSecurityException if the header of the ciphertext is corrupt or if     *     associatedData is not correct.     * @throws IOException if an IOException occurred while reading from ciphertextDestination.     */",1,1,1,1,-1,-1,-1,-1
"/**     * Returns an {@code ECPrivateKey} from {@code pkcs8PrivateKey} which is an encoding of a private     * key, encoded according to the ASN.1 type SubjectPublicKeyInfo.     *     * TODO(b/68672497): test that in Java one can always get this representation by using     * {@link ECPrivateKey#getEncoded), regardless of the provider.     */",1,1,1,1,-1,-1,-1,-1
"/**     * Returns an {@link ECPublicKey} from {@code x509PublicKey} which is an encoding of a public     * key, encoded according to the ASN.1 type SubjectPublicKeyInfo.     *     * TODO(b/68672497): test that in Java one can always get this representation by using     * {@link ECPublicKey#getEncoded), regardless of the provider.     */",1,1,1,1,-1,-1,-1,-1
// Detected that the ciphertext was modified.// TODO(bleichen): Maybe check that the stream cannot longer be accessed.,1,1,1,1,-1,-1,-1,-1
"// Identical to AES256_CMAC_PRF, needed for backward compatibility with PrfKeyTemplates.// TODO(b/185475349): remove this.",1,1,1,1,-1,-1,-1,-1
"// Modified ciphertext was found.// TODO(bleichen): Currently it is undefined whether we should be able to read// more plaintext from the stream (i.e. unmodified segments).// However, if later calls return plaintext this has to be valid plaintext.",1,1,1,1,-1,-1,-1,-1
"// TODO(b/148134669): Remove the following line.// There is a potential (but unlikely) race in java.security.Provider. In some cases, we only// initalize some of the java.security.Providers the first time we sign. If we do this// multithreaded, there is a potential for a race. To get around this, we first sign once, to// initialize everything.",1,1,1,1,-1,-1,-1,-1
"// TODO(b/148134669): Remove the following line.// There is a potential (but unlikely) race in java.security.Provider. Since AesCtrHmac// encryption creates a cipher for the first time in// http://google3/third_party/tink/java_src/src/main/java/com/google/crypto/tink/subtle/AesCtrJceCipher.java?l=128&rcl=272896379// if we do this multithreaded, there is a potential for a race in case we call encrypt// for the first time at the same time in multiple threads. To get around this, we first encrypt// an empty plaintext here.",1,1,1,1,-1,-1,-1,-1
// TODO(b/153937575): remove this once KeysetManager allows to directly work with KeyTemplate// POJO.,1,1,1,1,-1,-1,-1,-1
// TODO(bleichen): Is there a way to fully write the remaining ciphertext?// The following is the strategy from java.nio.channels.Channels.writeFullyImpl// I.e. try writing as long as at least one byte is written.,1,1,1,1,-1,-1,-1,-1
// TODO(bleichen): Mabye implement write(ByteBuffer) so that// there are no surprises if the underlying class is extended.,1,1,1,1,-1,-1,-1,-1
"// TODO(bleichen): Skipping test with key sizes larger than 128 bits because of b/35928521.// testModifyCiphertext(24, 16);// testModifyCiphertext(32, 16);",1,1,1,1,-1,-1,-1,-1
"// TODO(bleichen): Some things that are not yet decided:// - What can we assume about the state of objects after getting an exception?// - Should there be a simple test to detect invalid ciphertext offsets?// - Should we encode the size of the header?// - Should we encode the size of the segments?// - Should a version be included in the header to allow header modification?// - Should we allow other information, header and the first segment the to be a multiple of// ciphertextSegmentSize?// - This implementation fixes a number of parameters. Should there be more options?// - Should we authenticate ciphertextSegmentSize and firstSegmentSize?// If an attacker can change these parameters then this would allow to move// the position of plaintext in the file. While these parameters are currently// specified by the key it is unclear whether this will remain so in the future.//// The size of the IVs for GCM",1,1,1,1,-1,-1,-1,-1
"// TODO(bleichen): Some things that are not yet decided:// - What can we assume about the state of objects after getting an exception?// - Should there be a simple test to detect invalid ciphertext offsets?// - Should we encode the size of the header?// - Should we encode the size of the segments?// - Should a version be included in the header to allow header modification?// - Should we allow other information, header and the first segment the to be a multiple of// ciphertextSegmentSize?// - This implementation fixes a number of parameters. Should there be more options?// - Should we authenticate ciphertextSegmentSize and firstSegmentSize?// If an attacker can change these parameters then this would allow to move// the position of plaintext in the file.//",1,1,1,1,-1,-1,-1,-1
"// TODO(thaidn): test this when Android building and testing are supported.// On Android prefer Conscrypt, but allow fallback to other providers.",1,1,1,1,-1,-1,-1,-1
// This is identical to ED25519_RAW.// It is needed to maintain backward compatibility with SignatureKeyTemplates.// TODO(b/185475349): remove this in 2.0.0.,1,1,1,1,-1,-1,-1,-1
// This is identical to RSA_SSA_PKCS1_3072_SHA256_F4_RAW. It is needed to maintain backward// compatibility with SignatureKeyTemplates.// TODO(b/185475349): remove this in Tink 2.0.0.,1,1,1,1,-1,-1,-1,-1
// This is identical to RSA_SSA_PSS_3072_SHA256_F4. It is needed to maintain backward// compatibility with SignatureKeyTemplates.// TODO(b/185475349): remove this in Tink 2.0.0.,1,1,1,1,-1,-1,-1,-1
// This is identical to RSA_SSA_PSS_4096_SHA512_F4. It is needed to maintain backward// compatibility with SignatureKeyTemplates.// TODO(b/185475349): remove this in Tink 2.0.0.,1,1,1,1,-1,-1,-1,-1
// This key template does not make sense because IEEE P1363 mandates a raw signature.// It is needed to maintain backward compatibility with SignatureKeyTemplates.// TODO(b/185475349): remove this in 2.0.0.,1,1,1,1,-1,-1,-1,-1
// This key template is identical to ECDSA_P256_RAW.// It is needed to maintain backward compatibility with SignatureKeyTemplates.// TODO(b/185475349): remove this in 2.0.0.,1,1,1,1,-1,-1,-1,-1
"// Try another key.// IOException is thrown e.g. when MAC is incorrect, but also in case// of I/O failures.// TODO(b/66098906): Use a subclass of IOException.",1,1,1,1,-1,-1,-1,-1
// n is the number of blocks (including partial blocks) into which the data// is divided. Empty data is divided into 1 empty block.// Step 2: n = ceil(length / blocksize)// TODO(b/68969256): Adding a test that computes a CMAC of length 2**31-1.,1,1,1,1,-1,-1,-1,-1
